{"version":3,"file":"basicworker.js","mappings":"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","sources":["webpack://webpack-demo/./tmp/basicworker.js"],"sourcesContent":["//src/sys/modules/basic/worker/sys.js\n//src/sys/modules/basic/worker/basicarray.js\n//src/sys/modules/basic/worker/basicerrorhandler.js\n//src/sys/modules/basic/worker/basicruntime.js\n//src/sys/modules/basic/worker/extendedcommands.js\n//src/sys/modules/basic/worker/pgmmanager.js\n//src/sys/modules/basic/worker/basiccommands.js\n//src/sys/modules/basic/worker/basicparser.js\n//src/sys/modules/basic/worker/basictokenizer.js\n//src/sys/modules/basic/worker/input.js\n//src/sys/modules/basic/worker/processes.js\n//src/sys/modules/basic/worker/workerwrapper_static.js\n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n\n// ## sys.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/sys.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/sys.js\n\nvar sys = {\n  appName: \"unknown\",\n  unique: 0\n\n};\n\nconsole = sys;\n\n/* LOGGER */\n\nfunction init_sys() {\n\n  function post( type, message ) {\n    postMessage( { type: type, message: message } );\n  }\n\n  sys.log = function() {\n\n      var args = Array.prototype.slice.call(arguments);\n      var args2 = [];\n\n      for( var i=0; i<args.length ; i++) {\n        args2.push( JSON.stringify( args[ i ]) );\n      }\n      post(\"syslog\",args2 );\n\n  }\n\n  sys.logerr = function() {\n\n      var args = Array.prototype.slice.call(arguments);\n      post(\"syserr\",args );\n\n  }\n\n  sys.out = {}\n  sys.out.write = function() {\n\n      var args = Array.prototype.slice.call(arguments);\n      post( \"write\",args );\n\n  }\n\n  sys.out.writeln = function() {\n\n      var args = Array.prototype.slice.call(arguments);\n      post( \"writeln\",args );\n\n  }\n\n  sys.out.writec = function( c ) {\n\n      post( \"writec\", c );\n  }\n\n  sys.out.control = function( c ) {\n      post( \"control\", c  );\n\n  }\n\n  sys.out.control2 = function( c, d ) {\n      post( \"control2\", { c:c, d:d } );\n\n  }\n\n  sys.out.nl = function() {\n      post( \"writec\", \"\\n\" );\n  }\n\n\n  sys.html = {}\n  sys.html.html = function() {\n\n      var args = Array.prototype.slice.call(arguments);\n      post( \"html\",args );\n\n  }\n\n  sys.html.htmlnode = function() {\n\n    var args = Array.prototype.slice.call(arguments);\n    post( \"htmlnode\",args );\n\n  }\n\n\n  sys.html.get = function() {\n\n    post( \"htmlget\", args );\n    return { wait_for_result: true }\n\n  }\n\n}\n\nfunction start_sys() {\n  sys.log(\"Starting a bworker-wrapper\");\n\n  sys.processes = new processes( sys );\n  sys.input = new Input();\n\n  /* APPLICATION */\n\n  /* HANDLERS */\n  self.onmessage = function( obj ) {\n\n      try {\n        var data = obj.data;\n\n        if( data.type == \"loadpgm\" ) {\n\n          sys.log(\"Received 'loadpgm' message. Loaded \" + data.pgmData.length + \" bytes..\" );\n\n          var runtime = new BasicRuntime( sys );\n          sys.log(\"Context created, parsing program\");\n\n          runtime.importPGMHandler( data.pgmData, data.QPath  );\n          sys.log(\"Parsed program => RUN\");\n\n          runtime.runPGM();\n          sys.log(\"Program started...\");\n\n          sys.processes.register( runtime );\n          sys.log(\"Basic program registered as process.\");\n\n          pgmman.addRuntime( runtime );\n\n\n        }\n        else if( data.type == \"keydown\" ) {\n\n          //sys.log(\"Received 'kbevent' message. \" +  JSON.stringify( data ) );\n          var stop = false;\n\n          if( data.keyLabel ) {\n            if( data.keyLabel == \"Escape\" ) {\n              stop = true;\n            }\n          }\n          if( !stop ) {\n              sys.input.inputKeyHandler( data );\n          }\n          else {\n            sys.processes.getRoot().runStop();\n          }\n\n        }\n        else {\n          var type = obj.data;\n          if(! type ) {\n            type = \"????\";\n          }\n          else {\n            type=type.type;\n            if(! type ) {\n              type = \"????\";\n            }\n          }\n          sys.logerr( \"Ignored unclassified message type (\"+type+\") for 'APP://\"+sys.appName+\"':  \" + JSON.stringify( obj.data ) );\n          //postMessage( self.onAppMessage( obj ) );\n        }\n      }\n      catch( e ) {\n        if( e.message ) {\n          sys.logerr( e.message + \" at \" + e.fileName + \":\"+ e.lineNumber );\n        }\n        else if ( e.clazz ) {\n          sys.logerr( e.clazz + \": \" + e.detail + \" at \"+ e.lineNr );\n        }\n\n        sys.logerr( JSON.stringify( e ) );\n\n      }\n\n    }\n}\n\ninit_sys();\n\n//--EOC \n\n// ## basicarray.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basicarray.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basicarray.js\n\nclass  BasicArray {\n\n  constructor( name, indices, defaultValue  ) {\n    this.name = name;\n    this.indices = indices;\n    this.buffer = null;\n    this.defaultValue = defaultValue;\n  }\n\n  getIndexCount() {\n    return this.indices.length;\n  }\n\n  _check( indices ) {\n    if( indices.length != this.indices.length ) {\n      throw \"00:index dimension mismatch for array \" + this.name;\n    }\n    for( var i=0; i<indices.length; i++) {\n      if ( indices[i] > this.indices[ i ]) {\n        throw \"01:index \" + indices[i] + \" out of bounds for array \" + this.name + \" for index \" + i;\n      }\n      else if ( indices[i] < 0) {\n        throw \"02:index smaller then zero for array \" + this.name;\n      }\n\n    }\n  }\n\n  set( indices, val ) {\n    this._check( indices );\n    if( this.buffer == null ) {\n      this.buffer = [];\n    }\n    var ptr = this.buffer;\n    var last = indices.length - 1;\n    for( var i=0; i<=last; i++) {\n\n      if( i == last ) {\n        ptr[ indices[ i ]] = val;\n      }\n      else {\n        if( (ptr [ indices[i] ] === undefined )) {\n          ptr[ indices[ i ]] = [];\n        }\n        ptr = ptr[ indices[ i ]];\n      }\n    }\n  }\n\n  get( indices ) {\n    this._check( indices );\n\n    if( this.buffer == null ) {\n      return this.defaultValue;\n    }\n    var ptr = this.buffer;\n    var last = indices.length - 1;\n    for( var i=0; i<=last; i++) {\n\n      if( i == last ) {\n        return ptr[ indices[ i ]];\n      }\n      else {\n        if( (ptr [ indices[i] ] === undefined )) {\n          return this.defaultValue;\n        }\n        ptr = ptr[ indices[ i ]];\n      }\n    }\n  }\n\n}\n\n//--EOC \n\n// ## basicerrorhandler.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basicerrorhandler.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basicerrorhandler.js\n\nclass ErrorHandler {\n\n  newError( clazz, detail, context, lineNr ) {\n    return { context: context, clazz: clazz, detail: detail, lineNr: lineNr };\n  }\n\n  throwError( clazz, detail, context, lineNr ) {\n    throw this.newError( clazz, detail, context, lineNr );\n  }\n\n  fromSerializedError( s, context, lineNr0 ) {\n\n    var lineNr = lineNr0;\n    if( lineNr === undefined ) {\n      lineNr = -1;\n    }\n    if( ! this.isSerializedError( s ) ) {\n      return this.newError( \"unknown\", null, context, lineNr );\n    }\n    var parts = s.substr(1).split(\"@\");\n    if( parts.length == 1 ) {\n        return this.newError( parts[0], null, context, lineNr );\n    }\n    return this.newError( parts[0], parts[1], context, lineNr );\n\n  }\n\n  isSerializedError( e ) {\n    if( typeof e != \"string\" ) {\n      return false;\n    }\n    return e.startsWith( \"@\" );\n  }\n\n  isError( e ) {\n    if( Object.prototype.toString.call( e ) === '[object Object]' ) {\n      var ctx = e[ \"context\" ];\n      var clss = e[ \"clazz\" ];\n      var dtl = e[ \"detail\" ];\n\n      if( !( clss === undefined ) ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n//--EOC \n\n// ## basicruntime.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basicruntime.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basicruntime.js\n\nclass BasicRuntime {\n\n  constructor( sys ) {\n\n    this.debugFlag = false;\n    this.sys = sys;\n\n    this.output = sys.out;\n    this.input = sys.input;\n    this.input.setHandler( this );\n    this.input.setInterActive( false);\n    this.html = sys.html;\n\n    this.program = [];\n    this.runFlag = false;\n    this.waitForMessageFlag = false;\n    this.waitForMessageVariable = null;\n    this.message = null;\n    this.executeLineFlag = false;\n    this.goPlayExampleFlag = false;\n    this.breakCycleFlag;\n    this.inputFlag = false;\n    this.listFlag = false;\n    this.immersiveFlag = false;\n    this.gosubReturn = [];\n    this.nullTime = new Date().getTime();\n\n    this.turboMode = false;\n    this.cmdCountPerCycleDefault = 1;\n    this.cmdCountPerCycleTurbo = 1000;\n    this.cmdCountPerCycle = this.cmdCountPerCycleDefault ;\n\n    //var ctx = this.outtext;\n    var c = this.output;\n    this.commands = new BasicCommands( this );\n    this.extendedcommands = new ExtendedCommands( this );\n    //this.extendedcommands.getStatements = function() { return [] };\n    //this.extendedcommands.getFunctions  = function() { return [] };\n\n    this.erh = new ErrorHandler();\n    this.vars = [];\n    this.functions = [];\n    this.data = [];\n    this.kbBuffer = [];\n\n    this.yPos = -1;\n    this.lineMarkers = [ 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ];\n    this.SHORTLINE = 0;\n    this.LONGLINESTART = 1;\n    this.LONGLINEEND = 2;\n\n    this.forContext = { default:[] }\n\n    this.outputCallBacksAll = {\n        lineOverFlow: { clazz: this, method: \"cbLineOverFlow\" },\n        scroll: { clazz: this, method: \"cbScroll\" },\n        clearScreen: { clazz: this, method: \"cbClearScreen\" }\n    }\n\n    this.outputCallBacksClScr = {\n        lineOverFlow: undefined,\n        scroll: { clazz: this, method: \"cbScroll\" },\n        clearScreen: { clazz: this, method: \"cbClearScreen\" }\n    }\n\n    this.setTurbo( true );\n    this.synchClock( );\n    this.exitMode = \"stay\";\n\n    this.code2colMap = [];\n    var km = this.code2colMap;\n\n    km[0x90] = 0;\n    km[0x05] = 1;\n    km[0x1c] = 2;\n    km[0x9f] = 3;\n    km[0x9c] = 4;\n    km[0x1e] = 5;\n    km[0x1f] = 6;\n    km[0x9e] = 7;\n\n    km[0x81] = 8;\n    km[0x95] = 9;\n    km[0x96] = 10;\n    km[0x97] = 11;\n    km[0x98] = 12;\n    km[0x99] = 13;\n    km[0x9a] = 14;\n    km[0x9b] = 15;\n\n    this.symbolTable = {};\n\n    this.symbolTable.up     = 0x91;\n    this.symbolTable.down   = 0x11;\n    this.symbolTable.left   = 157;\n    this.symbolTable.right  = 29;\n    this.symbolTable[\"reverse on\"]  = 0x12;\n    this.symbolTable[\"reverse off\"]  = 0x92;\n    this.symbolTable[\"clear\"]  = 0x93;\n    this.symbolTable[\"home\"]  = 0x13;\n    this.symbolTable.black  = 144;\n    this.symbolTable.white  = 5;\n    this.symbolTable.red  = 28;\n    this.symbolTable.cyan  = 159;\n    this.symbolTable.purple  = 156;\n    this.symbolTable.green  = 30;\n    this.symbolTable.blue  = 31;\n    this.symbolTable.yellow  = 158;\n    this.symbolTable.orange  = 129;\n    this.symbolTable.brown  = 149;\n    this.symbolTable.pink  = 150; // light red\n    this.symbolTable.grey1  = 151;  //dark grey\n    this.symbolTable.grey2  = 152;\n    this.symbolTable[\"light green\"]  = 153;\n    this.symbolTable[\"light blue\"]  = 154;\n    this.symbolTable.grey3  = 155; //light grey\n\n\n    var backmap = []\n    var mapInfo = Object.entries(this.symbolTable);\n    for( var i=0; i<mapInfo.length; i++) {\n      backmap[ mapInfo[i][1]] = mapInfo[i][0];\n    }\n    this.symbolTableBM = backmap;\n\n  }\n\n  startWaitForMessage( variable ) {\n    this.waitForMessageFlag = true;\n    this.waitForMessageVariable = variable;\n  }\n\n  receiveMessage( _message ) {\n    this.message = _message;\n    this.vars[ this.waitForMessageVariable ] = _message;\n    this.waitForMessageFlag = false;\n  }\n\n\n  interactiveKeyHandler( kbEvent ) {\n\n    if( kbEvent.keyLabel != \"Enter\" ) {\n      if( kbEvent.key != null ) {\n        this.lineInput += kbEvent.key;\n        this.output.write( kbEvent.key );\n      }\n    }\n    else {\n      this.output.writeln(\"\");\n      this.handleLineInput( this.lineInput, true );\n    }\n\n  }\n\n  HandleStopped() {\n    //old panicIfStopped\n  }\n\n  importPGMHandler( content, filename ) {\n    var pgm = this.textLinesToBas( content.split(\"\\n\") );\n    this.fileName = filename;\n\n    this.program = pgm;\n    this.sys.log( \"imported program \" + filename +\" with \" + content.length + \" bytes \");\n  }\n\n  exportPGM() {\n    var exportName = \"program.bas\";\n    if( this.fileName ) {\n      exportName = this.fileName;\n    }\n\n    var text = this.getProgramAsText();\n    this.DESKTOP.requestDownload( text, exportName );\n  }\n\n  exitProgram() {\n    this.closeWindow( this.windowId );\n  }\n\n\n  enterListMode( list ) {\n    this.listFlag = true;\n    this.list = list;\n    this.listPointer = 0;\n  }\n\n  setExitMode( v ) {\n    this.exitMode = v;\n  }\n\n  synchClock() {\n\n    //var clock = new Date().getTime();\n    var nullClock = new Date();\n    nullClock.setHours(0);\n    nullClock.setSeconds(0);\n    nullClock.setMinutes(0);\n    nullClock.setMilliseconds(0);\n\n    this.nullTime = nullClock;\n\n  }\n\n  setTurbo( on ) {\n    if( on ) {\n      this.cmdCountPerCycle = this.cmdCountPerCycleTurbo ;\n      this.turboMode = true;\n      this.cursorCountMax = this.cursorCountMaxTurbo;\n      return;\n    }\n    this.cmdCountPerCycle = this.cmdCountPerCycleDefault ;\n    this.turboMode = false;\n      this.cursorCountMax = this.cursorCountMaxNormal;\n  }\n\n  setProgram( pgm ) {\n    this.program = pgm;\n    this.runFlag = false;\n    this.HandleStopped();\n\n    this.inputFlag = false;\n    this.listFlag = false;\n    //this.output.clearCursor();\n  }\n\n  appendProgram( pgm ) {\n\n    for(var i=0; i<pgm.length; i++) {\n      var exists = -1;\n\n      for(var j=0; j<this.program.length; j++) {\n        if( this.program[j][0] == pgm[i][0] ) {\n          exists = j;\n        }\n      }\n\n      if( exists>-1 ) {\n        this.program[ exists ] = pgm[ i ];\n      }\n      else {\n        this.program.push( pgm[ i ] );\n      }\n    }\n\n    var sortF = function compare( a, b ) {\n      return a[0] - b[0];\n    }\n\n    this.program.sort( sortF );\n\n    this.runFlag = false;\n    this.HandleStopped();\n\n    this.inputFlag = false;\n    this.listFlag = false;\n    //this.output.clearCursor();\n  }\n\n  getProgram() {\n    return this.program;\n  }\n\n  getProgramState() {\n    return {\n      runFlag: this.runFlag,\n      inputFlag: this.inputFlag,\n      vars: this.vars,\n      functions: this.functions,\n      forContext: this.forContext,\n      runPointer: this.runPointer,\n      runPointer2: this.runPointer2\n    }\n  }\n\n  setProgramState( pgmState ) {\n      this.runFlag = pgmState.runFlag;\n      this.HandleStopped();\n      this.inputFlag = pgmState.inputFlag;\n      this.vars = pgmState.vars;\n      this.functions = pgmState.functions;\n      this.forContext = pgmState.forContext;\n      this.runPointer = pgmState.runPointer;\n      this.runPointer2 = pgmState.runPointer2;\n  }\n\n\n  updateEditMode() {\n\n\n    if( !this.runFlag && !this.listFlag && ! this.executeLineFlag ) {\n      this.setEditModeCallBacks( \"edit\" );\n      return;\n    }\n    else if( this.listFlag ) {\n      this.setEditModeCallBacks( \"edit\" );\n      return;\n    }\n    else if( this.runFlag && this.inputFlag ) {\n      this.setEditModeCallBacks( \"edit\" );\n      return;\n    }\n    else if( this.runFlag || this.executeLineFlag ) {\n      this.setEditModeCallBacks( \"print\" );\n      return;\n    }\n  }\n\n  _setByteBits( bits ) {\n\n   var byte = 0b00000000;\n\n   for( var i=0; i<8; i++) {\n     if(i>0) {\n       byte = byte >> 1;\n     }\n     if( bits[i]) {\n       byte = byte | 128;\n     }\n   }\n   return byte;\n  }\n\n  _getByteBits( byte ) {\n    var masks = [\n      0b00000001,0b00000010,0b00000100,0b00001000,\n      0b00010000,0b00100000,0b01000000,0b10000000\n    ];\n\n   var results = [ false, false, false, false, false, false, false, false ];\n\n   for( var i=0; i<8; i++) {\n\n     results[ i ] = (byte & masks[i]) > 0;\n\n   }\n\n   return results;\n  }\n\n  printError( s, supressLine, explicitline ) {\n\n\n    if( explicitline ) {\n        this.output.writeln( (\"?\" + s + \" error in \" + explicitline ).toUpperCase() );\n        return;\n    }\n    if( supressLine ) {\n\n        this.output.writeln( (\"?\" + s + \" error\").toUpperCase(), true );\n        return;\n    }\n    this.output.writeln(  (\"?\" + s + \" error\" + this.onLineStr()).toUpperCase(), true );\n\n  }\n\n  printInfo( s ) {\n\n    this.sys.log(  ( s + this.onLineStr()).toUpperCase() );\n\n  }\n\n  printLine( s ) {\n    this.output.writeln(s.toUpperCase());\n    this.reverseOn = false;\n  }\n\n  print( s ) {\n    this.output.writeln(s.toUpperCase());\n    this.reverseOn = false;\n  }\n\n\n  clearScreen() {\n    this.output.clearScreen();\n    this.output.cursorHome();\n  }\n\n\n  getJiffyTime() {\n    var millis=new Date().getTime() - this.nullTime;\n    var jiffis = Math.floor(millis / (1000 / 60));\n\n    return jiffis % 5184000;\n  }\n\n  getTime() {\n    var millis=new Date().getTime() - this.nullTime;\n    millis = millis % 86400000;\n\n    var hours = Math.floor(millis / 3600000);\n    millis = millis - (hours * 3600000 );\n    var minutes = Math.floor(millis / 60000);\n    millis = millis - (minutes * 60000 );\n    var seconds = Math.floor(millis / 1000);\n    //millis = millis - (seconds * 1000 );\n    return [hours,minutes,seconds];\n  }\n\n  reset( hard, muteReady ) {\n    this.output.clearScreen();\n    this.output.writel(\"ready.\");\n\n    this.inputFlag = false;\n    this.runFlag = false;\n    this.listFlag = false;\n\n    this.clrPGM();\n    this.setTurbo( false );\n  }\n\n  passChars( chs, nl ) {\n\n    this.hideDebug();\n    var xy = this.sendChars( chs, nl );\n\n  }\n\n  compressPGMText( pgmTxt ) {\n\n    var p = new Parser( this.commands, this.extendedcommands );\n    p.init();\n    var kws = p.getKeyWordCodes();\n    var txt2 = pgmTxt;\n\n    for( var i=0; i<kws.length; i++) {\n      var kw = kws[i];\n      if( !(kw===undefined || kw === null )) {\n          txt2 = txt2.replaceAll( kw.toLowerCase() , String.fromCharCode(i));\n      }\n    }\n\n    return txt2;\n  }\n\n\n  getProgramAsTextNoPETSCII() {\n    var text = \"\";\n    for (const l of this.program)\n      {\n        if( text != \"\") {\n          text += \"\\n\";\n        }\n        text +=  this.prepareLineForExportNoPETSCII( l[2].trim(), true );\n      }\n    return text;\n  }\n\n\n  getProgramAsText() {\n    var text = \"\";\n    for (const l of this.program)\n      {\n        if( text != \"\") {\n          text += \"\\n\";\n        }\n        text +=  this.prepareLineForExport( l[2].trim() );\n      }\n    return text;\n  }\n\n  prepareLineForExport( txt0 ) {\n    var txt;\n    txt = txt0.trim();\n    var dst = \"\";\n\n    for( var i=0; i<txt.length; i++) {\n      var c = txt.charCodeAt( i );\n      if( c<31 || c==92 || c>=94 ) {\n        var symdef = this.symbolTableBM[ c ];\n        if( ! ( symdef === undefined ) ) {\n            dst += \"{\" + symdef + \"}\";\n        }\n        else {\n            dst += \"{\"+c+\"}\"\n        }\n\n      }\n      else {\n        dst += txt.charAt( i );\n      }\n    }\n    return dst.toLowerCase();\n  }\n\n  replaceAll( src, str1, str2 ) {\n\n    var rv = src;\n    while( rv.indexOf( str1 ) > -1 ) {\n      rv = rv.replace( str1, str2 );\n    }\n    return rv;\n  }\n\n\n  rebuildNoPETSCIILineString( raw )\n  {\n\n    var p = new Parser( this.commands, this.extendedcommands );\n    p.init();\n    var noPetsciiLine = this.prepareLineForExportNoPETSCII( raw, false );\n    var rec = p.parseLine( noPetsciiLine );\n    return rec;\n  }\n\n\n  prepareLineForExportNoPETSCII( txt0, toLower ) {\n    var txt;\n    txt = txt0.trim();\n    var dst = \"\";\n    var last= \"\";\n\n    for( var i=0; i<txt.length; i++) {\n      var c = txt.charCodeAt( i );\n      var cc = txt.charAt( i );\n      if( c<31 || c==92 || c>=94 ) {\n\n        var prevCharIsQuote = false, nextCharIsQuote=false;\n        if( (i+1)<txt.length) {\n          var cc2 = txt.charAt( i+1 );\n          if( cc2 == \"\\\"\" ) {\n            nextCharIsQuote = true;\n          }\n        }\n        if( last == \"\\\"\" ) {\n            prevCharIsQuote = true;\n          }\n\n        if( prevCharIsQuote && !nextCharIsQuote ) {\n            dst = dst.substr( 0, dst.length-1 );\n            dst += \"CHR$(\"+c+\");\\\"\";\n        }\n        else if( prevCharIsQuote && nextCharIsQuote ) {\n            dst = dst.substr( 0, dst.length-1 );\n            dst += \"CHR$(\"+c+\")\";\n            i++;\n        }\n        else if( !prevCharIsQuote && nextCharIsQuote ) {\n            dst += \"\\\";CHR$(\"+c+\")\";\n            i++;\n        }\n\n        else {\n            dst += \"\\\";CHR$(\"+c+\");\\\"\";\n        }\n      }\n      else {\n        dst += txt.charAt( i );\n      }\n      last = cc;\n    }\n\n    var dst2= this.replaceAll( dst, \";\\\"\\\";\",\";\");\n\n    if( toLower ) { return dst2.toLowerCase(); }\n    return dst2;\n  }\n\n  ResolveStringSymbolToCode( x ) {\n\n    if(this.symbolTable[x]) {\n      return this.symbolTable[x];\n    }\n\n    return x;\n  }\n\n  prepareLineForImport( txt0 ) {\n    var txt;\n    txt = txt0.trim(); //.toUpperCase();\n    var dst = \"\";\n\n    var i=0; while( i<txt.length ) {\n      var c = txt.charCodeAt( i );\n      if( c == 123 ) {\n        i++;\n        var num = \"\";\n        while( i < txt.length ) {\n            c = txt.charCodeAt( i );\n            if( c == 125 ) {\n              i++;\n              break;\n            }\n            num += String.fromCharCode( c );\n\n            if( this.debugFlag ) {\n              console.log(\"found ESC seq char \" + String.fromCharCode( c ) );\n              console.log(\"found ESC seq char code \" + c);\n            }\n            i++;\n        }\n\n        if( this.debugFlag ) {\n          console.log(\"found ESC seq \" + num);\n        }\n\n        num = this.ResolveStringSymbolToCode(num.toLowerCase());\n\n        if( this.debugFlag ) {\n          console.log(\"found resolved ESC seq \" + num);\n        }\n\n        dst += String.fromCharCode( parseInt( num, 10) );\n      }\n      else if( c == 8221 || c == 8220) { //looks like a double quote\n        dst += \"\\\"\";\n        i++;\n      }\n      else {\n        dst += txt.charAt( i );\n        i++;\n      }\n    }\n\n    if( this.debugFlag ) {\n      console.log(\"dst:\" + dst);\n    }\n\n    return dst;\n  }\n\n  getProgramLines() {\n\n    return this.program;\n  }\n\n  padZeros2( x ) {\n    var s = x + \"\";\n    for(var i=s.length; i<2; i++) {\n      s=\"0\"+s;\n    }\n    return s;\n  }\n\n  evalExpressionPart( p ) {\n    var val=0;\n\n    if( p.type==\"num\" ) {\n      if( p.data == \".\" ) {\n        val = 0;\n      }\n      else if( p.data == \"~\" ) {\n        val = Math.PI;\n      }\n      else if((\"\"+p.data).indexOf(\".\") >= 0) {\n        val = parseFloat(p.data);\n      }\n      else {\n        val = parseInt(p.data);\n      }\n    }\n    else if( p.type==\"str\" ) {\n      val = p.data;\n    }\n    else if( p.type==\"var\" ) {\n      if(p.data.startsWith(\"TI\")) {\n        val = this.getJiffyTime();\n        if(p.data.endsWith(\"$\")) {\n          val = this.getTime();\n          val = \"\" +\n            this.padZeros2(val[0]) +\n            this.padZeros2(val[1]) +\n            this.padZeros2(val[2]);\n        }\n      }\n      else {\n        val = this.vars[ p.data ];\n      }\n      if( val == undefined ) {\n        val = 0;\n      }\n    }\n    else if( p.type==\"array\" ) {\n      var varIntName = \"@array_\" + p.data;\n      var arr = this.vars[ varIntName ];\n\n      if( arr === undefined ) {\n        throw \"@no such array\";\n      }\n\n      if( arr.getIndexCount() != p.indices.length ) {\n          throw \"@bad subscript\";\n      }\n\n      var indices = [];\n      for( var ai=0; ai<p.indices.length; ai++) {\n        indices[ai] = this.evalExpression( p.indices[ ai ] );\n      }\n\n      val = arr.get( indices );\n      if( val === undefined ) {\n        val = 0;\n      }\n\n    }\n    else if( p.type==\"expr\" ) {\n      val = this.evalExpression( p );\n    }\n    else if( p.type==\"funCall\" ) {\n\n      var values = [];\n      for( var j=0; j<p.params.length; j++) {\n        var par = this.evalExpression( p.params[j] );;\n        values.push( {value: par} );\n      }\n      try {\n        var commands = this.commands;\n        var ecommands = this.extendedcommands;\n        var cmds = this.commands;\n\n        var nFunName = \"_fun_\" + p.functionName.toLowerCase().replace(\"$\",\"_DLR_\");\n\n        var stc = commands[ nFunName ];\n        if( stc === undefined ) {\n\n          stc = ecommands[ nFunName ];\n\n          if( stc === undefined ) {\n\n            stc = ecommands[ nFunName ];\n\n            this.printError(\"no such function \" + p.functionName);\n            console.log(\"Cannot find functionName \" + nFunName );\n\n            throw \"@no such function \" + p.functionName;\n\n          }\n          else {\n            cmds = ecommands;\n          }\n        }\n\n        val = cmds[ nFunName ]( values );\n\n      }\n      catch ( e ) {\n        throw e;\n      }\n    }\n    else if( p.type==\"defFnCall\" ) {\n\n      try {\n        var fName = p.functionName;\n        var parValue = this.evalExpression( p.params[0] );\n        var restore = null;\n\n        if( this.functions[ fName ] === undefined ) {\n          throw \"@undef'd function\";\n        }\n        var functRecord = this.functions[ fName ];\n\n        if(!(  this.vars[ functRecord.par ] === undefined )) {\n          restore= this.vars[ functRecord.par ];\n        }\n\n        this.vars[ functRecord.par ] = parValue;\n        val  = this.evalExpression( functRecord.expr );\n\n        if( restore != null ) {\n          this.vars[ restore.name ] = restore;\n        }\n        else {\n          this.vars[ functRecord.par ] = 0; //TODO, actually should delete it\n        }\n\n      }\n      catch ( e ) {\n        throw e;\n      }\n    }\n\n    return val;\n  }\n\n  evalExpression( expr ) {\n\n    if( expr == null ) {\n      return null;\n    }\n\n    if( expr.parts.length == 0 ) {\n      return null;\n    }\n\n    var val = this.evalExpressionPart( expr.parts[ 0 ] );\n\n    for( var i=1; i<expr.parts.length; i++) {\n      var p = expr.parts[ i ];\n      if( p.op == \"+\" ) {\n        val += this.evalExpressionPart( p );\n      }\n      else if( p.op == \"^\" ) {\n        val = Math.pow( val, this.evalExpressionPart( p ) );\n      }\n      else if( p.op == \"-\" ) {\n        val -= this.evalExpressionPart( p );\n      }\n      else if( p.op == \"*\" ) {\n        val *= this.evalExpressionPart( p );\n      }\n      else if( p.op == \"/\" ) {\n        if( this.evalExpressionPart( p ) == 0) {\n          throw \"@division by zero\";\n        }\n        val /= this.evalExpressionPart( p );\n      }\n      else if( p.op == \";\" ) {\n        val += (\"\" + this.evalExpressionPart( p ));\n      }\n      else if( p.op == \"OR\"  ) {\n          val |= this.evalExpressionPart( p );\n      }\n      else if( p.op == \"AND\"  ) {\n          val &= this.evalExpressionPart( p );\n      }\n      else if( p.op == \"<\" ) {\n        if( val < (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \">\" ) {\n        if( val > (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \"=\" ) {\n        if( val == (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \"<>\" ) {\n        if( val != (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \"<=\" ) {\n        if( val <= (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \">=\" ) {\n        if( val >= (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n\n      else {\n        throw \"@unknown op '\"+p.op+\"'\";\n      }\n    }\n\n    if( expr.negate ) {\n      return -val;\n    }\n    if( expr.binaryNegate ) {\n      if( val == 0 ) {\n        return -1;\n      }\n      return 0;\n    }\n    return val;\n  }\n\n  exitInputState() {\n    var c = this.output;\n    var p = this.program;\n\n    this.inputFlag = false;\n\n\n    var l = this.program[ this.runPointer ];\n    var cmds = l[1];\n    //console.log(cmds);\n\n\n    if( this.runPointer > -1 ) {\n\n        var l=this.program[this.runPointer];\n        //console.log( l[0] + \"after input >>(\" + this.runPointer + \":\"  + this.runPointer2 +\")\");\n    }\n\n    this.runPointer2++;\n\n    if( this.runPointer > -1 ) {\n\n        var l=this.program[this.runPointer];\n        //console.log( l[0] + \"after input >>>(\" + this.runPointer + \":\"  + this.runPointer2 +\")\");\n    }\n\n    if( this.runPointer2 >=  cmds.length ) {\n\n\n      this.runPointer2 = 0;\n      this.runPointer++;\n\n      if( this.runPointer > -1 ) {\n\n          var l=this.program[this.runPointer];\n          //console.log( l[0] + \"after input >>>>(\" + this.runPointer + \":\"  + this.runPointer2 +\")\");\n      }\n\n\n      if( this.runPointer >=  p.length ) {\n\n        if( this.runPointer > -1 ) {\n\n            var l=this.program[this.runPointer];\n            //console.log( l[0] + \"after input >>>>>(\" + this.runPointer + \":\"  + this.runPointer2 +\")\");\n        }\n\n        this.runFlag = false;\n\n        this.HandleStopped();\n        c.clearCursor();\n        this.printLine(\"\");\n        this.printLine(\"ready.\");\n      }\n\n    }\n\n\n  }\n\n  breakCycle() {\n    this.breakCycleFlag = true;\n  }\n\n  cycle() {\n\n    /*return values*/\n    var END_W_ERROR = 0;\n    var TERMINATE_PROGRAM = -1;\n    var LINE_FINISHED = 10;\n    var MIDLINE_INTERUPT = 20;\n    var TERMINATE_W_JUMP = 30;\n    var PAUSE_F_INPUT = 40;\n\n    var c = this.output;\n\n    var cmdCount = this.cmdCountPerCycle;\n\n\n\n    try {\n\n\n\n      if( !this.runFlag ||\n            this.inputFlag ||\n            this.listFlag\n             ) {\n\n        if( this.listFlag ) {\n           if( this.listPointer < this.list.length ) {\n               this.listCodeLine( this.list[ this.listPointer ] );\n               this.listPointer++;\n           }\n           else {\n             this.listFlag = false;\n             this.printLine(\"ready.\");\n           }\n\n        }\n        if(this.cursorCount++>this.cursorCountMax) {\n          this.cursorCount = 0;\n\n          if( !this.listFlag )\n            {\n              c.blinkCursor();\n            }\n        }\n      }\n      else {\n\n        if(this.debugFlag) console.log(\"START CYCLE------------------------------\" );\n\n        if( this.waitForMessageFlag ) {\n            return;\n        }\n\n        var p = this.program;\n\n        while (true) {\n\n          if( this.breakCycleFlag ) {\n            this.breakCycleFlag = false;\n            break;\n          }\n          if(this.debugFlag) console.log(\"START CYCLE LOOP-------------\" );\n          var l = p[ this.runPointer ];\n          var bf = this.runPointer2;\n          if(this.debugFlag) console.log(\" this.runPointer = \" + this.runPointer, \" this.runPointer2 = \" + this.runPointer2 );\n          if(this.debugFlag) console.log(\" cmdCount = \" + cmdCount);\n          var rv = this.runCommands( l[1], cmdCount );\n          //console.log(\" rv = \", rv);\n          var af = rv[ 1 ];\n\n          if( rv[0] == MIDLINE_INTERUPT) {\n            this.runPointer2 = af;\n          }\n\n          var executedCount = rv[2];\n\n          if(this.debugFlag) console.log(\" bf = \" + bf, \" af = \" + af);\n          if(this.debugFlag) console.log(\" executedCount = \" + executedCount);\n          if(this.debugFlag) console.log(\" rv = \" + rv);\n\n          cmdCount = cmdCount - executedCount;\n\n          if( rv[0]<=0 ) {\n            if(this.debugFlag) console.log(\" PGM END!!!!\" );\n            this.runFlag = false;\n            var e = null;\n            if( rv.length >= 4 ) {\n              e = rv[3];\n            }\n            this.printLine(\"\");\n            this.printLine(\"ready.\");\n            this.HandleStopped();\n            if( rv[0] == END_W_ERROR ) {\n              console.log(\"ERROR: \", e, \" LINE \", this.retreiveRuntimeLine() );\n              console.log(\"PARAMETER DUMP:\", this.vars );\n              console.log(\"FUNCTION DUMP:\", this.functions );\n            }\n            if(this.debugFlag) console.log(\"CYCLE RETURN END\");\n            return;\n          }\n          else if( rv[0] == LINE_FINISHED ) {\n            this.runPointer ++;\n            this.runPointer2 = 0;\n            if(this.debugFlag) console.log(\" new this.runPointer = \" + this.runPointer, \" this.runPointer2 = \" + this.runPointer2 );\n\n            if( this.runPointer >=  p.length ) {\n              if(this.debugFlag) console.log( \"end program\");\n              this.runFlag = false;\n              this.HandleStopped();\n\n              this.printLine(\"ready.\");\n              break;\n            }\n          }\n          else if( rv[0] == TERMINATE_W_JUMP ) {\n\n            if(this.debugFlag) console.log(\" jump to new this.runPointer = \" + this.runPointer, \" this.runPointer2 = \" + this.runPointer2 );\n\n          }\n          else if( rv[0] == PAUSE_F_INPUT ) {\n\n            this.runPointer2 = af;\n            if(this.debugFlag) console.log(\"CYCLE PAUSE 4 INPUT\" + this.runPointer + \",\" + this.runPointer2);\n            break;\n\n          }\n\n          if( cmdCount<=0 ) {\n            if(this.debugFlag) console.log(\"Breaking cmdCount=\" + cmdCount)\n            break;\n          }\n\n        }\n\n        if(this.debugFlag) console.log(\" this.runPointer = \" + this.runPointer, \" this.runPointer2 = \" + this.runPointer2 );\n\n      }\n\n    }\n    catch (e) {\n      //c.clearCursor();\n\n      if( this.erh.isSerializedError( e ) ) {\n        var err = this.erh.fromSerializedError( e );\n        this.printError( err.clazz );\n      }\n      else {\n        this.printError(\"unexpected\");\n      }\n\n      this.printLine(\"ready.\");\n      this.runFlag = false;\n\n      sys.log(\"ERROR: \", e, \" LINE \", this.retreiveRuntimeLine() );\n      sys.log(\"PARAMETER DUMP:\", this.vars );\n      sys.log(\"FUNCTION DUMP:\", this.functions );\n\n    }\n  }\n\n  doReturn() {\n\n    var oldPointers = this.gosubReturn.pop();\n    if( oldPointers === undefined ) {\n      throw \"@return without gosub\";\n    }\n\n    this.runPointer2 = oldPointers[ 1 ];\n    this.runPointer = oldPointers[ 0 ];\n\n    //this.goto( oldLine );\n  }\n\n  gosub( line, runPointer2 ) {\n\n    var pgm = this.program;\n    var len=this.program.length;\n    var retLine = null;\n    var retCmd = null;\n\n    this.runPointer2 = runPointer2;\n\n    if( ( this.runPointer2 + 1) < this.program[ this.runPointer ][1].length ) {\n      retCmd = this.runPointer2 + 1;\n      retLine = this.runPointer;\n    }\n    else {\n      if( (this.runPointer+1) < len ) {\n        retCmd=0;\n        retLine = this.runPointer+1 ;\n      }\n      else {\n        retCmd=9999;\n        retLine = this.runPointer;\n      }\n    }\n\n    this.gosubReturn.push( [ retLine, retCmd ] );\n    this.goto( line );\n  }\n\n  goto( line ) {\n\n    //console.log( \"goto line \" + line)\n    var pgm = this.program;\n    var len=this.program.length;\n    var found = false;\n\n    for( var i=0; i<len; i++) {\n      var l = pgm[i];\n\n      if( l[0] == line ) {\n        this.runPointer = i;\n        this.runPointer2 = 0;\n        found = true;\n      }\n    }\n\n    if(!found ) {\n      throw \"@undef'd statement\";\n    }\n\n    if(!this.runFlag ) {\n      this.startAsGoto = true;\n      this.runPGM();\n    }\n  }\n\n  listStop() {\n    if( this.listFlag ) {\n      var c = this.output;\n      this.listFlag = false;\n      c.clearCursor();\n      this.printLine( \"ready.\");\n    }\n  }\n\n  runStop() {\n    if( this.runFlag ) {\n      var c = this.output;\n      this.runFlag = false;\n      this.HandleStopped();\n\n      console.log( \"break in \" + this.program[ this.runPointer ][0] );\n      this.printLine( \"break in \" + this.program[ this.runPointer ][0]);\n      this.printLine( \"ready.\");\n    }\n  }\n\n  isRunning() {\n    return this.runFlag;\n  }\n\n  isListing() {\n    return this.listFlag;\n  }\n\n  isInput() {\n    return this.inputFlag;\n  }\n\n  readData() {\n\n    if( this.dataPointer >= this.data.length ) {\n      return undefined;\n    }\n\n    var result = this.data[ this.dataPointer ];\n    this.dataPointer++;\n\n    return result;\n  }\n\n\n  listCodeLine( rawLine ) {\n\n    var inString = false;\n    for( var i=0; i<rawLine.length; i++ ) {\n\n      var c = rawLine.charAt(i);\n\n      if( !inString ) {\n        this.sendChars( c, false  );\n      }\n      else {\n        this.sendCharsSimple( c, false );\n      }\n\n      if( c == \"\\\"\" ) {\n        inString = !inString;\n      }\n    }\n    this.printLine( \"\" );\n\n  }\n\n  rebuildLineString( nr, raw,\n      removePadding,\n      renumbering,\n      addSmartPadding,\n      shortenKeywords)\n  {\n\n    var p = new Parser( this.commands, this.extendedcommands );\n    p.init();\n\n    var tokens = p.getTokens( raw, false, false );\n\n    if( ! ( renumbering === undefined )) {\n\n      var foundGoto = false;\n      for( i = 0; i<tokens.length; i++) {\n        if( tokens[i].type == \"name\" && (tokens[i].data == \"GOTO\" || tokens[i].data == \"GOSUB\") ) {\n          foundGoto = true;\n        } else {\n          if( i>1 ) {\n            if( tokens[i].type == \"num\" &&\n                tokens[i-1].type == \"pad\" &&\n                tokens[i-2].type == \"name\" && tokens[i-2].data == \"THEN\" ) {\n              foundGoto = true;\n            }\n            else if( tokens[i].type == \"num\" && tokens[i-1].type == \"name\" && tokens[i-1].data == \"THEN\" ) {\n              foundGoto = true;\n            }\n          }\n        }\n\n        if( tokens[i].type == \"num\" && foundGoto ) {\n          var newLine = renumbering[ \"old_\" + tokens[i].data ];\n          if( newLine == undefined ) { newLine = 99999;}\n          tokens[i].data =newLine;\n          foundGoto = false;\n        }\n      }\n    }\n    tokens[0].data = nr;\n    var newString;\n\n    newString = nr;\n    if( removePadding ) {\n      newString = nr + \" \" ;\n    }\n    for( var i = 1 ; i< tokens.length; i++) {\n      if( removePadding ) {\n         if( tokens[i].type == \"pad\" ) {\n           continue;\n         }\n       }\n\n       if( shortenKeywords ) {\n         if( tokens[i].type == \"name\" && tokens[i].data == \"PRINT\" ) {\n           tokens[i].data = \"?\";\n         }\n       }\n       else {\n         if( tokens[i].type == \"name\" && tokens[i].data == \"?\" ) {\n           tokens[i].data = \"PRINT\";\n         }\n      }\n\n      if( tokens[i].type == \"str\" ) {\n        newString += \"\\\"\" + tokens[i].data + \"\\\"\";\n      }\n      else if( tokens[i].type == \"name\" && addSmartPadding == true) {\n        newString += tokens[i].data + \" \";\n      }\n      else if( tokens[i].type == \"num\" && addSmartPadding == true) {\n        if( tokens[i].data.length == 1 ) {\n            newString += \" \" + tokens[i].data;\n        }\n        else {\n            newString += tokens[i].data;\n        }\n      }\n      else {\n        newString += tokens[i].data;\n      }\n\n    }\n\n    var rec = p.parseLine( newString );\n\n    return rec;\n  }\n\n  lineIsData( line ) {\n    console.log( line );\n    if( line[1].length == 1 ) {\n      if( ! ( line[1][0].controlKW === undefined) ) {\n        if( line[1][0].controlKW.toUpperCase() == \"DATA\" ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  lineIsRem( line ) {\n    console.log( line );\n    if( line[1].length == 1 ) {\n      if( ! ( line[1][0].controlKW === undefined) ) {\n        if( line[1][0].controlKW.toUpperCase() == \"REM\" ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  renumberProgram( start, gap ) {\n\n    var p = this.program;\n\n    var newLineNr = start;\n    var renumbering = {};\n    var lineNumbers = [];\n\n    var method = \"rem\";\n\n    if( method  == \"plain\" ) {\n      for( var i=0; i<p.length; i++) {\n          var line = p[ i ];\n\n          renumbering[\"old_\" + line[0]] = newLineNr;\n          lineNumbers.push( newLineNr );\n          newLineNr += gap;\n      }\n    }\n    else if( method  == \"data\" ) {\n      // non data\n      for( var i=0; i<p.length; i++) {\n          var line = p[ i ];\n          var data = this.lineIsData( line );\n\n          if( data ) {\n            continue;\n          }\n          else {\n            renumbering[\"old_\" + line[0]] = newLineNr;\n            lineNumbers.push( newLineNr );\n            newLineNr += gap;\n          }\n      }\n\n      //data\n      var kNumber = Math.ceil( newLineNr / 1000 );\n      var newLineNr2 = 1000 * ( kNumber  );\n      if( newLineNr2 - newLineNr  < 100 ) {\n        newLineNr2+=1000;\n      }\n      newLineNr = newLineNr2;\n\n      for( var i=0; i<p.length; i++) {\n          var line = p[ i ];\n          var data = this.lineIsData( line );\n\n          if( !data ) {\n            continue;\n          }\n          else {\n            renumbering[\"old_\" + line[0]] = newLineNr;\n            lineNumbers.push( newLineNr );\n            newLineNr += gap;\n          }\n      }\n\n    }\n    else if( method  == \"rem\" ) {\n      // non data\n      for( var i=0; i<p.length; i++) {\n          var line = p[ i ];\n          var rem = this.lineIsRem( line );\n\n          if( rem ) {\n            var kNumber = Math.ceil( newLineNr / 1000 );\n            var newLineNr2 = 1000 * ( kNumber  );\n            if( newLineNr2 - newLineNr  < 100 ) {\n              newLineNr2+=1000;\n            }\n            newLineNr = newLineNr2;\n          }\n          renumbering[\"old_\" + line[0]] = newLineNr;\n          lineNumbers.push( newLineNr );\n          newLineNr += gap;\n\n      }\n\n    }\n\n    //newLineNr = start;\n    for( var i=0; i<p.length; i++) {\n        newLineNr = lineNumbers[ i ]\n        var line = p[ i ];\n        var lRec = this.rebuildLineString( newLineNr, line[2], true, renumbering, true );\n\n        line[0] = newLineNr;\n        line[1] = lRec.commands;\n        line[2] = lRec.raw.trim();\n\n        //newLineNr += gap;\n    }\n  }\n\n  PETSCIIreplace( keywordCompress ) {\n    var p = this.program;\n\n    for( var i=0; i<p.length; i++) {\n        var line = p[ i ];\n\n        var lRec = this.rebuildNoPETSCIILineString( line[2] );\n\n        line[1] = lRec.commands;\n        line[2] = lRec.raw;\n\n    }\n  }\n\n  compressProgram( keywordCompress ) {\n    var p = this.program;\n\n    for( var i=0; i<p.length; i++) {\n        var line = p[ i ];\n\n       var lRec = this.rebuildLineString( line[0], line[2], true, undefined, false, keywordCompress );\n\n        line[1] = lRec.commands;\n        line[2] = lRec.raw;\n\n    }\n  }\n\n  normalizeProgram() {\n    var p = this.program;\n\n    for( var i=0; i<p.length; i++) {\n        var line = p[ i ];\n\n        var lRec = this.rebuildLineString( line[0], line[2], true, undefined, true );\n\n        line[1] = lRec.commands;\n        line[2] = lRec.raw;\n\n    }\n  }\n\n  clrPGM() {\n    this.vars = [];\n    this.functions = [];\n    this.restoreDataPtr();\n  }\n\n  restoreDataPtr() {\n    this.dataPointer = 0;\n  }\n\n  runPGM() {\n\n    this.executeLineFlag = false;\n\n    if( this.startAsGoto ) {\n        this.startAsGoto = false;\n\n        var bak1 = this.runPointer;\n        var bak2 = this.runPointer2;\n\n        this.runPGM();\n\n        this.runPointer = bak1;\n        this.runPointer2 = bak2;\n\n\n        return;\n    }\n\n\n    var c = this.output;\n    var p = this.program;\n    this.data = [];\n    this.dataPointer = 0;\n    this.gosubReturn = [];\n    this.vars = [];\n    this.functions = [];\n\n    for( var i=0; i<p.length; i++) {\n\n        var line = p[ i ];\n        var commands = line[1];\n\n        for( var j=0; j<commands.length; j++) {\n\n          var command = commands[j];\n\n          if( command.type  == \"control\" && command.controlKW == \"data\") {\n            for( var k=0; k<command.params.length; k++) {\n              this.data.push( command.params[k] );\n            }\n          }\n        }\n    }\n\n    if( this.debugFlag ) {\n      console.log(\"data dump:\",this.data);\n    }\n\n\n    if( this.program.length > 0) {\n      this.runFlag = true;\n      this.inputFlag = false;\n      //c.clearCursor();\n      this.runPointer = 0;\n      this.runPointer2 = 0;\n    }\n  }\n\n\n  doForInit( from, to, step, varName, cmdPointer, cmdArrayLen, linePointersLen ) {\n\n    var ctx = this.forContext;\n\n    if( this.vars[ varName ] === undefined ) {\n      this.vars[ varName ] = 0;\n    }\n    this.vars[ varName ] = this.evalExpression( from );\n\n    ctx.default.push( varName );\n    ctx[varName] = {};\n\n    var ctxv = ctx[varName];\n    ctxv.to = this.evalExpression( to );\n\n    if( step == null ) {\n        ctxv.step = 1;\n    }\n    else {\n      ctxv.step = this.evalExpression( step );\n    }\n\n    ctxv.jumpTo =\n      { line: this.runPointer,\n        cmdPointer: cmdPointer+1 }\n    if( ctxv.jumpTo.cmdPointer >= cmdArrayLen )  {\n\n      if( this.runPointer == -1) {\n        throw \"@Cannot find command after for\";\n      }\n      else {\n        if( ( this.runPointer + 1) >= linePointersLen ) {\n          throw \"@cannot find command after for, on next line\";\n        }\n        ctxv.jumpTo.line++;\n        ctxv.jumpTo.cmdPointer = 0;\n      }\n    }\n\n  }\n\n  doForNext( nextVarName ) {\n    var ctx = this.forContext;\n    if( ctx.default.length == 0 ) {\n      throw \"@next without for\";\n    }\n    var varName = ctx.default[ctx.default.length-1];\n    if( nextVarName  != null ) {\n      varName = nextVarName;\n    }\n\n    var ctxv = ctx[varName];\n\n    this.vars[ varName ] += ctxv.step;\n    if( ctxv.step > 0) {\n      if(this.vars[ varName ]<=ctxv.to) {\n\n        return ctxv.jumpTo;\n      }\n    }\n    else if( ctxv.step == 0) {\n      return ctxv.jumpTo;\n    }\n    else {\n      if(this.vars[ varName ]>=ctxv.to) {\n        return ctxv.jumpTo;\n      }\n    }\n\n    ctx.default.pop();\n    return -1;\n  }\n\n  onLineStr() {\n\n    var line = this.retreiveLine();\n    if( line == -1 || line == \"\") { return \"\"; }\n\n    return \" in \" + line;\n\n  }\n\n  retreiveRuntimeLine() {\n    if( this.runPointer > -1 ) {\n      var line = this.program[this.runPointer];\n      return line[0];\n    }\n    return -1;\n  }\n\n\n  retreiveLine() {\n    if( this.runFlag ) {\n      return this.retreiveRuntimeLine();\n    }\n    else {\n      if( this[\"parseLineNumber\"] === undefined ) {\n        return -1;\n      }\n      if( this.parseLineNumber == -1) { return \"\"; }\n      return this.parseLineNumber;\n    }\n    return -1;\n  }\n\n\n  commandToString( cmd ) {\n    if( cmd.type == \"control\" )  {\n      return cmd.controlKW.toUpperCase();\n    }\n    else if( cmd.type == \"call\" ) {\n      return cmd.statementName;\n    }\n    else if( cmd.type == \"assignment\" )  {\n      return \"assign ->\" + cmd.var;\n    }\n    return \"????\";\n  }\n\n  runCommands( cmds, limit ) {\n    /* return values\n      false -> error or end program\n      true  -> executed ok\n\n      should return\n      end_w_error\n      terminate_program\n      line_finished\n      goto_gosub\n    */\n\n    var commands = this.commands;\n    var ecommands = this.extendedcommands;\n    var EXPR = 0, PAR = 1;\n\n    /*return values*/\n    var END_W_ERROR = 0;\n    var TERMINATE_PROGRAM = -1;\n    var LINE_FINISHED = 10;\n    var MIDLINE_INTERUPT = 20;\n    var TERMINATE_W_JUMP = 30;\n    var PAUSE_F_INPUT = 40;\n\n    var end = cmds.length;\n    var i=this.runPointer2;\n    var cnt=0;\n\n    if(!(limit == undefined )) {\n      //nothing\n    }\n    else {\n      limit = 9999; //reaching to infinite (max on line maybe  40)\n    }\n\n\n\n    while( i<end && cnt<limit ) {\n\n\n      if( this.breakCycleFlag ) {\n        if(!(limit == undefined )) {\n          this.breakCycleFlag = false;\n          break;\n        }\n      }\n\n      var cmd=cmds[i];\n\n      var l=this.program[this.runPointer];\n\n      //if( this.runPointer > -1 ) {\n      //  console.log( l[0] + \"(\" + this.runPointer + \":\" + i +\")\" + this.commandToString( cmd ) );\n      //}\n      //console.log( cmd.lineNumber + \":\" + cmd.type + \":\" + (cmd.controlKW ? cmd.controlKW : cmd.statementName ));\n\n      if( cmd.type == \"control\" )  {\n        var cn = cmd.controlKW;\n        if( cn == \"goto\" ) {\n          this.goto( cmd.params[0] );\n          return [TERMINATE_W_JUMP,i+1,cnt+1];\n        }\n        else if( cn == \"end\" ) {\n          return [TERMINATE_PROGRAM,i+1,cnt+1];\n        }\n        else if( cn == \"stop\" ) {\n          this.printInfo(\"break\");\n          return [TERMINATE_PROGRAM,i+1,cnt+1];\n        }\n        else if( cn == \"gosub\" ) {\n          this.gosub( cmd.params[0], i );\n          return [TERMINATE_W_JUMP,i+1,cnt+1];\n        }\n        else if( cn == \"on\" ) {\n          var onCommand = cmd.params[ 0 ];\n          var onExpr = cmd.params[ 1 ];\n          var onLineNrs = cmd.params[ 2 ];\n\n          var value = this.evalExpression( onExpr );\n          if( (value-1)>=0 && (value-1)<onLineNrs.length ) {\n            if( onCommand == \"goto\" ) {\n              this.goto( onLineNrs[ (value-1) ] );\n              return [TERMINATE_W_JUMP,i+1,cnt+1];\n            }\n            else if( onCommand == \"gosub\" ) {\n              this.gosub( onLineNrs[ (value-1) ], i );\n              return [TERMINATE_W_JUMP,i+1,cnt+1];\n            }\n          }\n\n          //if not jumping, do nothing\n        }\n        else if( cn == \"return\" ) {\n          this.doReturn();\n          return [TERMINATE_W_JUMP,i+1,cnt+1];\n        }\n        else if( cn == \"if\" ) {\n          var IF_ERROR = -1;\n          var IF_TRUE = 1;\n          var IF_FALSE = 0;\n\n          var ifresult = this.evalExpression( cmd.params[0] );\n          if( ifresult != IF_FALSE ) {\n             //return [MIDLINE_INTERUPT,i+1];\n          }\n          else  {\n             return [LINE_FINISHED,i+1,cnt+1];\n          }\n        }\n        else if( cn == \"data\" ) {\n          //Nothing\n        }\n        else if( cn == \"rem\" ) {\n          return [LINE_FINISHED,i+1,cnt+1];\n        }\n        else if( cn == \"for:init\" ) {\n          this.doForInit( cmd.params[0], cmd.params[1], cmd.params[2], cmd.variable, i, cmds.length );\n        }\n        else if( cn == \"for:next\" ) {\n\n          var jump = this.doForNext( cmd.nextVar );\n\n          if( !(jump === -1 ) ) {\n\n            if( jump.line != -1 ) {\n                if( this.runPointer == jump.line ) {\n                  i = jump.cmdPointer;\n                  cnt++;\n                  continue;\n                }\n                else {\n                  this.runPointer = jump.line;\n                  this.runPointer2 = jump.cmdPointer;\n                }\n                return [TERMINATE_W_JUMP,i+1,cnt+1];\n            }\n            else {\n              i = jump.cmdPointer;\n              cnt++;\n              continue;\n            }\n          }\n        }\n        else if( cn == \"dim\" ) {\n          var vars = this.vars;\n\n          for( var ix=0; ix<cmd.params.length; ix++) {\n\n            var indices = [];\n            for( var ai=0;ai<cmd.params[ix].length;ai++){\n              indices[ai] = this.evalExpression( cmd.params[ix][ai] );\n            }\n\n            var arrRec = new BasicArray( cmd.arrayNames[ix], indices, 0 );\n\n            var varIntName = \"@array_\" + cmd.arrayNames[ix];\n\n            if( ! ( this.vars[ varIntName ] === undefined )) {\n              this.printError( \"redim'd array\" );\n              return [END_W_ERROR,i+1,cnt+1];\n            }\n            this.vars[ varIntName ] = arrRec;\n          }\n\n        }\n        else if( cn == \"def\" ) {\n          this.functions[ cmd.params[0] ] = {\n            par: cmd.params[1],\n            expr: cmd.params[2]\n          };\n        }\n        else {\n          this.printError( \"illegal ctrl token '\" + cn  +\"'\");\n          return [END_W_ERROR,i+1,cnt+1];\n        }\n      }\n      else if( cmd.type == \"call\" )  {\n        var values = [];\n        var pardefs = [];\n        var mycommands = commands;\n\n        var stc = mycommands[ \"_stat_\" + cmd.statementName.toLowerCase()];\n\n        if( stc === undefined ) {\n          //cmd.statementName.toLowerCase().startsWith(\"x\") )\n          mycommands = ecommands;\n\n          stc = mycommands[ \"_stat_\" + cmd.statementName.toLowerCase()];\n\n          if( stc === undefined ) { }\n          else {\n            if( mycommands.enabled == false &&\n              cmd.statementName.toLowerCase() != \"xon\") {\n                  this.printError( \"extended not enabled\" );\n                  return [END_W_ERROR,i+1,cnt+1];\n            }\n          }\n        }\n\n        var intf = mycommands[ \"_if_\" + cmd.statementName.toLowerCase()];\n        if( !( intf === undefined ) ) {\n            pardefs = mycommands[ \"_if_\" + cmd.statementName.toLowerCase()]();\n        }\n        else {\n          for( var j=0; j<cmd.params.length; j++) {\n            pardefs[j] = EXPR;\n          }\n        }\n\n        for( var j=0; j<cmd.params.length; j++) {\n          if( pardefs[j] == EXPR ) {\n\n            var p = this.evalExpression( cmd.params[j] );  //NOTE this one gets the trailing ;, from a \"PRINT ;\" command\n\n            if( p != null ) {\n              values.push( { type: \"value\", value: p } );\n            }\n          }\n          else if( pardefs[j] == PAR ) {\n            var varName = cmd.params[j].parts[0].data;\n            var varType = \"num\";\n            if( varName.indexOf(\"$\") > -1) {\n              varType = \"str\";\n            }\n\n            values.push( { type: \"var\", value: varName, varType: varType } );\n          }\n          else { /*RAW*/\n            //values.push( cmd.params[j].parts );\n            values.push( cmd.params[j] );\n\n          }\n        }\n        try {\n          //var stc = ;\n          if( stc === undefined ) {\n            this.printError(\"syntax\");\n            return [END_W_ERROR,i+1,cnt+1];\n          }\n          else {\n              mycommands[ \"_stat_\" + cmd.statementName.toLowerCase()]( values );\n              if( this.inputFlag ) {\n                return [PAUSE_F_INPUT,i+1,cnt+1];\n              }\n          }\n\n        }\n        catch ( e ) {\n          console.log(e);\n\n          if( this.erh.isSerializedError( e ) ) {\n            var err = this.erh.fromSerializedError( e );\n            this.printError( err.clazz );\n          }\n          else if( this.erh.isError( e ) ) {\n            var err = e;\n            this.printError( err.clazz );\n          }\n          else {\n            this.printError(\"unexpected \" + e );\n          }\n\n          return [END_W_ERROR,i+1,cnt];\n        }\n      }\n      else if( cmd.type == \"assignment\" )  {\n        if( cmd.arrayAssignment ) {\n          var varIntName = \"@array_\" + cmd.var;\n          if( this.vars[ varIntName ] === undefined ) {\n            this.printError(\"bad subscript\");\n            return [END_W_ERROR,i+1,cnt];\n          }\n\n          var arr = this.vars[ varIntName ];\n          if( cmd.indices.length != arr.getIndexCount() ) {\n            this.printError(\"bad subscript\");\n            return [END_W_ERROR,i+1,cnt];\n          }\n\n          var indices = [];\n          for( var ai=0;ai<cmd.indices.length;ai++){\n            indices[ai] = this.evalExpression( cmd.indices[ai] );\n          }\n\n          if( cmd.var.endsWith(\"%\") ) {\n              arr.set( indices, Math.floor( this.evalExpression( cmd.expression ) ) );\n          }\n          else if( ! cmd.var.endsWith(\"$\") ) {\n              var v = this.evalExpression( cmd.expression );\n              if( ! (typeof v == \"number\") ) {\n                this.printError(\"type mismatch\");\n                return [END_W_ERROR,i+1,cnt];\n              }\n              arr.set( indices, this.evalExpression( cmd.expression ) );\n          }\n          else {\n              arr.set( indices, this.evalExpression( cmd.expression ) );\n          }\n\n        }\n        else { //single var (not an array)\n          if( this.vars[ cmd.var ] === undefined ) {\n            if(cmd.var.startsWith(\"TI\")) {\n              this.printError(\"syntax\");\n              return [END_W_ERROR,i+1,cnt+1];\n            }\n            this.vars[ cmd.var ] = 0;\n          }\n          if(cmd.var.endsWith(\"%\")) {\n            this.vars[ cmd.var ] = Math.floor( this.evalExpression( cmd.expression ) );\n          }\n          else if( ! cmd.var.endsWith(\"$\") ) {\n              var v = this.evalExpression( cmd.expression );\n              if( ! (typeof v == \"number\") ) {\n                this.printError(\"type mismatch\");\n                return [END_W_ERROR,i+1,cnt];\n              }\n              this.vars[ cmd.var ] = this.evalExpression( cmd.expression );\n          }\n          else {\n            this.vars[ cmd.var ] = this.evalExpression( cmd.expression );\n          }\n        }\n      }\n      //cnt++;\n      i++;\n      cnt++;\n    }\n\n    if( i== cmds.length ) {\n      return [LINE_FINISHED,i,cnt];\n    }\n\n    return [MIDLINE_INTERUPT,i,cnt];\n\n  }\n\n  setVar( a, b ) {\n    this.vars[ a ] = b;\n  }\n\n  old( linenr ) {\n    this.program = this.oldProgram;\n  }\n\n  new( linenr ) {\n    this.oldProgram = this.program ;\n    this.program = [];\n  }\n\n  removePgmLine( linenr ) {\n\n    var pgm2 = [];\n\n    for( var i=0; i<this.program.length; i++) {\n      var pl=this.program[i];\n      if( pl[0] != linenr ) {\n        pgm2.push(pl);\n      }\n    }\n    this.program = pgm2;\n\n  }\n\n\n  padSpaces6( no ) {\n    var s = no + \"\";\n    for(var i=s.length; i<6; i++) {\n      s+=\" \";\n    }\n    return s;\n  }\n\n  padSpaces8( no ) {\n    var s = no + \"\";\n    for(var i=s.length; i<8; i++) {\n      s+=\" \";\n    }\n    return s;\n  }\n\n\n  insertPgmLine( linenr, commands, raw ) {\n\n    this.insertPgmLineLocal( linenr, commands, raw, this.program );\n  }\n\n  insertPgmLineLocal( linenr, commands, raw, myProgram ) {\n\n    for( var i=0; i<myProgram.length; i++) {\n      var pl=myProgram[i];\n      if( pl[0] == linenr ) {\n        myProgram[i] = [linenr, commands, raw.trim() ];\n        return;\n      }\n    }\n\n    myProgram.push( [linenr, commands, raw.trim() ]);\n\n    var sortF = function compare( a, b ) {\n      return a[0] - b[0];\n    }\n\n    myProgram.sort( sortF );\n\n  }\n\n  textLinesToBas( lines ) {\n\n    var myProgram = [];\n\n    if( this.debugFlag ) {\n      console.log( \"textLinesToBas\" );\n    }\n    for( var i = 0; i<lines.length; i++ ) {\n\n      var line = this.prepareLineForImport( lines[ i ] );\n      var p = new Parser( this.commands, this.extendedcommands );\n      p.init();\n      //if( line.length > 80 ) {  TODO move this check into the parser\n      //  throw \"Line to long \" + line;\n      //}\n      var l = p.parseLine( line );\n      if( l == null ) {\n        continue;\n      }\n      if( l.lineNumber != -1 ) {\n        if( l.commands.length > 0) {\n          this.insertPgmLineLocal( l.lineNumber, l.commands, l.raw, myProgram);\n          //this.program[ l.lineNumber ] = [l.commands,l.raw];\n        }\n        else {\n          throw \"Error, no commands on line \" + l.lineNumber;\n        }\n      }\n      else {\n        throw \"Error, command must start with number to be part of program\";\n      }\n\n      if( this.debugFlag ) {\n        console.log(\"program:\",myProgram);\n        console.log(\"Line: \", l );\n      }\n    }\n    return myProgram;\n  }\n\n  printReady() {\n    this.printLine(\"ready.\");\n  }\n\n\n  startConsoleDataInput( vars ) {\n\n    if( this.debugFlag ) {\n      console.log(\"inputvars=\",vars);\n    }\n    this.inputFlag = true;\n    this.inputVars = vars;\n    this.input.setInterActive( true);\n    this.inputVarsPointer = 0;\n    this.output.write( \"? \");\n    this.lineInput = \"\";\n  }\n\n  handleLineInput( str, isInputCommand ) {\n\n    if( this.debugFlag ) {\n      console.log(\"handleLineInput: start debug / isInputCommand=\" + isInputCommand + \" -------------\");\n    }\n\n    if( isInputCommand ) {\n\n        var input=str;\n        var qMark = input.indexOf(\"?\");\n        while( qMark > -1 ) {\n          input = input.substr(qMark+2);\n          qMark = input.indexOf(\"?\");\n        }\n\n        if( this.debugFlag ) {\n          console.log(\"handleLineInput: start debug / input, name -------------\");\n          console.log( \"InputVarsPointer:\" , this.inputVarsPointer );\n          console.log( \"InputVars:\" , this.inputVars );\n\n          console.log( \"Input String:\" ,input );\n          console.log( \"Input Vars[current]:\" ,this.inputVars[ this.inputVarsPointer ] );\n        }\n\n\n        var vName = this.inputVars[ this.inputVarsPointer ];\n        if( vName.indexOf(\"$\") >-1 ) {\n            this.setVar( this.inputVars[ this.inputVarsPointer ], input.trim() );\n        }\n        else {\n          var num = parseFloat( input.trim() );\n\n          if( isNaN( num ) ) {\n            this.printLine(\"?redo from start\");\n            this.sendChars( \"? \" , false);\n            return;\n          }\n          this.setVar( this.inputVars[ this.inputVarsPointer ], num );\n        }\n\n        this.inputVarsPointer++;\n        if( this.inputVarsPointer >= this.inputVars.length ) {\n\n          this.exitInputState();\n        }\n        else {\n          this.sendChars( \"?? \" , false);\n        }\n\n        if( this.debugFlag ) {\n          console.log(\"handleLineInput: end debug -------------\");\n        }\n        return;\n    }\n\n    this.executeLineFlag = true;\n\n    if( this.debugFlag ) {\n      console.log( str );\n    }\n    var p = new Parser( this.commands, this.extendedcommands );\n    p.init();\n    try {\n      var l = p.parseLine( str );\n    }\n    catch( e ) {\n\n      this.parseLineNumber = -1;\n      if( this.erh.isError( e ) ) {\n        this.parseLineNumber = e.lineNr;\n        this.printError( e.clazz, true );\n      }\n      else {\n        this.printError( \"syntax\", true );\n      }\n      this.printLine(\"ready.\");\n    }\n    if( l == null ) {\n      if( this.debugFlag ) {\n        console.log(\"handleLineInput: end debug -------------\");\n      }\n\n      this.executeLineFlag = false;\n      return;\n    }\n\n    if( l.lineNumber != -1 ) {\n      if( l.commands.length > 0) {\n        this.insertPgmLine( l.lineNumber, l.commands, l.raw);\n      }\n      else {\n        this.removePgmLine( l.lineNumber  );\n      }\n    }\n    else {\n      this.runPointer = -1;\n      this.runPointer2 = 0;\n\n      try {\n        this.runCommands( l.commands );\n      }\n      catch( e ) {\n\n        this.parseLineNumber = -1;\n\n        if( this.erh.isSerializedError( e ) ) {\n          var err = this.erh.fromSerializedError( e );\n          this.parseLineNumber = err.lineNr;\n          this.printError( err.clazz );\n        }\n        else if( this.erh.isError( e ) ) {\n          var err = e;\n          this.printError( err.clazz );\n          this.parseLineNumber = err.lineNr;\n        }\n        else {\n          this.printError(\"unexpected \" + e );\n        }\n\n        this.runFlag = false;\n      }\n\n      if( ! this.runFlag && ! this.listFlag) {\n        this.printLine(\"ready.\");\n      }\n\n    }\n\n    this.executeLineFlag = false;\n\n    if( this.debugFlag ) {\n      console.log(\"program:\",this.program);\n      console.log(\"Line: \", l );\n\n      console.log(\"handleLineInput: end debug -------------\");\n    }\n  }\n\n}\n\n//--EOC \n\n// ## extendedcommands.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/extendedcommands.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/extendedcommands.js\n\nclass ExtendedCommands {\n\n  constructor( context ) {\n    this.output = context.output;\n    this.html = context.html;\n    this.input = context.input;\n    this.context = context;\n    this.cmds = {};\n    this.func = {};\n    this.statementList = null;\n    this.erh = new ErrorHandler();\n\n  }\n\n  getStatements() {\n\n    //TODO, why is it called so often?\n    var stats = Object.getOwnPropertyNames( ExtendedCommands.prototype );\n\n    var stats2 = [];\n\n    for( var i=0;i<stats.length;i++) {\n      if( stats[i].startsWith(\"_stat_\")) {\n        stats2.push( stats[i].substr(6 ).toUpperCase() );\n      }\n    }\n\n    return stats2;\n  }\n\n  getFunctions() {\n    var stats = Object.getOwnPropertyNames( ExtendedCommands.prototype );\n\n    var stats2 = [];\n\n    for( var i=0;i<stats.length;i++) {\n      if( stats[i].startsWith(\"_fun_\")) {\n        var name = stats[i].substr(5 ).toUpperCase().replace(\"_DLR_\",\"$\");\n\n        stats2.push( name );\n      }\n    }\n\n    return stats2;\n  }\n\n  /************************ commands ************************/\n  _stat_cls( pars ) {\n    this.output.control( 24 );\n  }\n\n  _stat_reverse( pars ) {\n\n    if( pars.length == 0 ) {\n      this.output.control( 65 );\n      return;\n    }\n\n    var reverse = pars[0].value;\n    if( reverse <0 || reverse >1 ) {\n      return;\n    }\n\n    this.output.control( 64 + reverse );\n  }\n\n\n  _stat_hide( pars ) {\n    this.output.control( 25 );\n  }\n\n  _if_html() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW];\n  }\n\n  _stat_html( pars ) {\n    var html = this.html;\n\n    if( pars.length == 0 ) {\n      return;\n    }\n\n    var newLine = true;\n    var value;\n    var contentIx = 0;\n    var handleIx = -1;\n    var htmlHandle = null;\n    var htmlValue = \"\";\n    var htmlAppend = false;\n\n    if( pars.length == 2) {\n      contentIx = 1;\n      handleIx = 0;\n    }\n\n    for( var i=0; i<pars.length && i<2; i++) {\n\n      var exparts = pars[i];\n      var exparts2=\n        { parts: [],\n          binaryNegate: exparts.binaryNegate,\n          negate: exparts.negate  };\n\n      for( var j=0; j<exparts.parts.length; j++) {\n        if( exparts.parts[j].type == \"uniop\" &&\n            exparts.parts[j].op == \"+\" && j==(exparts.parts.length-1)\n            && (i == pars.length-1)) {\n              htmlAppend = true;\n        }\n        else {\n          exparts2.parts.push( exparts.parts[j] );\n        }\n      }\n      value = this.context.evalExpression( exparts2 );\n\n      if( i == handleIx ) {\n        htmlHandle =  value;\n      }\n      else {\n        htmlValue = value;\n      }\n    }\n\n    this.html.html(\n        {\n          htmlHandle: htmlHandle,\n          htmlValue: htmlValue,\n          htmlAppend: htmlAppend\n        }\n      );\n  }\n\n  _stat_htmlnode( pars ) {\n\n    var result;\n\n    if( pars.length == 0) {\n        return\n    }\n\n    var node = pars[0];\n\n    this.html.htmlnode( node );\n\n  }\n\n  _stat_color( pars ) {\n\n    var result;\n\n    if( pars.length == 0) {\n        return\n    }\n\n    var col = pars[0].value;\n\n    this.output.control2( 16, col );\n  }\n\n  _fun_uc_DLR_( pars ) {\n\n\n    if( pars[0].value ) {\n      if( typeof pars[0].value == \"string\" ) {\n          return String.fromCodePoint( parseInt( pars[0].value, 16 ) );\n      }\n      return String.fromCodePoint( pars[0].value);\n    }\n    return \"?\";\n  }\n\n\n  _fun_html_DLR_( pars ) {\n    return\n      this.html.get();\n  }\n\n\n}\n\n//--EOC \n\n// ## pgmmanager.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/pgmmanager.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/pgmmanager.js\n\nclass BasicProgramManager {\n\n  constructor() {\n    this.rt = [];\n  }\n\n  addRuntime = function( ctx ) {\n\n    this.rt.push( ctx );\n\n  }\n\n}\n\nvar pgmman = new BasicProgramManager();\n\n//--EOC \n\n// ## basiccommands.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basiccommands.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basiccommands.js\n\nclass BasicCommands {\n\n  constructor( context ) {\n    this.output = context.output;\n    this.input = context.input;\n    this.context = context;\n    this.cmds = {};\n    this.func = {};\n    this.statementList = null;\n    this.erh = new ErrorHandler();\n\n    this.randnrs = [];\n    for(var i=0; i<10000;i++) {\n      this.randnrs.push( Math.random() );\n    }\n    this.randIndex = 0;\n    this.randStep = 1;\n\n  }\n\n  getStatements() {\n\n    //if( this.statementList != null ) {\n    //  return this.statementList;\n    //}\n\n    var stats = Object.getOwnPropertyNames( BasicCommands.prototype );\n\n    var stats2 = [];\n\n    for( var i=0;i<stats.length;i++) {\n      if( stats[i].startsWith(\"_stat_\")) {\n        stats2.push( stats[i].substr(6 ).toUpperCase() );\n      }\n    }\n\n    //this.statementList = stats2;\n    return stats2;\n  }\n\n  getFunctions() {\n    var stats = Object.getOwnPropertyNames( BasicCommands.prototype );\n\n    var stats2 = [];\n\n    for( var i=0;i<stats.length;i++) {\n      if( stats[i].startsWith(\"_fun_\")) {\n        var name = stats[i].substr(5 ).toUpperCase().replace(\"_DLR_\",\"$\");\n\n        stats2.push( name );\n      }\n    }\n\n    return stats2;\n  }\n\n  /************************ commands ************************/\n  _stat_new( pars ) {\n    this.context.new();\n  }\n\n  _stat_list( pars ) {\n\n    var start = 0;\n    var end   = 999999;\n    var parts = [];\n\n    var mode = \"noparam\";\n\n    if( pars.length==1 ) {\n      parts = pars[0].parts;\n    }\n\n    if( parts.length == 1 && parts[0].type == \"num\" && parts[0].data >=0 ) {\n      start = parts[0].data;\n      end = parts[0].data;\n    }\n    else if( parts.length == 1 && parts[0].type == \"num\" && parts[0].data <0 ) {\n      /*NOTE, this will stop working if RAW changes to return uniop + posnum */\n      end = -parts[0].data;\n    }\n    else if( parts.length == 2\n        && parts[0].type == \"num\"\n        && parts[1].type == \"num\"\n        && parts[1].op == \"-\"\n          ) {\n      start = parts[0].data;\n      end = parts[1].data;\n\n    }\n    else if( parts.length == 2\n        && parts[0].type == \"num\"\n        && parts[1].type == \"uniop\"\n        && parts[1].op == \"-\"\n          ) {\n      start = parts[0].data;\n    }\n\n    var context = this.context;\n    var list = [];\n    for (const l of context.program)\n      {\n\n        var lineNr = parseInt(l[0]);\n        if(  l[0] == null || (lineNr>= start && lineNr<= end) ) {\n          list.push( l[2] );\n        }\n      }\n\n      this.context.enterListMode( list );\n  }\n\n  _if_get() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [PAR];\n  }\n\n  _if_read() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [PAR];\n  }\n\n  _if_input() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW, RAW, RAW, RAW, RAW, RAW, RAW, RAW, RAW, RAW];\n  }\n\n  _if_list() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW];\n  }\n\n  _if_run() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW];\n  }\n\n  _stat_read( pars ) {\n    var p0 = pars[ 0 ];\n    if( p0.type != \"var\" ) {\n      this.erh.throwError( \"not a var\", \"parameter 0\" );\n    }\n\n    var data = this.context.readData();\n    if( data === undefined ) { this.erh.throwError( \"out of data\" ); }\n    else {\n      if( data.type ==\"num\" ) {\n        this.context.setVar(\n          p0.value, parseInt( data.data ) );\n        }\n        else {\n          this.context.setVar(\n            p0.value,  data.data );\n        }\n      }\n  }\n\n  _stat_get( pars ) {\n    var p0 = pars[ 0 ];\n\n    if( p0.type != \"var\" ) {\n      this.erh.throwError( \"not a var\", \"parameter 0\" );\n    }\n\n    var k = this.input.getKey();\n    if( k == null ) { this.context.setVar(p0.value, \"\"); }\n    else {\n      this.context.setVar(p0.value, k.key );\n    }\n  }\n\n  _stat_input( pars ) {\n\n    var vars = [];\n    var con = this.output;\n\n    for( var i=0; i<pars.length; i++) {\n      if( i == 0 ) {\n        var par = pars[0];\n\n        if( par.parts.length == 2 ) {\n          if( par.parts[0].type == \"str\" ) {\n            con.write( par.parts[0].data );\n            if( par.parts[1].type == \"var\" && par.parts[1].op == \";\" ) {\n              vars.push( par.parts[1].data );\n            }\n          }\n        }\n        else if( par.parts.length == 1 ) {\n          vars.push( par.parts[0].data );\n        }\n\n      }\n      else {\n        sys.log( \"PARS[\"+i+\"]\", pars[i] );\n        if( pars[i].parts[0].type != \"var\" ) {\n\n          this.erh.throwError( \"not a var\", \"parameter \" + i);\n        }\n        vars.push( pars[i].parts[0].data );\n      }\n    }\n\n    this.context.startConsoleDataInput( vars );\n\n  }\n\n  _stat_restore( pars ) {\n    this.context.restoreDataPtr();\n  }\n\n  _stat_load( pars ) {\n    var context = this.context;\n    var result;\n\n    context.printLine(\"\");\n\n    if( pars.length == 0) {\n      context.printLine(\"searching\");\n    }\n    else {\n      context.printLine(\"searching for \" + pars[0].value);\n    }\n\n    if( pars.length == 0) {\n        result = context.load( false );\n    }\n    else {\n      result = context.load( pars[0].value );\n    }\n\n    if( !result ) {\n      context.printLine(\"?not found error\");\n    }\n    else  {\n\n      if( !result[1] ) {  //only print when not a snapshot\n\n        if( pars.length == 0) {\n          context.printLine(\"found default\");\n        }\n        else {\n          context.printLine(\"found \"+pars[0].value);\n        }\n        context.printLine(\"loading\");\n      }\n\n    }\n  }\n\n  _stat_save( pars ) {\n    var context = this.context;\n\n    if( pars.length == 0) {\n        context.save( false );\n    }\n    else {\n      context.save( pars[0].value );\n    }\n  }\n\n  _stat_sys( pars ) {\n    this.erh.throwError( \"not supported\" );\n  }\n\n  _stat_wait( pars ) {\n    this.erh.throwError( \"not supported\" );\n  }\n\n  _stat_verify( pars ) {\n    this.erh.throwError( \"not supported\" );\n  }\n\n  _stat_run( pars ) {\n    var context = this.context;\n\n    context.runPGM();\n  }\n\n  _if_print() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW];\n  }\n\n  isNumber(value) {\n    return typeof value === 'number' && isFinite(value);\n  }\n\n  normalizeIfNumber( x )  {\n    if( this.isNumber( x ) ) {\n      if ( x >= 0 ) {\n        return \" \" + x;\n      }\n    }\n    return \"\" + x;\n  }\n\n  _stat_print( pars ) {\n\n    var context = this.context;\n    var con= this.output;\n\n    if( pars.length == 0 ) {\n      con.nl();\n      return;\n    }\n    else if( pars.length == 1 ) {\n      if( pars[0].parts.length == 0 ) {\n        con.nl();\n        return;\n      }\n    }\n\n    var newLine = true;\n    var value;\n    for( var i=0; i<pars.length; i++) {\n\n      newLine = true;\n      if( i<(pars.length-1)) {\n        newLine = false;\n      }\n\n      if( i>0) {\n        con.write( \"         \" );\n      }\n\n      var exparts = pars[i];\n      var exparts2=\n        { parts: [],\n          binaryNegate: exparts.binaryNegate,\n          negate: exparts.negate  };\n\n      for( var j=0; j<exparts.parts.length; j++) {\n        if( exparts.parts[j].type == \"uniop\" &&\n            exparts.parts[j].op == \";\" && j==(exparts.parts.length-1)\n            && (i == pars.length-1)) {\n              //console.log( \"i=\"+i+\" newline: set to false\");\n          newLine = false;\n        }\n        else {\n          exparts2.parts.push( exparts.parts[j] );\n        }\n      }\n      value = context.evalExpression( exparts2 );\n\n      if( i == 0) {\n        con.write( this.normalizeIfNumber( value ) );\n      }\n      else {\n        con.write( \"\" + value );\n      }\n      if( newLine ) { con.nl(); }\n\n    }\n\n  }\n\n\n  _stat_clr( pars ) {\n    return this.context.clrPGM();\n  }\n\n  /************************ functions ************************/\n\n  _fun_chr_DLR_( pars ) {\n    return String.fromCharCode( pars[0].value );\n  }\n\n  _fun_str_DLR_( pars ) {\n    if(pars[0].value>=0) {\n      return \" \" +  pars[0].value;\n    }\n    return \"\" +  pars[0].value;\n  }\n\n  _fun_abs( pars ) {\n    if( pars[0].value < 0 ) {\n      return -pars[0].value;\n    }\n    return pars[0].value;\n  }\n\n  _fun_len( pars ) {\n    return pars[0].value.length;\n  }\n\n  _fun_asc( pars ) {\n    return pars[0].value.charCodeAt(0);\n  }\n\n  _fun_val( pars ) {\n    return parseInt( pars[0].value );\n  }\n\n  _fun_exp( pars ) {\n    return Math.exp( pars[0].value );\n  }\n\n  intGetNextRand() {\n    this.randIndex = (this.randIndex + this.randStep) % this.randnrs.length;\n    return this.randnrs[ this.randIndex ];\n  }\n\n  intSeedRand( x ) {\n    var base = Math.floor( x * 11 );\n    this.randIndex= base % this.randnrs.length;\n    this.randStep = 1+(base % 7);\n  }\n\n\n  _fun_rnd( pars ) {\n\n    if( pars.length <1) {\n      this.erh.throwError( \"syntax\", \"missing parameter 0\" );\n    }\n\n    if( pars[0].value < 0) {\n      this.intSeedRand( -pars[0].value );\n    }\n\n    return this.intGetNextRand();\n  }\n\n  _fun_sqr( pars ) {\n    return Math.sqrt( pars[0].value);\n  }\n\n  _fun_log( pars ) {\n    return Math.log( pars[0].value);\n  }\n\n  _fun_pos( pars ) {\n    return this.context.getLinePos();\n  }\n\n  _fun_left_DLR_( pars ) {\n      //? LEFT$(A$,8)\n      var s = pars[0].value;\n\n      if( (typeof s) != \"string\") {\n        throw \"@type mismatch\";\n      }\n      return s.substr(0,pars[1].value);\n  }\n\n  _fun_right_DLR_( pars ) {\n      //? RIGHT$(A$,8)\n      var s = pars[0].value;\n\n      if( (typeof s) != \"string\") {\n        throw \"@type mismatch\";\n      }\n      return s.substr( s.length - pars[1].value );\n  }\n\n  _fun_mid_DLR_( pars ) {\n      //? RIGHT$(A$,8)\n      var s = pars[0].value;\n\n      if( (typeof s) != \"string\") {\n        throw \"@type mismatch\";\n      }\n      if( pars.length == 3) {\n        return s.substr( pars[1].value-1, pars[2].value );\n      }\n      else if( pars.length == 2) {\n        return s.substr( pars[1].value-1 );\n      }\n  }\n\n  _fun_fre( pars ) {\n    return -26627;\n  }\n\n  _fun_sin( pars ) {\n    return Math.sin( pars[0].value);\n  }\n\n  _fun_tan( pars ) {\n    return Math.tan( pars[0].value);\n  }\n\n  _fun_atn( pars ) {\n    return Math.atan( pars[0].value);\n  }\n\n  _fun_cos( pars ) {\n    return Math.cos( pars[0].value);\n  }\n\n  _fun_spc( pars ) {\n    var out=\"\";\n    for( var i=0; i<pars[0].value; i++) {\n      out+=\" \";\n    }\n    return out;\n  }\n\n  _max(x,m) {\n    if( x<m ) {  return x; }\n    return m;\n  }\n\n  _fun_usr() {\n    return 0;\n  }\n\n  _fun_int( pars ) {\n    return Math.floor( pars[0].value );\n  }\n\n  _fun_tab( pars ) {\n    var context = this.context;\n\n    if( pars.length <1) {\n      this.erh.throwError( \"syntax\", \"missing parameter 0\" );\n    }\n    var p = pars[0].value;\n    if( p<0 || p > 255 ) {\n      this.erh.throwError( \"illegal quantity\", \"value must be in-between 0 and 255\" );\n    }\n\n    for( var i=0; i<pars[0].value ; i++) {\n        this.output.write( \" \" );\n    }\n\n    return \"\";\n  }\n\n  _fun_sgn( pars ) {\n    var x = pars[0].value;\n\n    if( x<0 ) { return -1; }\n    else if( x>0 ) { return 1; }\n    return 0;\n  }\n\n\n  _fun_jiffies( pars ) {\n    return this.context.getJiffyTime( );\n  }\n}\n\n//--EOC \n\n// ## basicparser.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basicparser.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basicparser.js\n\nclass Parser {\n\n  constructor( cmds, ecmds ) {\n    this.commands = cmds;\n    this.extendedcommands = ecmds;\n    this.erh = new ErrorHandler();\n    this.debugFlag = false;\n  }\n\n  init() {\n\n\t  this.CTRL_KW = [\"IF\",\"THEN\",\"GOTO\",\"AND\", \"NOT\", \"OR\",  \"GOSUB\", \"RETURN\", \"FOR\", \"TO\", \"NEXT\", \"STEP\", \"DATA\", \"REM\", \"GOSUB\", \"DIM\", \"END\", \"LET\", \"STOP\", \"DEF\", \"FN\", \"ON\" ];\n    this.SHORTCUT_KW = [\"?\"];\n\n    this.KEYWORDS = this.commands.getStatements();\n\n    var more = this.extendedcommands.getStatements();\n    for( var i=0; i<more.length; i++) {\n      this.KEYWORDS.push( more[ i ] );\n    }\n\n    more = this.commands.getFunctions();\n    for( var i=0; i<more.length; i++) {\n      this.KEYWORDS.push( more[ i ] );\n    }\n\n    more = this.extendedcommands.getFunctions();\n    for( var i=0; i<more.length; i++) {\n      this.KEYWORDS.push( more[ i ] );\n    }\n\n     for( var i=0; i<this.CTRL_KW.length; i++) {\n       this.KEYWORDS.push( this.CTRL_KW[ i ] );\n     }\n\n     for( var i=0; i<this.SHORTCUT_KW.length; i++) {\n       this.KEYWORDS.push( this.SHORTCUT_KW[ i ] );\n     }\n     //this.padArray( this.KWCODES, 256 );\n\n     if( this.debugFlag ) { console.log(\"KEYWORDS:\" , this.KEYWORDS ); }\n\n     this.screenCodes2CTRLTable = [];\n     var tab = this.screenCodes2CTRLTable;\n\n     tab['\\x93'] = '\\x13';\n     tab['\\xd3'] = '\\x93';\n  }\n\n  getKeyWordCodes() {\n\n    this.throwError( null, \"(Extended) Keywords not yet supported\", \"extended disabled\" );\n    return this.KWCODES;\n  }\n\n  padArray( arr, nr ) {\n    var missing = nr - arr.length;\n    while( missing > 0) {\n      arr.push( null );\n      missing--;\n    }\n  }\n\n  throwError( ctx, detail, clazz ) {\n\n    var clazz2 = clazz;\n    if( clazz2 === undefined ) {\n      clazz2 = \"syntax\";\n    }\n\n    if( ctx ) {\n      console.log(\" Exception \" + clazz + \" at line \" + ctx.lineNumber+ \" \" + detail );\n    }\n\n    if( ctx ) {\n      if( ! ( ctx.lineNumber == undefined ) ) {\n        this.erh.throwError( clazz2, detail, ctx, ctx.lineNumber );\n      }\n    }\n\n    this.erh.throwError( clazz2, detail, undefined, -1 );\n\n  }\n\n  upperCaseNameTokens( tokens ) {\n\n\t\tfor( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n\t\t\tvar token = tokens[i];\n\n\t\t\tif( token ) {\n\t\t\t\tif( token.type == \"name\" ) {\n\t\t\t\t\ttoken.data = token.data.toUpperCase();\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn tokens;\n\t}\n\n\tremovePadding( tokens ) {\n\t\tvar tokens2 = [];\n\n\t\tfor( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n\t\t\tvar token = tokens[i];\n\n\t\t\tif( token ) {\n\t\t\t\tif( token.type != \"pad\" ) {\n\t\t\t\t\ttokens2.push( token );\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn tokens2;\n\t}\n\n  mergeCompTokens( tokens ) {\n\t\tvar tokens2 = [];\n\n    /* Convert token sequences like (\"<\",\"=\")\n       into single token \"<=\" */\n\n\t\tfor( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n\t\t\tvar token = tokens[i];\n\n\t\t\tif( i>0 ) {\n        var token2 = tokens[i-1];\n\t\t\t\tif( ( token.type == \"comp\" || token.type == \"eq\" ) &&\n            ( token2.type == \"comp\" || token2.type == \"eq\" ) ) {\n\t\t\t\t\ttoken2.type = \"@@removeme\";\n          token.data = token2.data + token.data;\n          token.type = \"comp\";\n          if( token.data == \"><\" ) {\n            token.data = \"<>\";\n          }\n          else if( token.data == \"=<\" ) {\n            token.data = \"<=\";\n          }\n          else if( token.data == \"=>\" ) {\n            token.data = \">=\";\n          }\n\n  \t\t\t}\n\t\t\t}\n\n      if( ( token.type == \"name\"  && token.data == \"OR\" ) ||\n        ( token.type == \"name\"  && token.data == \"AND\" ) ||\n        ( token.type == \"name\"  && token.data == \"NOT\" )) {\n          token.type = \"bop\";\n        }\n\n\t\t}\n\n    for( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n      if( tokens[i].type!=\"@@removeme\") {\n        tokens2.push( tokens[i] );\n      }\n    }\n\n\t\treturn tokens2;\n\t}\n\n\n\n  mergeBrokenUpTokens( tokens ) {\n\n    var splits = [];\n\n    //console.log(\"tokens\",tokens)\n    //standard\n    splits.push( { p1: \"REST\", p2: \"OR\", p3: \"E\", whole: \"RESTORE\" } );\n    splits.push( { p1: \"S\", p2: \"TO\", p3: \"P\", whole: \"STOP\" } );\n\n\n    //extended\n//    splits.push( { p1: \"Dsk\", p2: \"OR\", p3: \"T\", whole: \"DXPORT\" } );\n//    splits.push( { p1: \"LXP\", p2: \"OR\", p3: \"T\", whole: \"LXPORT\" } );\n    splits.push( { p1: \"IMP\", p2: \"OR\", p3: \"T\", whole: \"IMPORT\" } );\n    splits.push( { p1: \"EXP\", p2: \"OR\", p3: \"T\", whole: \"EXPORT\" } );\n    splits.push( { p1: \"L\", p2: \"GET\", p3: \"URL\", whole: \"LGETURL\" } );\n    splits.push( { p1: \"L\", p2: \"GET\", p3: \"NAME\", whole: \"LGETNAME\" } );\n    splits.push( { p1: \"L\", p2: \"GET\", p3: \"ID\", whole: \"LGETID\" } );\n    splits.push( { p1: \"GO\", p2: \"TO\", p3: null, whole: \"GOTO\" } );\n    splits.push( { p1: \"GO\", p2: \"SUB\", p3: null, whole: \"GOSUB\" } );\n\n    splits.push( { p1: \"GO\", p2: \"LINK\", p3: null, whole: \"GOLINK\" } );\n    splits.push( { p1: \"WINDOW\", p2: \"S\", p3: null, whole: \"WINDOWS\" } );\n    splits.push( { p1: \"UN\", p2: \"TAG\", p3: null, whole: \"UNTAG\" } );\n    splits.push( { p1: \"LINK\", p2: \"S\", p3: null, whole: \"LINKS\" } );\n    splits.push( { p1: \"DE\", p2: \"LET\", p3: \"E\", whole: \"DELETE\" } );\n    splits.push( { p1: \"LDE\", p2: \"LET\", p3: \"E\", whole: \"LDELETE\" } );\n    splits.push( { p1: \"TDE\", p2: \"LET\", p3: \"E\", whole: \"TDELETE\" } );\n    splits.push( { p1: \"B\", p2: \"OR\", p3: \"DER\", whole: \"BORDER\" } );\n    splits.push( { p1: \"G\", p2: \"COLOR\", p3: \"S\", whole: \"GCOLORS\" } );\n    splits.push( { p1: \"CHAR\", p2: \"COL\", p3: null, whole: \"CHARCOL\" } );\n    splits.push( { p1: \"SFRAME\", p2: \"CP\", p3: null, whole: \"SFRAMECP\" } );\n    splits.push( { p1: \"SFRAME\", p2: \"FLIPX\", p3: null, whole: \"SFRAMEFLIPX\" } );\n    splits.push( { p1: \"SFRAME\", p2: \"FLIPY\", p3: null, whole: \"SFRAMEFLIPY\" } );\n    splits.push( { p1: \"SFRAME\", p2: \"FX\", p3: null, whole: \"SFRAMEFX\" } );\n    splits.push( { p1: \"TAG\", p2: \"S\", p3: null, whole: \"TAGS\" } );\n    splits.push( { p1: \"X\", p2: \"ON\", p3: null, whole: \"XON\" } );\n    splits.push( { p1: \"S\", p2: \"POS\", p3: null, whole: \"SPOS\" } );\n    splits.push( { p1: \"S\", p2: \"POKE\", p3: null, whole: \"SPOKE\" } );\n    splits.push( { p1: \"WJ\", p2: \"IF\", p3: \"FY\", whole: \"WJIFFY\" } );\n    splits.push( { p1: \"REF\", p2: \"OR\", p3: \"MAT\", whole: \"REFORMAT\" } );\n\n\n    var tokens2 = []; //tokens;\n\n    for( var i=0; i<tokens.length; i++) {\n      tokens2.push( tokens[ i ]);\n    }\n\n    for( var i=0; i<splits.length; i++) {\n      var r=splits[i];\n      tokens2 = this.mergeTokenRange( tokens2, r );\n    }\n\n    if( this.debugFlag ) {  console.log( tokens2 ); }\n    return tokens2;\n  }\n\n\n  mergeTokenRange( tokens, record ) {\n\t\tvar tokens2 = [];\n    var tokens3 = [];\n\n    /* Convert \"S\",\"TO\",\"P\" into \"STOP\" */\n\n\t\tfor( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n      tokens2[i] = tokens[i];\n\t\t}\n\n    for( \tvar i=1;\n\t\t\t\t\ti<tokens2.length;\n\t\t\t\t\ti++)\n\t\t{\n      if( record.p3 == null ) {\n        if(\n           ( tokens2[i-1].type == \"name\" || tokens2[i-1].type == \"bop\" ) &&\n           ( tokens2[i-0].type == \"name\" || tokens2[i-0].type == \"bop\" ) ) {\n             if(\n                tokens2[i-1].data == record.p1 &&\n                tokens2[i-0].data == record.p2 ) {\n                  tokens2[i-1].data = record.whole;\n                  tokens2[i-0].type = \"removeme\";\n                }\n           }\n      }\n      else {\n        if(i<2) {\n          continue;\n        }\n        if(\n          ( tokens2[i-2].type == \"name\" || tokens2[i-2].type == \"bop\" ) &&\n           ( tokens2[i-1].type == \"name\" || tokens2[i-1].type == \"bop\" ) &&\n           ( tokens2[i-0].type == \"name\" || tokens2[i-0].type == \"bop\" ) ) {\n\n             if( tokens2[i-2].data == record.p1 &&\n                tokens2[i-1].data == record.p2 &&\n                tokens2[i-0].data == record.p3 ) {\n                  tokens2[i-2].data = record.whole;\n                  tokens2[i-1].type = \"removeme\";\n                  tokens2[i-0].type = \"removeme\";\n                }\n           }\n      }\n\t\t}\n\n    var j=0;\n    for( \tvar i=0;\n\t\t\t\t\ti<tokens2.length;\n\t\t\t\t\ti++)\n\t\t{\n      if( tokens2[i].type != \"removeme\" ) {\n          tokens3[j] = tokens2[i];\n          j++;\n      }\n\t\t}\n\n\t\treturn tokens3;\n\t}\n\n\tparseFunParList( context ) {\n\n\t\tvar tokens = context.tokens;\n\t\tvar params = [];\n\t\tvar even = true;\n\n\t\tvar endTokens = [];\n\t\tendTokens.push( { type: \"sep\", data: \"@@@all\" });\n\t\tendTokens.push( { type: \"bracket\", data: \")\" });\n\n\t\tendTokens.push();\n\n\t\twhile( true ) {\n\n\t\t\tvar token;\n\n      if( tokens.length > 0) {\n        if( tokens[0].type==\"bracket\" && tokens[0].data==\")\") {\n          break;\n        }\n      }\n\n\t\t\tif( even ) {\n        var expr = this.parseBoolExpression( context, endTokens );\n        expr.type = \"expr\";\n\t\t\t\tparams.push( expr );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoken = tokens.shift();\n\n\t\t\t\tif( token.type==\"sep\" ) {\n\t\t\t\t\t//all ok, next par\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.throwError( context, \"expected comma or ), got \"+token.type + \" \" + token.data);\n\t\t\t\t}\n\t\t\t}\n\t\t\teven = !even;\n\t\t}\n\n\t\treturn params;\n\t}\n\n\tpeekIfNextIsOpenBracket( context ) {\n\n\t\tvar tokens = context.tokens;\n\n\t\tif( tokens.length > 0 ) {\n\t\t\tif( tokens[0].type == \"bracket\" && tokens[0].data == \"(\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tparseSubExpression( context ) {\n\n\t\tvar token = context.tokens.shift();\n\n\t\tif( !(token.type == \"bracket\" && token.data == \"(\")) {\n\t\t\tthis.throwError( context, \"parsing subexpression, expected bracket, not \" + token.type + \" - \" + token.data);\n\t\t}\n\n\t\tvar endTokens = [];\n\t\tendTokens.push( { type: \"bracket\", data: \")\" });\n\n\t\tvar expr = this.parseBoolExpression( context, endTokens );\n\t\tcontext.tokens.shift();\n\n\t\texpr.type = \"expr\";\n\t\treturn expr;\n\t}\n\n\n  tokensToString( token )  {\n    var str = \"\";\n\n    if(token.data == \"@@@all\") {\n        str = str + \"'\" + token.type + \"'\";\n    }\n    else {\n      str = str + \"'\" + token.type + \"/\" + token.data + \"'\";\n    }\n\n    return str;\n  }\n\n  endTokensToString( endTokenArry )  {\n    var str = \"\";\n\n    for( var et=0; et<endTokenArry.length; et++) {\n      var endToken = endTokenArry[et];\n\n      if( str != \"\") { str+= \" \";}\n      str += this.tokensToString( endToken );\n    }\n    return str;\n  }\n\n  isEndToken( token, endTokenArry ) {\n\n    for( var et=0; et<endTokenArry.length; et++) {\n      var endToken = endTokenArry[et];\n\n      if( token.type == endToken.type && token.data == endToken.data ) {\n        return true;\n      }\n      else if( token.type == endToken.type && endToken.data == \"@@@all\" ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  parseSimpleExpression( context, endTokens ) {\n\n    var endLoop;\n\t\tvar tokens = context.tokens;\n\n    if( tokens.length == 0) {\n      return undefined;\n    }\n\n\t\tvar token, returnValue=undefined;\n\t\ttoken = tokens.shift();\n\n\t\tif( !token ) {\n\t\t\tthis.throwError( context, \"empty simple expression\");\n\t\t}\n\n    endLoop = this.isEndToken( token, endTokens );\n    if( endLoop ) {\n      this.throwError( context, \"empty simple expression\");\n    }\n\n\n    if( token.type == \"op\" && token.data == \"-\" ) {\n\t\t\t\tvar pair = this.parseSimpleExpression( context, endTokens );\n        pair[0].data = -pair[0].data;\n        return pair;\n\t\t}\n\n\t\tif( token.type == \"num\" ) {\n        returnValue= { type: \"num\", data: token.data };\n\t\t}\n\t\telse if( token.type == \"str\" ) {\n\t\t\t\treturnValue= { type: \"str\", data: token.data };\n\t\t}\n\n\n    token = tokens.shift();\n    if( token ) {\n      endLoop = this.isEndToken( token, endTokens );\n      if( ! endLoop ) {\n        endLoop = context.tokens.length == 0;\n      }\n      if( !endLoop ) {\n        this.throwError( context, \"empty simple expression end expected\");\n      }\n    }\n\n\t\treturn [returnValue, token];\n\t}\n\n\n  parseBoolExpression( context, endTokens0 ) {\n\n    var endTokens = [];\n    var tokens = context.tokens;\n\n    for( var i=0; i < endTokens0.length; i++ ) {\n      endTokens.push( endTokens0[ i ] );\n    }\n\n    endTokens.push( { type: \"bop\", data: \"OR\" });\n    endTokens.push( { type: \"bop\", data: \"AND\" });\n\n    var first = true;\n    var eList = [];\n    var op = null;\n    while( true ) {\n\n      var expr = this.parseExpression( context, endTokens );\n      if( first && tokens.length == 0) {\n        return expr;\n      }\n      first = false;\n\n      var opData = null;\n      if( op != null ) {\n          opData = op.data;\n      }\n\n      //if( expr.parts.length == 1) {\n      //    expr.parts[0].op = opData;\n      //    expr.parts[0].dbg = \"1\";\n      //    eList.push(  expr.parts[0] );\n      //}\n      //else {\n          expr.op = opData;\n          expr.type = \"expr\";\n          expr.dbg = \"1\";\n          eList.push(  expr );\n      //}\n\n      if( tokens.length > 0) {\n        if( tokens[0].type == \"bop\" ) {\n          var op = tokens.shift();\n          continue;\n        }\n      }\n      break;\n    }\n\n    if( eList.length == 1 ) {\n        eList[0].dbg2 = \"len=1\";\n        return eList[0];\n    }\n\n\n    var retExpr = {\n      negate: false,\n      binaryNegate: false,\n      type: \"expr\",\n      parts: [],\n      op: null\n    };\n\n    for( i=0; i<eList.length; i++) {\n      retExpr.parts.push( eList[ i ] );\n    }\n\n    return retExpr;\n\n  }\n\n\tparseExpression( context, endTokens ) {\n\n\t\tvar tokens = context.tokens;\n    if( tokens.length == 0) {\n      return null;\n    }\n\n\t\tvar expression = {\n\t\t\t\t\tparts: [],\n          negate: false,\n          binaryNegate: false\n\t\t};\n\n\t\tvar index = 0;\n\t\tvar even = true;\n\t\tvar op = null;\n\t\tvar parts = expression.parts;\n    var first = true;\n    var negate = false;\n\n    var binaryNegate = false;\n\n\n\t\twhile( true ) {\n\t\t\tvar token, part;\n\t\t\ttoken = tokens.shift();\n\n\t\t\tif( !token ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n      var endLoop = this.isEndToken( token, endTokens );\n      if( endLoop ) {\n\n        tokens.unshift( token );\n        break;\n      }\n\n\t\t\tif( even ) {\n\n\t\t\t\tif( token.type == \"num\" ) {\n\t\t\t\t\tpart = { type: \"num\", data: token.data, op: op };\n          if( negate ) {\n            part.data = -part.data;\n          }\n\t\t\t\t\tparts.push( part );\n          first = false;\n          negate = false;\n\t\t\t\t}\n\t\t\t\telse if( token.type == \"str\" ) {\n\t\t\t\t\tpart = { type: \"str\", data: token.data, op: op };\n\t\t\t\t\tparts.push( part );\n          if( negate ) {\n            this.throwError( context, \"found negation on a string\", \"type mismatch\");\n          }\n          first = false;\n\t\t\t\t}\n\t\t\t\telse if( token.type==\"bracket\" && token.data==\"(\") {\n\t\t\t\t\t\ttokens.unshift( token );\n\n            var subEndTokens = [];\n            subEndTokens.push( { type: \"bracket\", data: \")\" });\n\n\t\t\t\t\t\tvar expr = this.parseSubExpression( context, subEndTokens );\n            expr.op = op;\n            expr.negate = negate;\n            expr.binaryNegate = binaryNegate;\n\t\t\t\t\t\tparts.push ( expr );\n            first = false;\n            negate = false;\n\t\t\t\t}\n\t\t\t\telse if( token.type==\"name\" ) {\n\n\t\t\t\t\t\tvar name = token.data;\n\t\t\t\t\t\tvar isFunctionCallOrArray = this.peekIfNextIsOpenBracket( context );\n            var isUserDefinedFunctionCall = (name == \"FN\");\n\n\t\t\t\t\t\tif( isFunctionCallOrArray ) { /*We have a function or an Array */\n\n\t\t\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\t\t\tvar parameters = this.parseFunParList( context );\n              tokens.shift();\n\n              part = { type: \"funCall\", params: parameters, op: op, functionName: name };\n\n              if( this.KEYWORDS.indexOf( name ) == -1 ) {\n                //isArray  example: x=a(5)\n                part = { type: \"array\", data: name, op: op, indices: parameters };\n\n              }\n\n              if( op == null && negate ) {\n                var subExpression = {\n                      parts: [part],\n                      negate: true,\n                      binaryNegate: false,\n                      type: \"expr\"\n                };\n                parts.push ( subExpression );\n              }\n\t\t\t\t\t\t\telse {\n                parts.push ( part );\n              }\n\n\t\t\t\t\t\t}\n            else if( isUserDefinedFunctionCall ) {\n\n              token = tokens.shift();\n              name = token.data;\n\n              token = tokens.shift();\n              var parameters = this.parseFunParList( context ); //TODO limit to 1 par\n              tokens.shift();\n\n              part = { type: \"defFnCall\", params: parameters, op: op, functionName: name };\n\n              if( op == null && negate ) {\n                var subExpression = {\n                      parts: [part],\n                      negate: true,\n                      binaryNegate: false,\n                      type: \"expr\"\n                };\n                parts.push ( subExpression );\n              }\n\t\t\t\t\t\t\telse {\n                parts.push ( part );\n              }\n\n            }\n\t\t\t\t\t\telse { /* we have an variable*/\n\n\t\t\t\t\t\t\tpart = { type: \"var\", data: token.data, op: op };\n              if( op == null && negate ) {\n                var subExpression = {\n                      parts: [part],\n                      negate: true,\n                      binaryNegate: false,\n                      type: \"expr\"\n                };\n                parts.push ( subExpression );\n              }\n              else {\n                parts.push ( part );\n              }\n\n\t\t\t\t\t\t}\n            negate = false;\n            first = false;\n\t\t\t\t}\n        else if( token.type==\"op\" && token.data==\"-\" ) {\n          negate = ! negate;\n          continue;\n        }\n        else if( token.type==\"bop\" && token.data==\"NOT\" && first ) {\n          binaryNegate = ! binaryNegate;\n          expression.binaryNegate = binaryNegate;\n          if( this.debugFlag ) {\n            console.log(\"NOT\")\n          }\n          continue;\n        }\n\t\t\t\telse {\n\t\t\t\t\tthis.throwError( context, \"expected number, string, symbol or bracket, not \" + token.data);\n\t\t\t\t}\n        op = null;\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\tif( token.type == \"op\" || token.type == \"comp\" || token.type == \"eq\" || token.type == \"bop\" ) {\n\t\t\t\t\top = token.data;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.throwError( context, \"expected operator or \"+\n          this.endTokensToString(endTokens)+\n          \", not \" + token.type + \" \" + token.data);\n\t\t\t\t}\n\t\t\t}\n\t\t\teven = !even;\n\n\t\t}\n\n    if( op != null ) {\n      part = { type: \"uniop\", data: null, op: op };\n      parts.push ( part );\n    }\n\n\t\tif( expression.parts == null ) {\n\t\t\treturn null;\n\t\t}\n\n    var newParts;\n    newParts = this.groupParts( expression.parts, \"^\" );\n    newParts = this.groupParts( newParts, \"/\" );\n    newParts = this.groupParts( newParts, \"*\" );\n\n    var oldExpression = expression;\n    expression = {\n          parts: newParts,\n          negate: oldExpression.negate,\n          binaryNegate: oldExpression.binaryNegate\n    };\n\n\t\treturn expression;\n\t}\n\n\n  groupParts( parts0 , op ) {\n\n    var parts1=[], parts2=[];\n\n    for( var i=0; i<parts0.length; i++ ) {\n      parts1.push( parts0[ i ] );\n    }\n\n    for( var i=0; i<parts1.length; i++ ) {\n\n      var part = parts1[ i ];\n      if( i>0 && part.op == op ) {\n        var prevPart = parts1[ i-1 ];\n\n        var subExpr = {\n          negate: false,\n          binaryNegate: false,\n          type: \"expr\",\n          parts: [],\n          op: prevPart.op\n        };\n\n        subExpr.parts[ 0 ] = prevPart;\n        subExpr.parts[ 0 ].op = null;\n        subExpr.parts[ 1 ] = part;\n\n        parts1[i-1] = null;\n        parts1[ i ] = subExpr;\n\n      }\n    }\n\n\n    for( var i=0; i<parts1.length; i++ ) {\n\n      var part = parts1[ i ];\n      if( part != null ) {\n        parts2.push( part );\n      }\n    }\n\n    return parts2;\n  }\n\n  normalizeStatementName( x ) {\n    if(x == \"?\") {\n      return \"print\";\n    }\n    return x;\n  }\n\n  parseAssignment( context, preTokens, commands, command, nameToken, token0  ) {\n\n    var token = token0;\n\t\tvar tokens = context.tokens;\n\n    command.type = \"assignment\";\n    command.var = nameToken;\n    command.arrayAssignment = false;\n\n    var endTokens = [];\n    endTokens.push( { type: \"cmdsep\", data: \"@@@all\" });\n\n    command.expression = this.parseBoolExpression( context, endTokens );\n    commands.push( command );\n  }\n\n  parseArrayAssignment( context, preTokens, commands, command, nameToken, token0  ) {\n\n    var token = token0;\n\t\tvar tokens = context.tokens;\n\n    command.type = \"assignment\";\n    command.var = nameToken;\n    command.arrayAssignment = true;\n\n    //token = tokens.shift();\n    var indices = this.parseFunParList( context );\n    command.indices = indices;\n\n    tokens.shift();\n    if( this.debugFlag ) {\n      console.log(\"tokens after:\",tokens)\n    }\n\n    token = tokens.shift();\n    if( token === undefined ) {\n      token = { type: \"@@@notoken\" };\n    }\n\n    if( token.type != \"eq\") {\n      this.throwError( context, \"Expected =\");\n    }\n\n    var endTokens = [];\n    endTokens.push( { type: \"cmdsep\", data: \"@@@all\" });\n\n    command.expression = this.parseBoolExpression( context, endTokens );\n    commands.push( command );\n\n  }\n\n  parseControlStructure(  context, preTokens, commands, command, nameToken, token0  ) {\n\n    var token = token0;\n\t\tvar tokens = context.tokens;\n\n    if( true ) {\n\n      command.type = \"control\";\n      var controlToken = nameToken;\n      command.controlKW = nameToken.toLowerCase();\n      if( token.type != \"@@@notoken\") {\n        tokens.unshift( token );\n      }\n\n      if( controlToken == \"LET\") {\n\n        token = tokens.shift();\n        if( token.type != \"name\") {\n          this.throwError( context, \"LET expects var name\");\n        }\n        nameToken = token.data;\n\n        token = tokens.shift();\n        if( token === undefined ) {\n          token = { type: \"@@@notoken\" };\n        }\n\n/*        if( token.type != \"bracket\") { #TODO array assignments, ex: LET a(8) = 2\n          this.throwError( context, \"LET expects =\");\n        }\n*/\n\n        if( token.type == \"eq\") {\n\n          this.parseAssignment( context, preTokens, commands, command, nameToken, token );\n        }\n        else if( token.type == \"bracket\" && token.data==\"(\" ) {\n\n          this.parseArrayAssignment( context, preTokens, commands, command, nameToken, token );\n\n        }\n        else {\n          this.throwError( context, \"let, unexpected token \" + token.type );\n        }\n\n/*parseAssignment( context, preTokens, commands, command, nameToken, token0  ) {\nparseArrayAssignment( context, preTokens, commands, command, nameToken, token0  ) {\n\n\n        if( token.type != \"eq\") {\n          this.throwError( context, \"LET expects =\");\n        }\n\n        var cmdType = \"assignment\";\n        command.type = cmdType;\n        command.var = nameToken;\n\n        var endTokens = [];\n        endTokens.push( { type: \"cmdsep\", data: \"@@@all\" });\n\n        command.expression = this.parseBoolExpression( context, endTokens );\n        commands.push( command );*/\n      }\n      else if( controlToken == \"DIM\") {\n\n        var first = true;\n        command.params = [];\n        command.arrayNames = [];\n\n        while( true ) {\n\n          token = tokens.shift();\n          if(!first ) {\n            if( token === undefined ) {\n              break;\n            }\n            if( ! ( token.type == \"sep\" && token.data == \",\" )) {\n              tokens.unshift( token );\n              break;\n            }\n            token = tokens.shift();\n          }\n\n          if( token.type != \"name\" ) {\n            this.throwError( context, \"DIM expects var name\");\n          }\n\n          nameToken = token.data;\n\n          token = tokens.shift();\n          if( token === undefined ) {\n            token = { type: \"@@@notoken\" };\n          }\n\n          if( !(token.type==\"bracket\" && token.data==\"(\") ) {\n            this.throwError( context, \"DIM expects (\");\n          }\n\n          var indices = this.parseFunParList( context );\n\n          token = tokens.shift();\n          if( token === undefined ) {\n            token = { type: \"@@@notoken\" };\n          }\n\n          if( !(token.type==\"bracket\" && token.data==\")\") ) {\n            this.throwError( context, \"DIM expects )\");\n          }\n\n          command.params.push( indices );\n          command.arrayNames.push( nameToken );\n\n          first = false;\n        }\n\n        commands.push( command );\n      }\n      else if( controlToken == \"DEF\") {\n\n        token = tokens.shift();\n        if( !( token.type == \"name\" && token.data == \"FN\" ) ) {\n          this.throwError( context, \"DEF expects FN\");\n        }\n\n        token = tokens.shift();\n        if( token.type != \"name\") {\n          this.throwError( context, \"DEF FN expects function name\");\n        }\n        var fName = token.data;\n\n        token = tokens.shift();\n        if(! ( token.type == \"bracket\" && token.data == \"(\" )) {\n          this.throwError( context, \"DEF FN expects function name and ->( varname )\");\n        }\n\n        token = tokens.shift();\n        if(! ( token.type == \"name\"  )) {\n          this.throwError( context, \"DEF FN expects function name and ( ->varname )\");\n        }\n        var varName = token.data;\n\n        token = tokens.shift();\n        if(! ( token.type == \"bracket\" && token.data == \")\" )) {\n          this.throwError( context, \"DEF FN expects function name and ( varname -> )\");\n        }\n\n        token = tokens.shift();\n        if(! ( token.type == \"eq\" && token.data == \"=\" )) {\n          this.throwError( context, \"DEF FN expects function name and ( varname ) -> =\");\n        }\n\n\n        endTokens = [];\n        var expr_fn = this.parseBoolExpression( context, endTokens );\n\n        if( this.debugFlag ) {\n          console.log(\"expr = \" + expr_fn );\n        }\n\n        command.params=[];\n        command.params[0] = fName;\n        command.params[1] = varName;\n        command.params[2] = expr_fn;\n        commands.push( command );\n\n      }\n      else if( controlToken == \"GOTO\" || controlToken == \"GOSUB\") {\n        var num = -1;\n\n        token = tokens.shift();\n\n        if( token === undefined ) {\n          this.throwError( context, \"GOTO/GOSUB expects number\", \"undef'd statement\");\n        }\n\n        if( token.type != \"num\") {\n          this.throwError( context, \"GOTO/GOSUB expects number\", \"undef'd statement\");\n        }\n        num = parseInt(token.data);\n        token = tokens.shift();\n        if( token !== undefined ) {\n          if( token.type != \"cmdsep\") {\n            this.throwError( context, \"expected cmdsep, instead of \"+token.type+\"/\"+token.data);\n          }\n        }\n\n        command.params=[];\n        command.params[0] = num;\n        commands.push( command );\n\n      }\n      else if( controlToken == \"ON\" ) {\n        var nums = [];\n\n        endTokens = [];\n        endTokens.push( { type: \"name\", data: \"GOTO\" });\n        endTokens.push( { type: \"name\", data: \"GOSUB\" });\n\n        var onExpr = this.parseBoolExpression( context, endTokens );\n\n        token = tokens.shift();\n        if( token.type != \"name\") {\n          this.throwError( context, \"ON expects GOTO/GOSUB\");\n        }\n        if( !( token.data == \"GOTO\" || token.data == \"GOSUB\" )) {\n          this.throwError( context, \"ON expects GOTO/GOSUB\");\n        }\n        var onType = token.data;\n\n        token = tokens.shift();\n\n        if( token.type != \"num\") {\n          this.throwError( context, \"ON GOTO/GOSUB expects number\", \"undef'd statement\");\n        }\n\n        if( token.type != \"num\") {\n          this.throwError( context, \"ON GOTO/GOSUB expects number\",  \"undef'd statement\");\n        }\n        nums.push(  parseInt(token.data) );\n\n        while ( true ) {\n\n          token = tokens.shift();\n          if( token == undefined ) { break; }\n          if( token.type == \"cmdsep\") { break; }\n          if( token.type == \"cmdsep\") { break; }\n          if( !( token.type == \"sep\" && token.data == \",\" )) {\n            this.throwError( context, \"ON GOTO/GOSUB expects numberlist\");\n          }\n\n          token = tokens.shift();\n          if( token.type != \"num\") {\n            this.throwError( context, \"GOTO/GOSUB expects number\");\n          }\n          nums.push(  parseInt(token.data) );\n        }\n\n        command.params=[];\n        command.params[0] = onType.toLowerCase();\n        command.params[1] = onExpr;\n        command.params[2] = nums;\n        commands.push( command );\n\n      }\n      else if( controlToken == \"RETURN\") {\n        var num = -1;\n\n        command.params=[];\n        commands.push( command );\n\n      }\n      else if( controlToken == \"END\") {\n        var num = -1;\n\n        command.params=[];\n        commands.push( command );\n\n      }\n      else if( controlToken == \"STOP\") {\n        var num = -1;\n\n        command.params=[];\n        commands.push( command );\n\n      }\n      else if( controlToken == \"FOR\") {\n\n        var variable, expr_from, expr_to, expr_step;\n        var endTokens = [];\n\n        token = tokens.shift();\n        if( token.type != \"name\" ) {\n          this.throwError( context,\n                \"For expects variable, no var found, found \" + token.type+\"/\"+token.data);\n        }\n\n        variable = token.data;\n\n        token = tokens.shift();\n        if( !( token.type == \"eq\" && token.data == \"=\" )) {\n          this.throwError( context,\n                \"For expects '=', not found, found \" + token.type+\"/\"+token.data);\n        }\n\n        endTokens = [];\n        endTokens.push( { type: \"name\", data: \"TO\" });\n\n        expr_from = this.parseBoolExpression( context, endTokens );\n\n        token = tokens.shift();\n        if( !( token.type == \"name\" && token.data == \"TO\" ) ) {\n          this.throwError( context, \"For expects 'to', not found, found \" + token.type+\"/\"+token.data);\n        }\n\n        endTokens = [];\n        endTokens.push( { type: \"cmdsep\", data: \":\" });\n        endTokens.push( { type: \"name\", data: \"STEP\" });\n\n        expr_to = this.parseBoolExpression( context, endTokens );\n        expr_step = { parts: [ { data: \"1\", op: null, type: \"num\"} ] };\n\n        token = tokens.shift();\n        if( !( token === undefined ) ) {\n          if( token.type == \"name\" && token.data == \"STEP\") {\n\n              endTokens = [];\n              endTokens.push( { type: \"cmdsep\", data: \":\" });\n              expr_step = this.parseBoolExpression( context, endTokens );\n          }\n          else {\n            if(! ( token.type == \"cmdsep\" && token.data == \":\")) {\n              throw \"FOR unexpected token \" + token.type + \"/\" + token.data;\n            }\n          }\n        }\n\n        command.controlKW = \"for:init\";\n        command.params=[];\n        command.params[0] = expr_from;\n        command.params[1] = expr_to;\n        command.params[2] = expr_step;\n        command.variable = variable;\n        commands.push( command );\n        if( this.debugFlag ) {\n          console.log(\"command=\", command);\n        }\n\n      }\n      else if( controlToken == \"NEXT\") {\n\n        var variable;\n\n        var explicit = false;\n        while( true ) {\n\n          var token = tokens.shift();\n          if( ! token ) {\n            break;\n          }\n          if( token.type == \"cmdsep\" ) {\n            break;\n          }\n\n          if( token.type != \"name\" ) {\n            throw \"next expected var or nothing\";\n          }\n\n          var nextcommand = {\n            controlKW: \"for:next\",\n            nextVar: token.data,\n            lineNumber: command.lineNumber,\n            type: command.type\n          };\n\n          commands.push( nextcommand );\n          explicit = true;\n\n          var token = tokens.shift();\n          if( ! token ) {\n            break;\n          }\n          if( token.type == \"cmdsep\" ) {\n            break;\n          }\n          if( !( token.type == \"sep\" && token.data == \",\" )) {\n            throw \"expected comma, found \" + token.type + \"/\"+token.data;\n          }\n        }\n\n        if( ! explicit ) {\n          command.controlKW = \"for:next\";\n          command.nextVar = null;\n          commands.push( command );\n        }\n\n      }\n      else if( controlToken == \"IF\") {\n\n        var expr1, expr2, comp;\n        endTokens = [];\n        endTokens.push( { type: \"name\", data: \"THEN\" });\n        endTokens.push( { type: \"name\", data: \"GOTO\" });\n        var expr1 = this.parseBoolExpression( context, endTokens );\n        command.params= [ expr1 ];\n\n        token = tokens.shift();\n\n        if( token.type == \"name\" && token.data == \"GOTO\") {\n          var insert = {};\n          insert.data = \"GOTO\";\n          insert.type = \"name\";\n          tokens.unshift( insert );\n        } else {\n          if( tokens.length > 0 ) {\n            if( tokens[0].type == \"num\" ) {\n              var insert = {};\n              insert.data = \"GOTO\";\n              insert.type = \"name\";\n              tokens.unshift( insert );\n            }\n          }\n        }\n\n        var block = this.parseLineCommands( context );\n\n        if( this.debugFlag ) {\n          console.log( block );\n        }\n\n        commands.push( command );\n\n        for( var bi=0; bi<block.length; bi++) {\n          commands.push( block[bi] );\n        }\n\n      }\n      else if( controlToken == \"DATA\") {\n\n        var dataArray = [];\n        var endTokens;\n\n        endTokens = [];\n        endTokens.push( { type: \"cmdsep\", data: \":\" });\n        endTokens.push( { type: \"sep\", data: \",\" });\n\n        while ( true ) {\n            var pair = this.parseSimpleExpression( context, endTokens );\n\n            var expr1 = pair[0];\n\n\n            if( expr1 === undefined ) {\n              throw \"data expected data\";\n            }\n\n            dataArray.push( expr1 );\n\n            token = pair[1];\n            if( token === undefined ) {\n              break;\n            }\n            if( token.type == \"cmdsep\" && token.data == \":\" ) {\n              break;\n            }\n            else if( token.type == \"sep\" && token.data ==\",\") {\n              continue;\n            }\n            else {\n              this.throwError( context, \"data unknown token found \" + token.type+\"/\"+token.data);\n            }\n        }\n\n        command.params=dataArray;\n        commands.push( command );\n\n      }\n      else if( controlToken == \"REM\") {\n\n        while( true ) {\n\n            token = tokens.shift();\n            if( token == null ) { break ; }\n        }\n\n        commands.push( command );\n\n      }\n      else {\n        this.throwError( context, command.controlKW + \" not implemented\");\n      }\n    }\n  }\n\n  parseStatementCall(  context, preTokens, commands, command, nameToken, token0 ) {\n\n    var token = token0;\n\t\tvar tokens = context.tokens;\n\n    command.statementName = this.normalizeStatementName( nameToken );\n    command.type = \"call\";\n\n\n    if( token.type != \"@@@notoken\") {\n      tokens.unshift( token );\n    }\n\n    command.params = [];\n\n    while ( true ) {\n\n      var endCommand = false;\n      var endTokens = [];\n      endTokens.push( { type: \"sep\", data: \"@@@all\" });\n      endTokens.push( { type: \"cmdsep\", data: \"@@@all\" });\n\n      var expression = this.parseBoolExpression( context, endTokens );\n      if( this.debugFlag ) {\n        console.log( expression );\n      }\n\n      if( expression != null ) {\n        command.params.push( expression );\n\n        token = tokens.shift();\n        if( token != undefined ) {\n          if( token === undefined ) {\n            endCommand = true;\n          }\n          if( token.type == \"cmdsep\" ) {\n            endCommand = true;\n          }\n          else if( token.type == \"sep\") {\n            continue;\n          }\n          else {\n            this.throwError( context, \"unexpected chars in statement call: '\" + token.data +\"'\");\n          }\n        }\n        else {\n          endCommand = true;\n        }\n\n      }\n      else {\n        endCommand = true;\n      }\n\n      if( endCommand  ) {\n        commands.push( command );\n        break;\n      }\n    }\n  }\n\n\tparseLineCommands( context, preTokens ) {\n\n\t\tvar tokens = context.tokens;\n\t\tvar commands = [];\n\n\t\tvar i=1;\n\t\twhile( true ) {\n\n\t\t\tvar command = {};\n\t\t\tvar token;\n      var keyword = false;\n      var control = false;\n\n\t\t\tcommand.lineNumber = context.lineNumber;\n\n\t\t\ttoken = tokens.shift();\n\t\t\tif( token === undefined ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( token.type == \"cmdsep\" ) {\n\t\t\t\t/* empty command */\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( token.type != \"name\" ) {\n\t\t\t\tthis.throwError( context, \"Unexpected token, expected symbolname, got \" + token.type + \"/\" + token.name) ;\n\t\t\t}\n\n\t\t\tvar nameToken = token.data;\n\t\t\tvar cmdType = \"unknown\";\n\n\t\t\tif( this.CTRL_KW.indexOf( token.data ) > -1) {\n\t\t\t\t\tcontrol = true;\n\t\t\t}\n\n      if( this.KEYWORDS.indexOf( token.data ) > -1 || token.data == \"XON\") {\n\t\t\t\t\tkeyword = true;\n\t\t\t}\n      else {\n        if( this.SHORTCUT_KW.indexOf( token.data ) > -1) {\n  \t\t\t\t\tkeyword = true;\n  \t\t\t}\n      }\n\n\t\t  token = tokens.shift();\n\t\t\tif( token === undefined ) {\n\t\t\t\ttoken = { type: \"@@@notoken\" };\n\t\t\t}\n\n      if (  control ) {\n\n        this.parseControlStructure( context, preTokens, commands, command, nameToken, token );\n\n      }\n\t\t\telse if( token.type == \"eq\") {\n\n\t\t\t\tthis.parseAssignment( context, preTokens, commands, command, nameToken, token );\n\t\t\t}\n      else if( token.type == \"bracket\" && token.data==\"(\" && !keyword ) {\n\n\t\t\t\tthis.parseArrayAssignment( context, preTokens, commands, command, nameToken, token );\n\n\t\t\t}\n      else {\n          if( !keyword ) {\n            console.log(\"Dump: \",context, preTokens, commands, command, nameToken, token);\n            this.throwError( context, \"statement without keyword\");\n          }\n          this.parseStatementCall( context, preTokens, commands, command, nameToken, token );\n\n      }\n\n\t\t}\n    return commands;\n\t}\n\n  logTokens( tokens ) {\n    if( !this.debugFlag ) { return ; }\n\n    var tokensStr = \"\";\n    for( var i=0; i<tokens.length; i++) {\n      var tok = tokens[i];\n      var tokStr = tok.type + \":\" + tok.data;\n      if( tokensStr != \"\" ) {\n        tokensStr += \", \";\n      }\n      tokensStr += tokStr;\n    }\n\n    console.log( tokensStr );\n\n\n    for( var i=0; i<tokens.length; i++) {\n        var tok = tokens[i];\n        console.log(\"token: \",tok);\n    }\n\n  }\n\n  parseLine( line ) {\n\n    var lineRecord = {\n      lineNumber: -1,\n      commands: []\n    };\n\n    var errContext, detail, lineNr=-1;\n    try {\n      errContext=\"TOKENIZER\";\n      detail=\"INIT\";\n  \t\tvar toker = new Tokenizer( new StringReader ( line ), this.KEYWORDS );\n\n      detail=\"PARSING TOKENS\";\n      var tokens = toker.tokenize();\n      if( this.debugFlag ) {\n        console.log(\"Tokens after tokenizer\");\n      }\n      this.logTokens( tokens );\n\n      detail=\"INTERNAL\";\n      tokens = this.upperCaseNameTokens( tokens );\n      tokens = this.removePadding( tokens );\n      tokens = this.mergeCompTokens( tokens );\n      tokens = this.mergeBrokenUpTokens( tokens );\n\n\n      if( this.debugFlag ) {\n        console.log(\"Tokens after merge\");\n      }\n      this.logTokens( tokens );\n\n      if( tokens.length == 0 ) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\tif( tokens[0].type == \"num\" ) {\n  \t\t\tlineRecord.lineNumber = tokens[0].data;\n        lineNr = tokens[0].data;\n        tokens.shift();\n      }\n\n  \t\tvar context = {\n        tokens: tokens,\n        lineNumber: lineRecord.lineNumber\n      }\n\n      errContext = \"PARSER\";\n      detail=\"PARSING COMMANDS\";\n      var commands = this.parseLineCommands( context );\n      lineRecord.commands = commands;\n      lineRecord.raw = line;\n      return lineRecord;\n    }\n    catch ( e ) {\n\n      if( this.erh.isError( e ) ) {\n        if( e.lineNr == -1 ) {\n          if( lineNr != -1 ) {\n            e.lineNr = lineNr;\n          }\n        }\n        throw e;\n      }\n      this.throwError( null, errContext + \": \" + detail );\n    }\n  }\n\n  getTokens( line, merge, noPadding  ) {\n\n    try {\n      var toker = new Tokenizer( new StringReader ( line ), this.KEYWORDS );\n      var tokens = toker.tokenize();\n      if( noPadding) { tokens = this.removePadding( tokens ); }\n      if( merge ) {tokens = this.mergeCompTokens( tokens ); }\n      this.logTokens( tokens );\n      return tokens;\n    }\n    catch ( e ) {\n      console.log( e );\n      this.throwError(null,\"getTokens error\",\"internal\");\n    }\n  }\n}\n\n//--EOC \n\n// ## basictokenizer.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basictokenizer.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basictokenizer.js\n\nclass StringReader {\n\n\tconstructor( strIn ) {\n\t\t\tthis.buffer = strIn;\n\t\t\tthis.index = 0;\n\t\t\tthis.lineIndex = 1;\n\t\t\tthis.line = 1;\n\t\t\tvar a={}; a.b=strIn;\n\n\t}\n\n\tpeek() {\n\t\treturn this.buffer.substr( this.index,1 );\n\t}\n\tpeek2() {\n\t\treturn this.buffer.substr( this.index,2 );\n\t}\n\n\n\tunconsume( x ) {\n\t\tthis.index -= x;\n\t}\n\n\tconsume() {\n\n\t\tvar c = this.buffer.substr( this.index,1 );\n\t\tthis.index ++;\n\t\tif( c == \"\\n\") {\n\t\t\tthis.line++;\n\t\t\tthis.lineIndex = 1;\n\t\t}\n\n\t}\n\n\tEOF() {\n\t\tvar len = this.buffer.length;\n\t\tif( this.index < len ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\nclass Tokenizer {\n\n\tconstructor( reader, keywords ) {\n\t\t\tthis.tokens = [];\n\t\t\tthis.reader = reader;\n\t\t\tthis.keywords = keywords;\n\t}\n\n\tisOpChar( ctx ) {\n\n\t\tvar rv = ctx.c.match(\"[+]|[-]|[*]|[/]|[\\\\^]|[;]\") != null;\n\n\t\treturn [rv,0];\n\n\t}\n\n\tisCompChar( ctx ) {\n\n\t\tvar rv =  (ctx.c == \"<\" || ctx.c == \">\");\n\t\treturn [rv,0];\n\t}\n\n\tisEqChar( ctx ) {\n\t\t\tif( ctx.c == \"=\" ) {\n\t\t\t\treturn [true,0];\n\t\t\t}\n\t\t\treturn [false,0];\n\t}\n\n\n\tisNameChar( ctx  ) {\n\n\t\t//console.log(\"SEQ: \" + ctx.seq);\n\t\tif( ctx.endFound ) {\n\t\t\treturn [false,0];\n\t\t}\n\t\tvar rv = ctx.c.match(\"[a-zA-Z0-9$%?]\") != null;\n\n\t\tif( ctx.c==\"$\" || ctx.c== \"%\") {\n\t\t\tctx.endFound = true;\n\t\t}\n\n\t\tif( this.keywords.indexOf( ctx.seq ) >-1 ) {\n\t\t\t//console.log(\"Found Keyword: \" + ctx.seq );\n\t\t\tctx.endFound = true;\n\t\t}\n\t\telse if( ! (ctx.seq === undefined )) {\n\t\t\tvar trappedKW = false;\n\t\t\tvar trapped = null;\n\t\t\tfor( var i=0; i<this.keywords.length; i++) {\n\t\t\t\tvar kw = this.keywords[i];\n\t\t\t\tif( ctx.seq.indexOf( kw ) > 0 )  {\n\t\t\t\t\ttrappedKW = true;\n\t\t\t\t\ttrapped = kw;\n\t\t\t\t\t//console.log( \"trapped-------------\" );\n\t\t\t\t\t//console.log( kw );\n\t\t\t\t\t//console.log( ctx.seq );\n\t\t\t\t\t//console.log( ctx );\n\t\t\t\t\treturn [rv, kw.length ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn [rv,0];\n\t}\n\n\tisNumChar( ctx  ) {\n\t\treturn [(ctx.c.match(\"[0-9\\.~]\") != null),0];\n\t}\n\n\tisPadChar( ctx  ) {\n\t\t\tif( ctx.c == \" \" || ctx.c == \"\\t\" || ctx.c == \"\\n\" || ctx.c == \"\\r\") {\n\t\t\t\treturn [true,0];\n\t\t\t}\n\t\t\treturn [false,0];\n\t}\n\n\tisCommandSepChar( ctx  ) {\n\t\t\tif( ctx.c == \":\" ) {\n\t\t\t\treturn [true,0];\n\t\t\t}\n\t\t\treturn [false,0];\n\t}\n\n\n\tisSepChar( ctx  ) {\n\t\t\tif( ctx.c == \",\" ) {\n\t\t\t\treturn [true,0];\n\t\t\t}\n\t\t\treturn [false,0];\n\t}\n\n\tisAnyChar( ctx  ) {\n\t\t\treturn [true,0]; /* Will be executed last */\n\t}\n\n\tisBracket( ctx  ) {\n\t\tif( ctx.c == \"(\" || ctx.c == \")\" || ctx.c == \"[\" || ctx.c == \"]\") {\n\t\t\treturn [true,0];\n\t\t}\n\t\treturn [false,0];\n\t}\n\n\n\tisStrChar( ctx ) {\n\n\t\tif( ctx.endFound ) {\n\t\t\treturn [false,0];\n\t\t}\n\n\t\tif( ctx.index == 0) {\n\t\t\tif( ctx.c==\"\\\"\" ) {\n\t\t\t\tctx.inString = true;\n\t\t\t\treturn [true,0];\n\t\t\t}\n\t\t\treturn [false,0];\n\t\t}\n\t\telse if( ctx.inString ) {\n\t\t\tif ( ctx.index > 0 && ctx.c==\"\\\"\") {\n\t\t\t\tctx.endFound = true;\n\t\t\t}\n\t\t\treturn [true,0];\n\t\t}\n\n\t\treturn [false,0];\n\n\t}\n\n\tnormalizeToken( tok0 ) {\n\t\tvar tok = tok0;\n\n\t\ttok.type = tok0.type;\n\n\t\tif( tok.type == \"str\" ) {\n\t\t\t\ttok.data = tok0.data.substr(1,tok0.data.length-2);\n\t\t}\n\t\treturn tok;\n\t}\n\n\treadChars( read, type0, compareF, tokenType ) {\n\t\tvar tok = { type: type0, data : \"\" }\n\t\tvar ctx = { index:0, prev: null, seq: \"\" };\n\n\t\twhile(!read.EOF()) {\n\n\t\t\tvar c = read.peek();\n\n\t\t\tctx.seq += c;\n\t\t\tctx.c = c;\n\n\t\t\tvar rv = this[compareF ] ( ctx );\n\t\t\tif( rv[1] > 0 ) {\n\t\t\t\t\tread.unconsume( rv[1]-1 );\n\t\t\t\t\tctx.seq = ctx.seq.substr(0,ctx.seq.length-rv[1]) ;\n\t\t\t\t\ttok.data = ctx.seq;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif( !rv[0] ) {\n\t\t\t\treturn this.normalizeToken( tok );\n\t\t\t}\n\t\t\ttok.data += c;\n\t\t\tread.consume();\n\n\t\t\tctx.index++;\n\t\t\tctx.prev = c;\n\n\t\t\tif( tokenType == \"chr\") {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.normalizeToken( tok );\n\t}\n\n\n\ttokenize() {\n\t\tvar read = this.reader;\n\n\t\tvar _this = this;\n\t\tvar tokens = [];\n\n\t\tvar parseRules = [];\n\t\tvar TYPEIX = 0;\n\t\tvar FUNCIX = 1;\n\t\tvar STRINGTYPEIX = 2;\n\n\t\tparseRules.push([\"pad\", \t\t\"isPadChar\"\t\t, \"str\"] );\n\t\tparseRules.push([\"str\", \t\t\"isStrChar\"\t\t, \"str\"] );\n\t\tparseRules.push([\"num\", \t\t\"isNumChar\"\t\t, \"str\"] );\n\t\tparseRules.push([\"name\", \t\t\"isNameChar\"\t, \"str\"] );\n\t\tparseRules.push([\"op\", \t\t\t\"isOpChar\"   \t, \"chr\"] );\n\t\tparseRules.push([\"comp\", \t\t\"isCompChar\"  , \"chr\"] );\n\t\tparseRules.push([\"eq\", \t\t\t\"isEqChar\"   \t, \"chr\"] );\n\t\tparseRules.push([\"bracket\", \"isBracket\"   , \"chr\"] );\n\t\tparseRules.push([\"sep\", \t\t\"isSepChar\"   , \"chr\"] );\n\t\tparseRules.push([\"cmdsep\", \t\"isCommandSepChar\"   , \"chr\"] );\n\t\tparseRules.push([\"trash\", \t\"isAnyChar\"   , \"chr\"] );\n\n\t\twhile( !read.EOF() ) {\n\t\t\tvar c = read.peek();\n\t\t\tvar tokenFound = false;\n\n\t\t\tfor( var i=0; i<parseRules.length; i++) {\n\t\t\t\tvar rule = parseRules[ i ];\n\n\t\t\t\tvar ctx = { index: 0, c:c }\n\t\t\t\tvar rv = this[rule[FUNCIX]]( ctx );\n\t\t\t\tif( rv[0] ) {\n\t\t\t\t\t\tvar tok = this.readChars( read, rule[TYPEIX], rule[FUNCIX], rule[STRINGTYPEIX] );\n\n\t\t\t\t\t\ttokens.push( tok );\n\t\t\t\t\t\ttokenFound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//do nothing\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!tokenFound) {\n\t\t\t\tthrow \"syntax error, unexpected character: '\" + c + \"' =>\" + read.line + \":\" + read.lineIndex;\n\t\t\t}\n\t\t}\n\t\treturn tokens;\n\t}\n}\n\n//--EOC \n\n// ## input.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/input.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/input.js\n\nclass Input {\n\n  constructor() {\n    this.keyPress = [];\n    this.interactive = false;\n  }\n\n  setHandler( hc ) {\n    this.handlerClazz = hc;\n  }\n\n  setInterActive( flag ) {\n    this.interactive = flag;\n  }\n\n  inputKeyHandler( e )  {\n\n    if( !this.interactive ) {\n        this.keyPress.push( e );\n    }\n    else {\n\n        var hc = this.handlerClazz;\n        hc[\"interactiveKeyHandler\"]( e );\n\n    }\n  }\n\n  getKey() {\n    var key = this.keyPress.shift();\n    if( key ) {\n      return key;\n    }\n    return null;\n  }\n\n}\n\nclass MutedInput {\n\n  setHandler( hc ) {}\n  setActive( flag ) {}\n  getKey() { return null; }\n  inputKeyHandler(e) {}\n  getKey() { return null;}\n\n}\n\n//--EOC \n\n// ## processes.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/processes.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/processes.js\n\nclass processes {\n\n\tconstructor( sys ) {\n\n\t\tthis.sys = sys;\n\t\tthis.processes = [];\n\t\tthis.count = 0;\n\n\t\tvar _this = this;\n    var processes = _this.processes;\n\n\t\tthis.sys.log(\"Starting process interval\");\n\t\tsetInterval(function()  {\n\n\t\t\tfor( var i=0; i<processes.length; i++ ) {\n\t\t\t\tif( processes[i] ) {\n\t\t\t\t\tprocesses[ i ].cycle();\n\t\t\t\t\t//_this.count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\tgetTicks() {\n\t\treturn this.count;\n\t}\n\n\tregister( obj ) {\n\n\t\tvar newId = this.processes.length;\n\n\t\tthis.processes.push( obj );\n\n\t\treturn newId;\n\t}\n\n\tgetRoot() {\n\n\t\treturn this.processes[ 0 ];\n\t}\n}\n\n//--EOC \n\n// ## workerwrapper_static.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/workerwrapper_static.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/workerwrapper_static.js\n\nsys.log(\"Starting\");\nstart_sys();\n\n//--EOC \n\n"],"names":["sys","appName","unique","console","post","type","message","postMessage","log","args","Array","prototype","slice","call","arguments","args2","i","length","push","JSON","stringify","logerr","out","write","writeln","writec","c","control","control2","d","nl","html","htmlnode","get","wait_for_result","init_sys","BasicArray","constructor","name","indices","defaultValue","this","buffer","getIndexCount","_check","set","val","ptr","last","undefined","ErrorHandler","newError","clazz","detail","context","lineNr","throwError","fromSerializedError","s","lineNr0","isSerializedError","parts","substr","split","e","startsWith","isError","Object","toString","clss","BasicRuntime","debugFlag","output","input","setHandler","setInterActive","program","runFlag","waitForMessageFlag","waitForMessageVariable","executeLineFlag","goPlayExampleFlag","breakCycleFlag","inputFlag","listFlag","immersiveFlag","gosubReturn","nullTime","Date","getTime","turboMode","cmdCountPerCycleDefault","cmdCountPerCycleTurbo","cmdCountPerCycle","commands","BasicCommands","extendedcommands","ExtendedCommands","erh","vars","functions","data","kbBuffer","yPos","lineMarkers","SHORTLINE","LONGLINESTART","LONGLINEEND","forContext","default","outputCallBacksAll","lineOverFlow","method","scroll","clearScreen","outputCallBacksClScr","setTurbo","synchClock","exitMode","code2colMap","km","symbolTable","up","down","left","right","black","white","red","cyan","purple","green","blue","yellow","orange","brown","pink","grey1","grey2","grey3","backmap","mapInfo","entries","symbolTableBM","startWaitForMessage","variable","receiveMessage","_message","interactiveKeyHandler","kbEvent","keyLabel","key","lineInput","handleLineInput","HandleStopped","importPGMHandler","content","filename","pgm","textLinesToBas","fileName","exportPGM","exportName","text","getProgramAsText","DESKTOP","requestDownload","exitProgram","closeWindow","windowId","enterListMode","list","listPointer","setExitMode","v","nullClock","setHours","setSeconds","setMinutes","setMilliseconds","on","cursorCountMax","cursorCountMaxTurbo","cursorCountMaxNormal","setProgram","appendProgram","exists","j","sort","a","b","getProgram","getProgramState","runPointer","runPointer2","setProgramState","pgmState","updateEditMode","setEditModeCallBacks","_setByteBits","bits","byte","_getByteBits","masks","results","printError","supressLine","explicitline","toUpperCase","onLineStr","printInfo","printLine","reverseOn","print","cursorHome","getJiffyTime","millis","Math","floor","hours","minutes","reset","hard","muteReady","writel","clrPGM","passChars","chs","hideDebug","sendChars","compressPGMText","pgmTxt","p","Parser","init","kws","getKeyWordCodes","txt2","kw","replaceAll","toLowerCase","String","fromCharCode","getProgramAsTextNoPETSCII","l","prepareLineForExportNoPETSCII","trim","prepareLineForExport","txt0","txt","dst","charCodeAt","symdef","charAt","src","str1","str2","rv","indexOf","replace","rebuildNoPETSCIILineString","raw","noPetsciiLine","parseLine","toLower","cc","prevCharIsQuote","nextCharIsQuote","dst2","ResolveStringSymbolToCode","x","prepareLineForImport","num","parseInt","getProgramLines","padZeros2","evalExpressionPart","PI","parseFloat","endsWith","varIntName","arr","ai","evalExpression","values","params","par","value","ecommands","cmds","nFunName","functionName","stc","fName","parValue","restore","functRecord","expr","op","pow","negate","binaryNegate","exitInputState","clearCursor","breakCycle","cycle","cmdCount","listCodeLine","cursorCount","blinkCursor","bf","runCommands","af","executedCount","retreiveRuntimeLine","err","doReturn","oldPointers","pop","gosub","line","len","retLine","retCmd","goto","found","startAsGoto","runPGM","listStop","runStop","isRunning","isListing","isInput","readData","dataPointer","result","rawLine","inString","sendCharsSimple","rebuildLineString","nr","removePadding","renumbering","addSmartPadding","shortenKeywords","newString","tokens","getTokens","foundGoto","newLine","lineIsData","controlKW","lineIsRem","renumberProgram","start","gap","newLineNr","lineNumbers","newLineNr2","ceil","lRec","PETSCIIreplace","keywordCompress","compressProgram","normalizeProgram","restoreDataPtr","bak1","bak2","command","k","doForInit","from","to","step","varName","cmdPointer","cmdArrayLen","linePointersLen","ctx","ctxv","jumpTo","doForNext","nextVarName","retreiveLine","parseLineNumber","commandToString","cmd","statementName","var","limit","TERMINATE_W_JUMP","end","cnt","cn","onCommand","onExpr","onLineNrs","jump","nextVar","ix","arrRec","arrayNames","pardefs","mycommands","enabled","varType","arrayAssignment","expression","setVar","old","linenr","oldProgram","new","removePgmLine","pgm2","pl","padSpaces6","no","padSpaces8","insertPgmLine","insertPgmLineLocal","myProgram","lines","lineNumber","printReady","startConsoleDataInput","inputVars","inputVarsPointer","str","isInputCommand","qMark","isNaN","func","statementList","getStatements","stats","getOwnPropertyNames","stats2","getFunctions","_stat_cls","pars","_stat_reverse","reverse","_stat_hide","_if_html","_stat_html","handleIx","htmlHandle","htmlValue","htmlAppend","exparts","exparts2","_stat_htmlnode","node","_stat_color","col","_fun_uc_DLR_","fromCodePoint","_fun_html_DLR_","pgmman","rt","addRuntime","randnrs","random","randIndex","randStep","_stat_new","_stat_list","_if_get","_if_read","_if_input","_if_list","_if_run","_stat_read","p0","_stat_get","getKey","_stat_input","con","_stat_restore","_stat_load","load","_stat_save","save","_stat_sys","_stat_wait","_stat_verify","_stat_run","_if_print","isNumber","isFinite","normalizeIfNumber","_stat_print","_stat_clr","_fun_chr_DLR_","_fun_str_DLR_","_fun_abs","_fun_len","_fun_asc","_fun_val","_fun_exp","exp","intGetNextRand","intSeedRand","base","_fun_rnd","_fun_sqr","sqrt","_fun_log","_fun_pos","getLinePos","_fun_left_DLR_","_fun_right_DLR_","_fun_mid_DLR_","_fun_fre","_fun_sin","sin","_fun_tan","tan","_fun_atn","atan","_fun_cos","cos","_fun_spc","_max","m","_fun_usr","_fun_int","_fun_tab","_fun_sgn","_fun_jiffies","ecmds","CTRL_KW","SHORTCUT_KW","KEYWORDS","more","screenCodes2CTRLTable","tab","KWCODES","padArray","missing","clazz2","upperCaseNameTokens","token","tokens2","mergeCompTokens","token2","mergeBrokenUpTokens","splits","p1","p2","p3","whole","r","mergeTokenRange","record","tokens3","parseFunParList","even","endTokens","parseBoolExpression","shift","peekIfNextIsOpenBracket","parseSubExpression","tokensToString","endTokensToString","endTokenArry","et","endToken","isEndToken","parseSimpleExpression","endLoop","returnValue","pair","endTokens0","first","eList","parseExpression","opData","dbg","dbg2","retExpr","newParts","part","unshift","subEndTokens","isUserDefinedFunctionCall","parameters","subExpression","groupParts","oldExpression","parts0","parts1","parts2","prevPart","subExpr","normalizeStatementName","parseAssignment","preTokens","nameToken","token0","parseArrayAssignment","parseControlStructure","controlToken","expr_fn","nums","onType","expr_from","expr_to","expr_step","explicit","nextcommand","expr1","insert","block","parseLineCommands","bi","dataArray","parseStatementCall","endCommand","keyword","logTokens","tokensStr","tok","errContext","lineRecord","toker","Tokenizer","StringReader","tokenize","merge","noPadding","strIn","index","lineIndex","peek","peek2","unconsume","consume","EOF","reader","keywords","isOpChar","match","isCompChar","isEqChar","isNameChar","endFound","seq","isNumChar","isPadChar","isCommandSepChar","isSepChar","isAnyChar","isBracket","isStrChar","normalizeToken","tok0","readChars","read","type0","compareF","tokenType","prev","parseRules","tokenFound","rule","processes","count","setInterval","getTicks","register","obj","newId","getRoot","keyPress","interactive","hc","handlerClazz","flag","inputKeyHandler","self","onmessage","pgmData","runtime","QPath","stop"],"sourceRoot":""}