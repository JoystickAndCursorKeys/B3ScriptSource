{"version":3,"file":"basicworker.js","mappings":"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","sources":["webpack://webpack-demo/./tmp/basicworker.js"],"sourcesContent":["//src/sys/modules/basic/worker/sys.js\n//src/sys/modules/basic/worker/basicarray.js\n//src/sys/modules/basic/worker/basicerrorhandler.js\n//src/sys/modules/basic/worker/editor.js\n//src/sys/modules/basic/worker/basicruntime.js\n//src/sys/modules/basic/worker/extendedcommands.js\n//src/sys/modules/basic/worker/pgmmanager.js\n//src/sys/modules/basic/worker/basiccommands.js\n//src/sys/modules/basic/worker/basicparser.js\n//src/sys/modules/basic/worker/basictokenizer.js\n//src/sys/modules/basic/worker/input.js\n//src/sys/modules/basic/worker/processes.js\n//src/sys/modules/basic/worker/../../rwbuffers/worker/textarea.js\n//src/sys/modules/basic/worker/../../rwbuffers/worker/bitmap.js\n//src/sys/modules/basic/worker/workerbootstrap_static.js\n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n\n// ## sys.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/sys.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/sys.js\n\nvar sys = {\n  appName: \"unknown\",\n  unique: 0\n\n};\n\nconsole = sys;\n\n/* LOGGER */\n\nfunction init_sys() {\n\n\n\n  function post( type, message ) {\n    postMessage( { type: type, message: message } );\n  }\n\n  sys.post = post;\n\n  sys.log = function() {\n\n      var args = Array.prototype.slice.call(arguments);\n      var args2 = [];\n\n      for( var i=0; i<args.length ; i++) {\n        args2.push( JSON.stringify( args[ i ]) );\n      }\n      post(\"syslog\",args2 );\n\n  }\n\n  sys.logerr = function() {\n\n      var args = Array.prototype.slice.call(arguments);\n      post(\"syserr\",args );\n\n  }\n\n\n  sys.setDisplayMode = function( rt, m ){\n    post( \"displaymode\", { processId: rt.processId, m:m } );\n  }\n\n  sys.blinkMode = function( m ){\n    post( \"blinkMode\", { m:m } );\n  }\n\n\n\n\n  sys.html = {}\n  sys.html.html = function() {\n\n      var args = Array.prototype.slice.call(arguments);\n      post( \"html\",args );\n\n  }\n\n  sys.html.htmlnode = function() {\n\n    var args = Array.prototype.slice.call(arguments);\n    post( \"htmlnode\",args );\n\n  }\n\n\n  sys.html.get = function() {\n\n    post( \"htmlget\", args );\n    return { wait_for_result: true }\n\n  }\n\n  sys.export = function( code ) {\n    post( \"export\", { code: code } );\n  }\n\n}\n\nfunction start_sys() {\n  sys.log(\"Starting wsys\");\n\n  sys.processes = new processes( sys );\n  sys.input = new Input( sys );\n  sys.out = new TextArea( sys );\n  sys.bout = new BitMap( sys );\n\n  /* APPLICATION */\n\n  /* HANDLERS */\n  self.onmessage = function( obj ) {\n\n      try {\n        var data = obj.data;\n\n        if( data.type == \"keydown\" ) {\n\n          sys.input.inputKeyHandler( data );\n\n        }\n        else if( data.type == \"message\") {\n          var id = data.processId;\n          var runtime = sys.processes.get( id );\n\n          runtime.receiveMessage( data.message, data.messageObject );\n\n          //TODO, index of runtime.\n        }\n        else if( data.type == \"loadpgm\" ) {\n\n          sys.log(\"Received 'loadpgm' message. Loaded \" + data.pgmData.length + \" bytes..\" );\n\n          var editor = new Editor( sys );\n          var runtime = new BasicRuntime( sys, editor );\n          sys.log(\"Context created, parsing program\");\n\n          var ok = runtime.bootPGM( data.pgmData, data.QPath  );\n          sys.log(\"Parsed program => RUN\");\n\n          if( ok ) {\n            runtime.runPGM();\n            sys.log(\"Program started...\");\n          }\n          else {\n            runtime.stop();\n          }\n\n          var id = sys.processes.register( runtime );\n          sys.log(\"Basic program registered as process \" + id + \".\");\n\n          pgmman.addRuntime( runtime );\n\n\n        }\n        else if( data.type == \"inittxtarea\" ) {\n\n          sys.log( \"init with: \" + JSON.stringify( data ) )\n          sys.out.attach( data.w, data.h );\n\n        }\n        else if( data.type == \"initbitmap\" ) {\n\n          sys.log( \"init with: \" + JSON.stringify( data ) )\n          sys.bout.attach( data.w, data.h );\n\n        }\n        else {\n          var type = obj.data;\n          if(! type ) {\n            type = \"????\";\n          }\n          else {\n            type=type.type;\n            if(! type ) {\n              type = \"????\";\n            }\n          }\n          sys.logerr( \"Ignored unclassified message type (\"+type+\") for 'APP://\"+sys.appName+\"':  \" + JSON.stringify( obj.data ) );\n          //postMessage( self.onAppMessage( obj ) );\n        }\n      }\n      catch( e ) {\n        if( e.message ) {\n          sys.logerr( e.message + \" at \" + e.fileName + \":\"+ e.lineNumber );\n        }\n        else if ( e.clazz ) {\n          sys.logerr( e.clazz + \": \" + e.detail + \" at \"+ e.lineNr );\n          sys.out.writeln( \"?\" + e.clazz + \" error at \" + e.lineNr );\n        }\n\n        sys.logerr( JSON.stringify( e ) );\n\n      }\n\n    }\n}\n\ninit_sys();\n\n//--EOC \n\n// ## basicarray.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basicarray.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basicarray.js\n\nclass  BasicArray {\n\n  constructor( name, indices, defaultValue  ) {\n    this.name = name;\n    this.indices = indices;\n    this.buffer = null;\n    this.defaultValue = defaultValue;\n  }\n\n  getIndexCount() {\n    return this.indices.length;\n  }\n\n  _check( indices ) {\n    if( indices.length != this.indices.length ) {\n      throw \"00:index dimension mismatch for array \" + this.name;\n    }\n    for( var i=0; i<indices.length; i++) {\n      if ( indices[i] > this.indices[ i ]) {\n        throw \"01:index \" + indices[i] + \" out of bounds for array \" + this.name + \" for index \" + i;\n      }\n      else if ( indices[i] < 0) {\n        throw \"02:index smaller then zero for array \" + this.name;\n      }\n\n    }\n  }\n\n  set( indices, val ) {\n    this._check( indices );\n    if( this.buffer == null ) {\n      this.buffer = [];\n    }\n    var ptr = this.buffer;\n    var last = indices.length - 1;\n    for( var i=0; i<=last; i++) {\n\n      if( i == last ) {\n        ptr[ indices[ i ]] = val;\n      }\n      else {\n        if( (ptr [ indices[i] ] === undefined )) {\n          ptr[ indices[ i ]] = [];\n        }\n        ptr = ptr[ indices[ i ]];\n      }\n    }\n  }\n\n  get( indices ) {\n    this._check( indices );\n\n    if( this.buffer == null ) {\n      return this.defaultValue;\n    }\n    var ptr = this.buffer;\n    var last = indices.length - 1;\n    for( var i=0; i<=last; i++) {\n\n      if( i == last ) {\n        return ptr[ indices[ i ]];\n      }\n      else {\n        if( (ptr [ indices[i] ] === undefined )) {\n          return this.defaultValue;\n        }\n        ptr = ptr[ indices[ i ]];\n      }\n    }\n  }\n\n}\n\n//--EOC \n\n// ## basicerrorhandler.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basicerrorhandler.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basicerrorhandler.js\n\nclass ErrorHandler {\n\n  newError( clazz, detail, context, lineNr ) {\n    return { context: context, clazz: clazz, detail: detail, lineNr: lineNr };\n  }\n\n  throwError( clazz, detail, context, lineNr ) {\n    throw this.newError( clazz, detail, context, lineNr );\n  }\n\n  fromSerializedError( s, context, lineNr0 ) {\n\n    var lineNr = lineNr0;\n    if( lineNr === undefined ) {\n      lineNr = -1;\n    }\n    if( ! this.isSerializedError( s ) ) {\n      return this.newError( \"unknown\", null, context, lineNr );\n    }\n    var parts = s.substr(1).split(\"@\");\n    if( parts.length == 1 ) {\n        return this.newError( parts[0], null, context, lineNr );\n    }\n    return this.newError( parts[0], parts[1], context, lineNr );\n\n  }\n\n  isSerializedError( e ) {\n    if( typeof e != \"string\" ) {\n      return false;\n    }\n    return e.startsWith( \"@\" );\n  }\n\n  isError( e ) {\n    if( Object.prototype.toString.call( e ) === '[object Object]' ) {\n      var ctx = e[ \"context\" ];\n      var clss = e[ \"clazz\" ];\n      var dtl = e[ \"detail\" ];\n\n      if( !( clss === undefined ) ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n//--EOC \n\n// ## editor.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/editor.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/editor.js\n\nclass Editor {\n\n  constructor( sys ) {\n    this.sys = sys;\n    this.output = sys.out;\n\n  }\n\n  addRunTime( rt ) {\n    this.runTime = rt;\n  }\n\n  interactiveKeyHandler( e ) {\n    //this.sys.log( \"editor got even \" + JSON.stringify( e ) );\n\n    if( e.keyLabel == \"Enter\" ) {\n      var command = sys.out.getCurrentLine();\n      this.output.writeln(\"\");\n\n      this.runTime.executeInteractiveLine( command );\n\n    }\n    else if( e.keyLabel == \"Backspace\" ||\n            e.keyLabel == \"Delete\"  ) {\n      var x = this.output.getCursorPos()[0];\n      if( x>0) {\n          this.output.backspace();\n      }\n    }\n    else if( e.keyLabel == \"ArrowUp\" ) {\n      this.output.cursorMove(\"up\");\n    }\n    else if( e.keyLabel == \"ArrowDown\" ) {\n      this.output.cursorMove(\"down\");\n    }\n    else if( e.keyLabel == \"ArrowLeft\" ) {\n      this.output.cursorMove(\"left\");\n    }\n    else if( e.keyLabel == \"ArrowRight\" ) {\n      this.output.cursorMove(\"right\");\n    }\n    else {\n      if( e.key != null ) {\n        this.output.write( e.key );\n      }\n    }\n\n  }\n}\n\n//--EOC \n\n// ## basicruntime.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basicruntime.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basicruntime.js\n\nclass BasicRuntime {\n\n  constructor( sys, editor ) {\n\n    this.debugFlag = false;\n    this.sys = sys;\n    this.editor = editor;\n    this.editor.addRunTime( this );\n    this.listSpeed = 15;\n\n    this.output = sys.out;\n    this.bitmap = sys.bout;\n    this.input = sys.input;\n    this.input.setHandler( this );\n    this.input.setInterActive( false);\n    this.html = sys.html;\n\n    this.program = [];\n    this.runFlag = false;\n    this.waitForMessageFlag = false;\n    this.waitForMessageVariable = null;\n    this.executeLineFlag = false;\n    this.goPlayExampleFlag = false;\n    this.breakCycleFlag;\n    this.inputFlag = false;\n    this.listFlag = false;\n    this.immersiveFlag = false;\n    this.gosubReturn = [];\n    this.nullTime = new Date().getTime();\n\n    this.turboMode = false;\n    this.cmdCountPerCycleDefault = 10000;\n    this.cmdCountPerCycleTurbo = 20000;\n    this.cmdCountPerCycle = this.cmdCountPerCycleDefault ;\n\n    //var ctx = this.outtext;\n    var c = this.output;\n    this.commands = new BasicCommands( this );\n    this.extendedcommands = new ExtendedCommands( this );\n    //this.extendedcommands.getStatements = function() { return [] };\n    //this.extendedcommands.getFunctions  = function() { return [] };\n\n    this.erh = new ErrorHandler();\n    this.vars = [];\n    this.functions = [];\n    this.data = [];\n    this.kbBuffer = [];\n\n    this.yPos = -1;\n    this.lineMarkers = [ 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0 ];\n    this.SHORTLINE = 0;\n    this.LONGLINESTART = 1;\n    this.LONGLINEEND = 2;\n\n    this.forContext = { default:[] }\n\n    this.outputCallBacksAll = {\n        lineOverFlow: { clazz: this, method: \"cbLineOverFlow\" },\n        scroll: { clazz: this, method: \"cbScroll\" },\n        clearScreen: { clazz: this, method: \"cbClearScreen\" }\n    }\n\n    this.outputCallBacksClScr = {\n        lineOverFlow: undefined,\n        scroll: { clazz: this, method: \"cbScroll\" },\n        clearScreen: { clazz: this, method: \"cbClearScreen\" }\n    }\n\n    //this.setTurbo( true );\n    this.synchClock( );\n    this.exitMode = \"stay\";\n\n    this.code2colMap = [];\n    var km = this.code2colMap;\n\n    km[0x90] = 0;\n    km[0x05] = 1;\n    km[0x1c] = 2;\n    km[0x9f] = 3;\n    km[0x9c] = 4;\n    km[0x1e] = 5;\n    km[0x1f] = 6;\n    km[0x9e] = 7;\n\n    km[0x81] = 8;\n    km[0x95] = 9;\n    km[0x96] = 10;\n    km[0x97] = 11;\n    km[0x98] = 12;\n    km[0x99] = 13;\n    km[0x9a] = 14;\n    km[0x9b] = 15;\n\n    this.symbolTable = {};\n\n    this.symbolTable.up     = 0x91;\n    this.symbolTable.down   = 0x11;\n    this.symbolTable.left   = 157;\n    this.symbolTable.right  = 29;\n    this.symbolTable[\"reverse on\"]  = 0x12;\n    this.symbolTable[\"reverse off\"]  = 0x92;\n    this.symbolTable[\"clear\"]  = 0x93;\n    this.symbolTable[\"home\"]  = 0x13;\n    this.symbolTable.black  = 144;\n    this.symbolTable.white  = 5;\n    this.symbolTable.red  = 28;\n    this.symbolTable.cyan  = 159;\n    this.symbolTable.purple  = 156;\n    this.symbolTable.green  = 30;\n    this.symbolTable.blue  = 31;\n    this.symbolTable.yellow  = 158;\n    this.symbolTable.orange  = 129;\n    this.symbolTable.brown  = 149;\n    this.symbolTable.pink  = 150; // light red\n    this.symbolTable.grey1  = 151;  //dark grey\n    this.symbolTable.grey2  = 152;\n    this.symbolTable[\"light green\"]  = 153;\n    this.symbolTable[\"light blue\"]  = 154;\n    this.symbolTable.grey3  = 155; //light grey\n\n\n    var backmap = []\n    var mapInfo = Object.entries(this.symbolTable);\n    for( var i=0; i<mapInfo.length; i++) {\n      backmap[ mapInfo[i][1]] = mapInfo[i][0];\n    }\n    this.symbolTableBM = backmap;\n\n  }\n\n  startWaitForMessage( variable ) {\n    this.waitForMessageFlag = true;\n    this.waitForMessageVariable = variable;\n  }\n\n  receiveMessage( _message, _data ) {\n\n    this.vars[ this.waitForMessageVariable ] = _message;\n    this.waitForMessageFlag = false;\n\n    if( _message == \"displaysize\" ) {\n        this.output.reInit( _data.textW, _data.textH );\n        this.output.reInit( _data.bitmapW, _data.bitmapH );\n\n        if( this.runFlag == false ) {\n            this.printReady();\n        }\n    }\n  }\n\n  stop() {\n    if( this.runFlag ) {\n      this.runStop();\n    }\n    if( this.listFlag ) {\n      this.listStop();\n    }\n  }\n\n  interactiveKeyHandler( e ) {\n\n    if( this.runFlag == true ) {\n      if( e.keyLabel == \"Enter\" ) {\n\n        this.output.writeln(\"\");\n        this.handleLineInput( this.lineInput, true );\n        this.lineInput = \"\";\n      }\n      else if( e.keyLabel == \"Backspace\" ||\n              e.keyLabel == \"Delete\"  ) {\n        var x = this.output.getCursorPos()[0];\n        if( x>0) {\n            if( this.lineInput.length > 0 ) {\n                this.output.backspace();\n                this.lineInput = this.lineInput.substr(0,this.lineInput.length-1)\n            }\n\n        }\n      }\n      else if( e.keyLabel == \"ArrowLeft\" ) {\n        this.output.cursorMove(\"left\");\n      }\n      else if( e.keyLabel == \"ArrowRight\" ) {\n        this.output.cursorMove(\"right\");\n      }\n      else {\n        if( e.key != null ) {\n          this.lineInput += e.key;\n          this.output.write( e.key );\n        }\n      }\n    }\n    else {\n      this.editor.interactiveKeyHandler( e );\n    }\n  }\n\n  HandleStopped() {\n\n    this.input.setInterActive( true);\n  }\n\n  importPGMHandler( content, filename ) {\n    var pgm = this.textLinesToBas( content.split(\"\\n\") );\n    this.fileName = filename;\n\n    this.program = pgm;\n    this.sys.log( \"imported program \" + filename +\" with \" + content.length + \" bytes \");\n  }\n\n  bootPGM( content, filename ) {\n    try {\n      var pgm = this.textLinesToBas( content.split(\"\\n\") );\n      this.fileName = filename;\n\n      this.program = pgm;\n      this.setProgram( pgm );\n\n      this.sys.log( \"imported program \" + filename +\" with \" + content.length + \" bytes \");\n      return true;\n    }\n    catch ( e ) {\n      var tmp = 1;\n\n      var pgm = this.textLinesToBas( \"\" );\n      this.program = pgm;\n      this.HandleStopped();\n      this.printError(\"parsing syntax\", false, e.lineNr, e.detail );\n      this.printReady();\n      return false;\n\n    }\n  }\n\n\n/*  exportPGM() {\n    var exportName = \"program.bas\";\n    if( this.fileName ) {\n      exportName = this.fileName;\n    }\n\n    var text = this.getProgramAsText();\n    this.DESKTOP.requestDownload( text, exportName );\n  }\n*/\n\n  exitProgram() {\n    this.closeWindow( this.windowId );\n  }\n\n\n  enterListMode( list ) {\n    this.listFlag = true;\n    this.list = list;\n    this.listPointer = 0;\n    this.input.setInterActive( false );\n  }\n\n  setExitMode( v ) {\n    this.exitMode = v;\n  }\n\n  synchClock() {\n\n    //var clock = new Date().getTime();\n    var nullClock = new Date();\n    nullClock.setHours(0);\n    nullClock.setSeconds(0);\n    nullClock.setMinutes(0);\n    nullClock.setMilliseconds(0);\n\n    this.nullTime = nullClock;\n\n  }\n\n  setTurbo( on ) {\n    if( on ) {\n      this.cmdCountPerCycle = this.cmdCountPerCycleTurbo ;\n      this.turboMode = true;\n      return;\n    }\n    this.cmdCountPerCycle = this.cmdCountPerCycleDefault ;\n    this.turboMode = false;\n  }\n\n  setProgram( pgm ) {\n    this.program = pgm;\n    this.runFlag = false;\n    this.HandleStopped();\n\n    this.inputFlag = false;\n    this.listFlag = false;\n    //this.output.clearCursor();\n  }\n\n  appendProgram( pgm ) {\n\n    for(var i=0; i<pgm.length; i++) {\n      var exists = -1;\n\n      for(var j=0; j<this.program.length; j++) {\n        if( this.program[j][0] == pgm[i][0] ) {\n          exists = j;\n        }\n      }\n\n      if( exists>-1 ) {\n        this.program[ exists ] = pgm[ i ];\n      }\n      else {\n        this.program.push( pgm[ i ] );\n      }\n    }\n\n    var sortF = function compare( a, b ) {\n      return a[0] - b[0];\n    }\n\n    this.program.sort( sortF );\n\n    this.runFlag = false;\n    this.HandleStopped();\n\n    this.inputFlag = false;\n    this.listFlag = false;\n    //this.output.clearCursor();\n  }\n\n  getProgram() {\n    return this.program;\n  }\n\n  getProgramState() {\n    return {\n      runFlag: this.runFlag,\n      inputFlag: this.inputFlag,\n      vars: this.vars,\n      functions: this.functions,\n      forContext: this.forContext,\n      runPointer: this.runPointer,\n      runPointer2: this.runPointer2\n    }\n  }\n\n  setProgramState( pgmState ) {\n      this.runFlag = pgmState.runFlag;\n      this.HandleStopped();\n      this.inputFlag = pgmState.inputFlag;\n      this.vars = pgmState.vars;\n      this.functions = pgmState.functions;\n      this.forContext = pgmState.forContext;\n      this.runPointer = pgmState.runPointer;\n      this.runPointer2 = pgmState.runPointer2;\n  }\n\n\n  updateEditMode() {\n\n\n    if( !this.runFlag && !this.listFlag && ! this.executeLineFlag ) {\n      this.setEditModeCallBacks( \"edit\" );\n      return;\n    }\n    else if( this.listFlag ) {\n      this.setEditModeCallBacks( \"edit\" );\n      return;\n    }\n    else if( this.runFlag && this.inputFlag ) {\n      this.setEditModeCallBacks( \"edit\" );\n      return;\n    }\n    else if( this.runFlag || this.executeLineFlag ) {\n      this.setEditModeCallBacks( \"print\" );\n      return;\n    }\n  }\n\n  _setByteBits( bits ) {\n\n   var byte = 0b00000000;\n\n   for( var i=0; i<8; i++) {\n     if(i>0) {\n       byte = byte >> 1;\n     }\n     if( bits[i]) {\n       byte = byte | 128;\n     }\n   }\n   return byte;\n  }\n\n  _getByteBits( byte ) {\n    var masks = [\n      0b00000001,0b00000010,0b00000100,0b00001000,\n      0b00010000,0b00100000,0b01000000,0b10000000\n    ];\n\n   var results = [ false, false, false, false, false, false, false, false ];\n\n   for( var i=0; i<8; i++) {\n\n     results[ i ] = (byte & masks[i]) > 0;\n\n   }\n\n   return results;\n  }\n\n  printError( s, supressLine, explicitline, detail ) {\n\n    var line1 = (\"?\" + s + \" error\" + this.onLineStr());\n\n    if( explicitline ) {\n        line1 = ( (\"?\" + s + \" error in \" + explicitline ) );\n    }\n    if( supressLine ) {\n\n        line1 = ( (\"?\" + s + \" error\") );\n    }\n\n    this.output.writeln(  line1 );\n    if( detail ) {\n      this.output.writeln(  \">> \" + detail );\n    }\n\n  }\n\n  printInfo( s ) {\n\n    this.sys.log(  ( s + this.onLineStr()).toUpperCase() );\n\n  }\n\n  printLine( s ) {\n    this.output.writeln(s.toUpperCase());\n    this.reverseOn = false;\n  }\n\n  print( s ) {\n    this.output.writeln(s.toUpperCase());\n    this.reverseOn = false;\n  }\n\n\n  clearScreen() {\n    this.output.clearScreen();\n    this.output.cursorHome();\n  }\n\n\n  getJiffyTime() {\n    var millis=new Date().getTime() - this.nullTime;\n    var jiffis = Math.floor(millis / (1000 / 60));\n\n    return jiffis % 5184000;\n  }\n\n  getTime() {\n    var millis=new Date().getTime() - this.nullTime;\n    millis = millis % 86400000;\n\n    var hours = Math.floor(millis / 3600000);\n    millis = millis - (hours * 3600000 );\n    var minutes = Math.floor(millis / 60000);\n    millis = millis - (minutes * 60000 );\n    var seconds = Math.floor(millis / 1000);\n    //millis = millis - (seconds * 1000 );\n    return [hours,minutes,seconds];\n  }\n\n  reset( hard, muteReady ) {\n    this.output.clearScreen();\n    this.output.writel(\"ready.\");\n\n    this.inputFlag = false;\n    this.runFlag = false;\n    this.listFlag = false;\n\n    this.clrPGM();\n    this.setTurbo( false );\n  }\n\n  compressPGMText( pgmTxt ) {\n\n    var p = new Parser( this.commands, this.extendedcommands );\n    p.init();\n    var kws = p.getKeyWordCodes();\n    var txt2 = pgmTxt;\n\n    for( var i=0; i<kws.length; i++) {\n      var kw = kws[i];\n      if( !(kw===undefined || kw === null )) {\n          txt2 = txt2.replaceAll( kw.toLowerCase() , String.fromCharCode(i));\n      }\n    }\n\n    return txt2;\n  }\n\n\n  getProgramAsTextNoPETSCII() {\n    var text = \"\";\n    for (const l of this.program)\n      {\n        if( text != \"\") {\n          text += \"\\n\";\n        }\n        text +=  this.prepareLineForExportNoPETSCII( l[2].trim(), true );\n      }\n    return text;\n  }\n\n\n  getProgramAsText() {\n    var text = \"\";\n    for (const l of this.program)\n      {\n        if( text != \"\") {\n          text += \"\\n\";\n        }\n        text +=  this.prepareLineForExport( l[2].trim() );\n      }\n    return text;\n  }\n\n  prepareLineForExport( txt0 ) {\n    var txt;\n    txt = txt0.trim();\n    var dst = \"\";\n\n    for( var i=0; i<txt.length; i++) {\n      var c = txt.charCodeAt( i );\n      if( c<31 || c==92 || c>=94 ) {\n        var symdef = this.symbolTableBM[ c ];\n        if( ! ( symdef === undefined ) ) {\n            dst += \"{\" + symdef + \"}\";\n        }\n        else {\n            dst += \"{\"+c+\"}\"\n        }\n\n      }\n      else {\n        dst += txt.charAt( i );\n      }\n    }\n    return dst.toLowerCase();\n  }\n\n  replaceAll( src, str1, str2 ) {\n\n    var rv = src;\n    while( rv.indexOf( str1 ) > -1 ) {\n      rv = rv.replace( str1, str2 );\n    }\n    return rv;\n  }\n\n\n  rebuildNoPETSCIILineString( raw )\n  {\n\n    var p = new Parser( this.commands, this.extendedcommands );\n    p.init();\n    var noPetsciiLine = this.prepareLineForExportNoPETSCII( raw, false );\n    var rec = p.parseLine( noPetsciiLine );\n    return rec;\n  }\n\n\n  prepareLineForExportNoPETSCII( txt0, toLower ) {\n    var txt;\n    txt = txt0.trim();\n    var dst = \"\";\n    var last= \"\";\n\n    for( var i=0; i<txt.length; i++) {\n      var c = txt.charCodeAt( i );\n      var cc = txt.charAt( i );\n      if( c<31 || c==92 || c>=94 ) {\n\n        var prevCharIsQuote = false, nextCharIsQuote=false;\n        if( (i+1)<txt.length) {\n          var cc2 = txt.charAt( i+1 );\n          if( cc2 == \"\\\"\" ) {\n            nextCharIsQuote = true;\n          }\n        }\n        if( last == \"\\\"\" ) {\n            prevCharIsQuote = true;\n          }\n\n        if( prevCharIsQuote && !nextCharIsQuote ) {\n            dst = dst.substr( 0, dst.length-1 );\n            dst += \"CHR$(\"+c+\");\\\"\";\n        }\n        else if( prevCharIsQuote && nextCharIsQuote ) {\n            dst = dst.substr( 0, dst.length-1 );\n            dst += \"CHR$(\"+c+\")\";\n            i++;\n        }\n        else if( !prevCharIsQuote && nextCharIsQuote ) {\n            dst += \"\\\";CHR$(\"+c+\")\";\n            i++;\n        }\n\n        else {\n            dst += \"\\\";CHR$(\"+c+\");\\\"\";\n        }\n      }\n      else {\n        dst += txt.charAt( i );\n      }\n      last = cc;\n    }\n\n    var dst2= this.replaceAll( dst, \";\\\"\\\";\",\";\");\n\n    if( toLower ) { return dst2.toLowerCase(); }\n    return dst2;\n  }\n\n  ResolveStringSymbolToCode( x ) {\n\n    if(this.symbolTable[x]) {\n      return this.symbolTable[x];\n    }\n\n    return x;\n  }\n\n  prepareLineForImport( txt0 ) {\n    var txt;\n    txt = txt0.trim(); //.toUpperCase();\n    var dst = \"\";\n\n    var i=0; while( i<txt.length ) {\n      var c = txt.charCodeAt( i );\n      if( c == 123 ) {\n        i++;\n        var num = \"\";\n        while( i < txt.length ) {\n            c = txt.charCodeAt( i );\n            if( c == 125 ) {\n              i++;\n              break;\n            }\n            num += String.fromCharCode( c );\n\n            if( this.debugFlag ) {\n              console.log(\"found ESC seq char \" + String.fromCharCode( c ) );\n              console.log(\"found ESC seq char code \" + c);\n            }\n            i++;\n        }\n\n        if( this.debugFlag ) {\n          console.log(\"found ESC seq \" + num);\n        }\n\n        num = this.ResolveStringSymbolToCode(num.toLowerCase());\n\n        if( this.debugFlag ) {\n          console.log(\"found resolved ESC seq \" + num);\n        }\n\n        dst += String.fromCharCode( parseInt( num, 10) );\n      }\n      else if( c == 8221 || c == 8220) { //looks like a double quote\n        dst += \"\\\"\";\n        i++;\n      }\n      else {\n        dst += txt.charAt( i );\n        i++;\n      }\n    }\n\n    if( this.debugFlag ) {\n      console.log(\"dst:\" + dst);\n    }\n\n    return dst;\n  }\n\n  getProgramLines() {\n\n    return this.program;\n  }\n\n  padZeros2( x ) {\n    var s = x + \"\";\n    for(var i=s.length; i<2; i++) {\n      s=\"0\"+s;\n    }\n    return s;\n  }\n\n  evalExpressionPart( p ) {\n    var val=0;\n\n    if( p.type==\"num\" ) {\n      if( p.data == \".\" ) {\n        val = 0;\n      }\n      else if((\"\"+p.data).indexOf(\".\") >= 0) {\n        val = parseFloat(p.data);\n      }\n      else {\n        val = parseInt(p.data);\n      }\n    }\n    else if( p.type==\"str\" ) {\n      val = p.data;\n    }\n    else if( p.type==\"var\" ) {\n      if(p.data.startsWith(\"TI\")) {\n        val = this.getJiffyTime();\n        if(p.data.endsWith(\"$\")) {\n          val = this.getTime();\n          val = \"\" +\n            this.padZeros2(val[0]) +\n            this.padZeros2(val[1]) +\n            this.padZeros2(val[2]);\n        }\n      }\n      else if(p.data == \"CURRENTLINE\") {\n        val = this.runPointer;\n        if( val != -1 ) {\n          val = parseInt( this.program[ val ][0] );\n        }\n      }\n      else if(p.data == \"PI\") {\n        val = Math.PI;\n      }\n      else {\n        val = this.vars[ p.data ];\n      }\n      if( val == undefined ) {\n        val = 0;\n      }\n    }\n    else if( p.type==\"array\" ) {\n      var varIntName = \"@array_\" + p.data;\n      var arr = this.vars[ varIntName ];\n\n      if( arr === undefined ) {\n        throw \"@no such array@Array '\"+ varIntName+\"' does not exist\";\n      }\n\n      if( arr.getIndexCount() != p.indices.length ) {\n          throw \"@bad subscript@Array index dimensions do not match\";\n      }\n\n      var indices = [];\n      for( var ai=0; ai<p.indices.length; ai++) {\n        indices[ai] = this.evalExpression( p.indices[ ai ] );\n      }\n\n      val = arr.get( indices );\n      if( val === undefined ) {\n        val = 0;\n      }\n\n    }\n    else if( p.type==\"expr\" ) {\n      val = this.evalExpression( p );\n    }\n    else if( p.type==\"funCall\" ) {\n\n      var values = [];\n      for( var j=0; j<p.params.length; j++) {\n        var par = this.evalExpression( p.params[j] );;\n        values.push( {value: par} );\n      }\n      try {\n        var commands = this.commands;\n        var ecommands = this.extendedcommands;\n        var cmds = this.commands;\n\n        var nFunName = \"_fun_\" + p.functionName.toLowerCase().replace(\"$\",\"_DLR_\");\n\n        var stc = commands[ nFunName ];\n        if( stc === undefined ) {\n\n          stc = ecommands[ nFunName ];\n\n          if( stc === undefined ) {\n\n            stc = ecommands[ nFunName ];\n\n            this.printError(\"no such function: \" + p.functionName);\n            console.log(\"Cannot find functionName \" + nFunName );\n\n            throw \"@no such function \" + p.functionName;\n\n          }\n          else {\n            cmds = ecommands;\n          }\n        }\n\n        val = cmds[ nFunName ]( values );\n\n      }\n      catch ( e ) {\n        throw e;\n      }\n    }\n    else if( p.type==\"defFnCall\" ) {\n\n      try {\n        var fName = p.functionName;\n        var parValue = this.evalExpression( p.params[0] );\n        var restore = null;\n\n        if( this.functions[ fName ] === undefined ) {\n          throw \"@undef'd function\";\n        }\n        var functRecord = this.functions[ fName ];\n\n        if(!(  this.vars[ functRecord.par ] === undefined )) {\n          restore= this.vars[ functRecord.par ];\n        }\n\n        this.vars[ functRecord.par ] = parValue;\n        val  = this.evalExpression( functRecord.expr );\n\n        if( restore != null ) {\n          this.vars[ restore.name ] = restore;\n        }\n        else {\n          this.vars[ functRecord.par ] = 0; //TODO, actually should delete it\n        }\n\n      }\n      catch ( e ) {\n        throw e;\n      }\n    }\n\n    return val;\n  }\n\n  evalExpression( expr ) {\n\n    if( expr == null ) {\n      return null;\n    }\n\n    if( expr.parts.length == 0 ) {\n      return null;\n    }\n\n    var val = this.evalExpressionPart( expr.parts[ 0 ] );\n\n    for( var i=1; i<expr.parts.length; i++) {\n      var p = expr.parts[ i ];\n      if( p.op == \"+\" ) {\n        val += this.evalExpressionPart( p );\n      }\n      else if( p.op == \"^\" ) {\n        val = Math.pow( val, this.evalExpressionPart( p ) );\n      }\n      else if( p.op == \"-\" ) {\n        val -= this.evalExpressionPart( p );\n      }\n      else if( p.op == \"*\" ) {\n        val *= this.evalExpressionPart( p );\n      }\n      else if( p.op == \"/\" ) {\n        if( this.evalExpressionPart( p ) == 0) {\n          throw \"@division by zero\";\n        }\n        val /= this.evalExpressionPart( p );\n      }\n      else if( p.op == \";\" ) {\n        val += (\"\" + this.evalExpressionPart( p ));\n      }\n      else if( p.op == \"OR\"  ) {\n          val |= this.evalExpressionPart( p );\n      }\n      else if( p.op == \"AND\"  ) {\n          val &= this.evalExpressionPart( p );\n      }\n      else if( p.op == \"<\" ) {\n        if( val < (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \">\" ) {\n        if( val > (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \"=\" ) {\n        if( val == (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \"<>\" ) {\n        if( val != (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \"<=\" ) {\n        if( val <= (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n      else if( p.op == \">=\" ) {\n        if( val >= (this.evalExpressionPart( p ) ) ) {\n          val = -1;\n        } else {\n          val = 0;\n        }\n      }\n\n      else {\n        throw \"@syntax@unknown operator '\"+p.op+\"'\";\n      }\n    }\n\n    if( expr.negate ) {\n      return -val;\n    }\n    if( expr.binaryNegate ) {\n      if( val == 0 ) {\n        return -1;\n      }\n      return 0;\n    }\n    return val;\n  }\n\n  exitInputState() {\n    var c = this.output;\n    var p = this.program;\n\n    this.inputFlag = false;\n\n\n    var l = this.program[ this.runPointer ];\n    var cmds = l[1];\n    //console.log(cmds);\n\n\n    if( this.runPointer > -1 ) {\n\n        var l=this.program[this.runPointer];\n        //console.log( l[0] + \"after input >>(\" + this.runPointer + \":\"  + this.runPointer2 +\")\");\n    }\n\n    this.runPointer2++;\n\n    if( this.runPointer > -1 ) {\n\n        var l=this.program[this.runPointer];\n        //console.log( l[0] + \"after input >>>(\" + this.runPointer + \":\"  + this.runPointer2 +\")\");\n    }\n\n    if( this.runPointer2 >=  cmds.length ) {\n\n\n      this.runPointer2 = 0;\n      this.runPointer++;\n\n      if( this.runPointer > -1 ) {\n\n          var l=this.program[this.runPointer];\n          //console.log( l[0] + \"after input >>>>(\" + this.runPointer + \":\"  + this.runPointer2 +\")\");\n      }\n\n      this.sys.blinkMode( false  );\n\n      if( this.runPointer >=  p.length ) {\n\n        if( this.runPointer > -1 ) {\n\n            var l=this.program[this.runPointer];\n            //console.log( l[0] + \"after input >>>>>(\" + this.runPointer + \":\"  + this.runPointer2 +\")\");\n        }\n\n        this.runFlag = false;\n\n        this.HandleStopped();\n        c.clearCursor();\n        this.printLine(\"\");\n        this.printLine(\"ready.\");\n\n      }\n\n    }\n\n\n  }\n\n  breakCycle() {\n    this.breakCycleFlag = true;\n  }\n\n  cycle() {\n\n    /*return values*/\n    var END_W_ERROR = 0;\n    var TERMINATE_PROGRAM = -1;\n    var LINE_FINISHED = 10;\n    var MIDLINE_INTERUPT = 20;\n    var TERMINATE_W_JUMP = 30;\n    var PAUSE_F_INPUT = 40;\n\n    var c = this.output;\n\n    var cmdCount = this.cmdCountPerCycle;\n\n\n\n    try {\n\n      if( this.bitmap.isActive() ) {\n        this.bitmap.triggerFlush();\n      }\n\n      if( !this.runFlag ||\n            this.inputFlag ||\n            this.listFlag\n             ) {\n\n        if( this.listFlag ) {\n           var countdown = this.listSpeed;\n           while( this.listPointer < this.list.length && countdown-- > 0 ) {\n               this.listCodeLine( this.list[ this.listPointer ] );\n               this.listPointer++;\n           }\n           if (  this.listPointer >= this.list.length ){\n             this.listStop();\n           }\n\n        }\n      }\n      else {\n\n        if(this.debugFlag) console.log(\"START CYCLE------------------------------\" );\n\n        if( this.waitForMessageFlag ) {\n            return;\n        }\n\n        var p = this.program;\n\n        while (true) {\n\n          if( this.breakCycleFlag ) {\n            this.breakCycleFlag = false;\n            break;\n          }\n          if(this.debugFlag) console.log(\"START CYCLE LOOP-------------\" );\n          var l = p[ this.runPointer ];\n          var bf = this.runPointer2;\n          if(this.debugFlag) console.log(\" this.runPointer = \" + this.runPointer, \" this.runPointer2 = \" + this.runPointer2 );\n          if(this.debugFlag) console.log(\" cmdCount = \" + cmdCount);\n          var rv = this.runCommands( l[1], cmdCount );\n          //console.log(\" rv = \", rv);\n          var af = rv[ 1 ];\n\n          if( rv[0] == MIDLINE_INTERUPT) {\n            this.runPointer2 = af;\n          }\n\n          var executedCount = rv[2];\n\n          if(this.debugFlag) console.log(\" bf = \" + bf, \" af = \" + af);\n          if(this.debugFlag) console.log(\" executedCount = \" + executedCount);\n          if(this.debugFlag) console.log(\" rv = \" + rv);\n\n          cmdCount = cmdCount - executedCount;\n\n          if( rv[0]<=0 ) {\n            if(this.debugFlag) console.log(\" PGM END!!!!\" );\n            this.runFlag = false;\n            var e = null;\n            if( rv.length >= 4 ) {\n              e = rv[3];\n            }\n            this.printLine(\"\");\n            this.printLine(\"ready.\");\n            this.HandleStopped();\n            if( rv[0] == END_W_ERROR ) {\n              console.log(\"ERROR: \", e, \" LINE \", this.retreiveRuntimeLine() );\n              console.log(\"PARAMETER DUMP:\", this.vars );\n              console.log(\"FUNCTION DUMP:\", this.functions );\n            }\n            if(this.debugFlag) console.log(\"CYCLE RETURN END\");\n            return;\n          }\n          else if( rv[0] == LINE_FINISHED ) {\n            this.runPointer ++;\n            this.runPointer2 = 0;\n            if(this.debugFlag) console.log(\" new this.runPointer = \" + this.runPointer, \" this.runPointer2 = \" + this.runPointer2 );\n\n            if( this.runPointer >=  p.length ) {\n              if(this.debugFlag) console.log( \"end program\");\n              this.runFlag = false;\n              this.HandleStopped();\n\n              this.printLine(\"ready.\");\n              break;\n            }\n          }\n          else if( rv[0] == TERMINATE_W_JUMP ) {\n\n            if(this.debugFlag) console.log(\" jump to new this.runPointer = \" + this.runPointer, \" this.runPointer2 = \" + this.runPointer2 );\n\n          }\n          else if( rv[0] == PAUSE_F_INPUT ) {\n\n            this.runPointer2 = af;\n            if(this.debugFlag) console.log(\"CYCLE PAUSE 4 INPUT\" + this.runPointer + \",\" + this.runPointer2);\n            break;\n\n          }\n\n          if( cmdCount<=0 ) {\n            if(this.debugFlag) console.log(\"Breaking cmdCount=\" + cmdCount)\n            break;\n          }\n\n        }\n\n        if(this.debugFlag) console.log(\" this.runPointer = \" + this.runPointer, \" this.runPointer2 = \" + this.runPointer2 );\n\n      }\n\n    }\n    catch (e) {\n      //c.clearCursor();\n\n      if( this.erh.isSerializedError( e ) ) {\n        var err = this.erh.fromSerializedError( e );\n        this.printError( err.clazz, undefined, undefined, err.detail );\n      }\n      else {\n        this.printError(\"unexpected\");\n      }\n\n      this.printLine(\"ready.\");\n      this.runFlag = false;\n\n      sys.log(\"ERROR: \", e, \" LINE \", this.retreiveRuntimeLine() );\n      sys.log(\"PARAMETER DUMP:\", this.vars );\n      sys.log(\"FUNCTION DUMP:\", this.functions );\n\n    }\n  }\n\n  doReturn() {\n\n    var oldPointers = this.gosubReturn.pop();\n    if( oldPointers === undefined ) {\n      throw \"@return without gosub\";\n    }\n\n    this.runPointer2 = oldPointers[ 1 ];\n    this.runPointer = oldPointers[ 0 ];\n\n    //this.goto( oldLine );\n  }\n\n  gosub( line, runPointer2 ) {\n\n    var pgm = this.program;\n    var len=this.program.length;\n    var retLine = null;\n    var retCmd = null;\n\n    this.runPointer2 = runPointer2;\n\n    if( ( this.runPointer2 + 1) < this.program[ this.runPointer ][1].length ) {\n      retCmd = this.runPointer2 + 1;\n      retLine = this.runPointer;\n    }\n    else {\n      if( (this.runPointer+1) < len ) {\n        retCmd=0;\n        retLine = this.runPointer+1 ;\n      }\n      else {\n        retCmd=9999;\n        retLine = this.runPointer;\n      }\n    }\n\n    this.gosubReturn.push( [ retLine, retCmd ] );\n    this.goto( line );\n  }\n\n  goto( line0 ) {\n\n    //console.log( \"goto line \" + line)\n    var pgm = this.program;\n    var len=this.program.length;\n    var found = false;\n    var line;\n\n    if( (typeof line0) == \"number\" ) {\n        line = line0;\n    }\n    else {\n        line = this.evalExpression( line0 );\n    }\n\n    for( var i=0; i<len; i++) {\n      var l = pgm[i];\n\n      if( l[0] == line ) {\n        this.runPointer = i;\n        this.runPointer2 = 0;\n        found = true;\n      }\n    }\n\n    if(!found ) {\n      throw \"@undef'd statement\";\n    }\n\n    if(!this.runFlag ) {\n      this.startAsGoto = true;\n      this.runPGM();\n    }\n  }\n\n  listStop() {\n    if( this.listFlag ) {\n      var c = this.output;\n      this.listFlag = false;\n      this.HandleStopped();\n      this.printLine( \"ready.\");\n    }\n  }\n\n\n  runStop() {\n    if( this.runFlag ) {\n      var c = this.output;\n      this.runFlag = false;\n      this.HandleStopped();\n\n      console.log( \"break in \" + this.program[ this.runPointer ][0] );\n      this.printLine( \"break in \" + this.program[ this.runPointer ][0]);\n      this.printLine( \"ready.\");\n    }\n  }\n\n  isRunning() {\n    return this.runFlag;\n  }\n\n  isListing() {\n    return this.listFlag;\n  }\n\n  isInput() {\n    return this.inputFlag;\n  }\n\n  readData() {\n\n    if( this.dataPointer >= this.data.length ) {\n      return undefined;\n    }\n\n    var result = this.data[ this.dataPointer ];\n    this.dataPointer++;\n\n    return result;\n  }\n\n\n  printChar( c  ) {\n    this.output.write( c );\n  }\n\n  listCodeLine( rawLine ) {\n\n    var inString = false;\n/*    for( var i=0; i<rawLine.length; i++ ) {\n\n      var c = rawLine.charAt(i);\n\n      this.printChar( c );\n\n      if( c == \"\\\"\" ) {\n        inString = !inString;\n      }\n    }*/\n    this.printLine( rawLine );\n\n  }\n\n  rebuildLineString( nr, raw,\n      removePadding,\n      renumbering,\n      addSmartPadding,\n      shortenKeywords)\n  {\n\n    var p = new Parser( this.commands, this.extendedcommands );\n    p.init();\n\n    var tokens = p.getTokens( raw, false, false );\n\n    if( ! ( renumbering === undefined )) {\n\n      var foundGoto = false;\n      for( i = 0; i<tokens.length; i++) {\n        if( tokens[i].type == \"name\" && (tokens[i].data == \"GOTO\" || tokens[i].data == \"GOSUB\") ) {\n          foundGoto = true;\n        } else {\n          if( i>1 ) {\n            if( tokens[i].type == \"num\" &&\n                tokens[i-1].type == \"pad\" &&\n                tokens[i-2].type == \"name\" && tokens[i-2].data == \"THEN\" ) {\n              foundGoto = true;\n            }\n            else if( tokens[i].type == \"num\" && tokens[i-1].type == \"name\" && tokens[i-1].data == \"THEN\" ) {\n              foundGoto = true;\n            }\n          }\n        }\n\n        if( tokens[i].type == \"num\" && foundGoto ) {\n          var newLine = renumbering[ \"old_\" + tokens[i].data ];\n          if( newLine == undefined ) { newLine = 99999;}\n          tokens[i].data =newLine;\n          foundGoto = false;\n        }\n      }\n    }\n    tokens[0].data = nr;\n    var newString;\n\n    newString = nr;\n    if( removePadding ) {\n      newString = nr + \" \" ;\n    }\n    for( var i = 1 ; i< tokens.length; i++) {\n      if( removePadding ) {\n         if( tokens[i].type == \"pad\" ) {\n           continue;\n         }\n       }\n\n       if( shortenKeywords ) {\n         if( tokens[i].type == \"name\" && tokens[i].data == \"PRINT\" ) {\n           tokens[i].data = \"?\";\n         }\n       }\n       else {\n         if( tokens[i].type == \"name\" && tokens[i].data == \"?\" ) {\n           tokens[i].data = \"PRINT\";\n         }\n      }\n\n      if( tokens[i].type == \"str\" ) {\n        newString += \"\\\"\" + tokens[i].data + \"\\\"\";\n      }\n      else if( tokens[i].type == \"name\" && addSmartPadding == true) {\n        newString += tokens[i].data + \" \";\n      }\n      else if( tokens[i].type == \"num\" && addSmartPadding == true) {\n        if( tokens[i].data.length == 1 ) {\n            newString += \" \" + tokens[i].data;\n        }\n        else {\n            newString += tokens[i].data;\n        }\n      }\n      else {\n        newString += tokens[i].data;\n      }\n\n    }\n\n    var rec = p.parseLine( newString );\n\n    return rec;\n  }\n\n  lineIsData( line ) {\n    console.log( line );\n    if( line[1].length == 1 ) {\n      if( ! ( line[1][0].controlKW === undefined) ) {\n        if( line[1][0].controlKW.toUpperCase() == \"DATA\" ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  lineIsRem( line ) {\n    console.log( line );\n    if( line[1].length == 1 ) {\n      if( ! ( line[1][0].controlKW === undefined) ) {\n        if( line[1][0].controlKW.toUpperCase() == \"REM\" ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  renumberProgram( start, gap ) {\n\n    var p = this.program;\n\n    var newLineNr = start;\n    var renumbering = {};\n    var lineNumbers = [];\n\n    var method = \"rem\";\n\n    if( method  == \"plain\" ) {\n      for( var i=0; i<p.length; i++) {\n          var line = p[ i ];\n\n          renumbering[\"old_\" + line[0]] = newLineNr;\n          lineNumbers.push( newLineNr );\n          newLineNr += gap;\n      }\n    }\n    else if( method  == \"data\" ) {\n      // non data\n      for( var i=0; i<p.length; i++) {\n          var line = p[ i ];\n          var data = this.lineIsData( line );\n\n          if( data ) {\n            continue;\n          }\n          else {\n            renumbering[\"old_\" + line[0]] = newLineNr;\n            lineNumbers.push( newLineNr );\n            newLineNr += gap;\n          }\n      }\n\n      //data\n      var kNumber = Math.ceil( newLineNr / 1000 );\n      var newLineNr2 = 1000 * ( kNumber  );\n      if( newLineNr2 - newLineNr  < 100 ) {\n        newLineNr2+=1000;\n      }\n      newLineNr = newLineNr2;\n\n      for( var i=0; i<p.length; i++) {\n          var line = p[ i ];\n          var data = this.lineIsData( line );\n\n          if( !data ) {\n            continue;\n          }\n          else {\n            renumbering[\"old_\" + line[0]] = newLineNr;\n            lineNumbers.push( newLineNr );\n            newLineNr += gap;\n          }\n      }\n\n    }\n    else if( method  == \"rem\" ) {\n      // non data\n      for( var i=0; i<p.length; i++) {\n          var line = p[ i ];\n          var rem = this.lineIsRem( line );\n\n          if( rem ) {\n            var kNumber = Math.ceil( newLineNr / 1000 );\n            var newLineNr2 = 1000 * ( kNumber  );\n            if( newLineNr2 - newLineNr  < 100 ) {\n              newLineNr2+=1000;\n            }\n            newLineNr = newLineNr2;\n          }\n          renumbering[\"old_\" + line[0]] = newLineNr;\n          lineNumbers.push( newLineNr );\n          newLineNr += gap;\n\n      }\n\n    }\n\n    //newLineNr = start;\n    for( var i=0; i<p.length; i++) {\n        newLineNr = lineNumbers[ i ]\n        var line = p[ i ];\n        var lRec = this.rebuildLineString( newLineNr, line[2], true, renumbering, true );\n\n        line[0] = newLineNr;\n        line[1] = lRec.commands;\n        line[2] = lRec.raw.trim();\n\n        //newLineNr += gap;\n    }\n  }\n\n  PETSCIIreplace( keywordCompress ) {\n    var p = this.program;\n\n    for( var i=0; i<p.length; i++) {\n        var line = p[ i ];\n\n        var lRec = this.rebuildNoPETSCIILineString( line[2] );\n\n        line[1] = lRec.commands;\n        line[2] = lRec.raw;\n\n    }\n  }\n\n  compressProgram( keywordCompress ) {\n    var p = this.program;\n\n    for( var i=0; i<p.length; i++) {\n        var line = p[ i ];\n\n       var lRec = this.rebuildLineString( line[0], line[2], true, undefined, false, keywordCompress );\n\n        line[1] = lRec.commands;\n        line[2] = lRec.raw;\n\n    }\n  }\n\n  normalizeProgram() {\n    var p = this.program;\n\n    for( var i=0; i<p.length; i++) {\n        var line = p[ i ];\n\n        var lRec = this.rebuildLineString( line[0], line[2], true, undefined, true );\n\n        line[1] = lRec.commands;\n        line[2] = lRec.raw;\n\n    }\n  }\n\n  clrPGM() {\n    this.vars = [];\n    this.functions = [];\n    this.restoreDataPtr();\n  }\n\n  restoreDataPtr() {\n    this.dataPointer = 0;\n  }\n\n  runPGM() {\n\n    this.executeLineFlag = false;\n\n\n    if( this.startAsGoto ) {\n        this.startAsGoto = false;\n\n        var bak1 = this.runPointer;\n        var bak2 = this.runPointer2;\n\n\n        this.runPGM();\n\n        this.runPointer = bak1;\n        this.runPointer2 = bak2;\n\n\n        return;\n    }\n\n    this.input.setInterActive( false);\n\n    var c = this.output;\n    var p = this.program;\n    this.data = [];\n    this.dataPointer = 0;\n    this.gosubReturn = [];\n    this.vars = [];\n    this.functions = [];\n\n    for( var i=0; i<p.length; i++) {\n\n        var line = p[ i ];\n        var commands = line[1];\n\n        for( var j=0; j<commands.length; j++) {\n\n          var command = commands[j];\n\n          if( command.type  == \"control\" && command.controlKW == \"data\") {\n            for( var k=0; k<command.params.length; k++) {\n              this.data.push( command.params[k] );\n            }\n          }\n        }\n    }\n\n    if( this.debugFlag ) {\n      console.log(\"data dump:\",this.data);\n    }\n\n\n    if( this.program.length > 0) {\n      this.runFlag = true;\n      this.inputFlag = false;\n      //c.clearCursor();\n      this.runPointer = 0;\n      this.runPointer2 = 0;\n    }\n    else {\n      this.runFlag = false;\n      this.inputFlag = false;\n      this.runPointer = 0;\n      this.runPointer2 = 0;\n      this.input.setInterActive( true);\n      this.printReady();\n    }\n  }\n\n\n  doForInit( from, to, step, varName, cmdPointer, cmdArrayLen, linePointersLen ) {\n\n    var ctx = this.forContext;\n\n    if( this.vars[ varName ] === undefined ) {\n      this.vars[ varName ] = 0;\n    }\n    this.vars[ varName ] = this.evalExpression( from );\n\n    ctx.default.push( varName );\n    ctx[varName] = {};\n\n    var ctxv = ctx[varName];\n    ctxv.to = this.evalExpression( to );\n\n    if( step == null ) {\n        ctxv.step = 1;\n    }\n    else {\n      ctxv.step = this.evalExpression( step );\n    }\n\n    ctxv.jumpTo =\n      { line: this.runPointer,\n        cmdPointer: cmdPointer+1 }\n    if( ctxv.jumpTo.cmdPointer >= cmdArrayLen )  {\n\n      if( this.runPointer == -1) {\n        throw \"@syntax@Can't find command after 'FOR'\";\n      }\n      else {\n        if( ( this.runPointer + 1) >= linePointersLen ) {\n          throw \"@syntax@Can't find command after 'FOR', on next line\";\n        }\n        ctxv.jumpTo.line++;\n        ctxv.jumpTo.cmdPointer = 0;\n      }\n    }\n\n  }\n\n  doForNext( nextVarName ) {\n    var ctx = this.forContext;\n    if( ctx.default.length == 0 ) {\n      throw \"@syntax@Next without for\";\n    }\n    var varName = ctx.default[ctx.default.length-1];\n    if( nextVarName  != null ) {\n      varName = nextVarName;\n    }\n\n    var ctxv = ctx[varName];\n\n    this.vars[ varName ] += ctxv.step;\n    if( ctxv.step > 0) {\n      if(this.vars[ varName ]<=ctxv.to) {\n\n        return ctxv.jumpTo;\n      }\n    }\n    else if( ctxv.step == 0) {\n      return ctxv.jumpTo;\n    }\n    else {\n      if(this.vars[ varName ]>=ctxv.to) {\n        return ctxv.jumpTo;\n      }\n    }\n\n    ctx.default.pop();\n    return -1;\n  }\n\n  onLineStr() {\n\n    var line = this.retreiveLine();\n    if( line == -1 || line == \"\") { return \"\"; }\n\n    return \" in \" + line;\n\n  }\n\n  retreiveRuntimeLine() {\n    if( this.runPointer > -1 ) {\n      var line = this.program[this.runPointer];\n      return line[0];\n    }\n    return -1;\n  }\n\n\n  retreiveLine() {\n    if( this.runFlag ) {\n      return this.retreiveRuntimeLine();\n    }\n    else {\n      if( this[\"parseLineNumber\"] === undefined ) {\n        return -1;\n      }\n      if( this.parseLineNumber == -1) { return \"\"; }\n      return this.parseLineNumber;\n    }\n    return -1;\n  }\n\n\n  commandToString( cmd ) {\n    if( cmd.type == \"control\" )  {\n      return cmd.controlKW.toUpperCase();\n    }\n    else if( cmd.type == \"call\" ) {\n      return cmd.statementName;\n    }\n    else if( cmd.type == \"assignment\" )  {\n      return \"assign ->\" + cmd.var;\n    }\n    return \"????\";\n  }\n\n  runCommands( cmds, limit ) {\n    /* return values\n      false -> error or end program\n      true  -> executed ok\n\n      should return\n      end_w_error\n      terminate_program\n      line_finished\n      goto_gosub\n    */\n\n    var commands = this.commands;\n    var ecommands = this.extendedcommands;\n    var EXPR = 0, PAR = 1;\n\n    /*return values*/\n    var END_W_ERROR = 0;\n    var TERMINATE_PROGRAM = -1;\n    var LINE_FINISHED = 10;\n    var MIDLINE_INTERUPT = 20;\n    var TERMINATE_W_JUMP = 30;\n    var PAUSE_F_INPUT = 40;\n\n    var end = cmds.length;\n    var i=this.runPointer2;\n    var cnt=0;\n\n    if(!(limit == undefined )) {\n      //nothing\n    }\n    else {\n      limit = 9999; //reaching to infinite (max on line maybe  40)\n    }\n\n\n\n    while( i<end && cnt<limit ) {\n\n\n      if( this.breakCycleFlag ) {\n        if(!(limit == undefined )) {\n          this.breakCycleFlag = false;\n          break;\n        }\n      }\n\n      var cmd=cmds[i];\n\n      var l=this.program[this.runPointer];\n\n      //if( this.runPointer > -1 ) {\n      //  console.log( l[0] + \"(\" + this.runPointer + \":\" + i +\")\" + this.commandToString( cmd ) );\n      //}\n      //console.log( cmd.lineNumber + \":\" + cmd.type + \":\" + (cmd.controlKW ? cmd.controlKW : cmd.statementName ));\n\n      if( cmd.type == \"control\" )  {\n        var cn = cmd.controlKW;\n        if( cn == \"goto\" ) {\n          this.goto( cmd.params[0] );\n          return [TERMINATE_W_JUMP,i+1,cnt+1];\n        }\n        else if( cn == \"end\" ) {\n          return [TERMINATE_PROGRAM,i+1,cnt+1];\n        }\n        else if( cn == \"stop\" ) {\n          this.printInfo(\"break\");\n          return [TERMINATE_PROGRAM,i+1,cnt+1];\n        }\n        else if( cn == \"gosub\" ) {\n          this.gosub( cmd.params[0], i );\n          return [TERMINATE_W_JUMP,i+1,cnt+1];\n        }\n        else if( cn == \"on\" ) {\n          var onCommand = cmd.params[ 0 ];\n          var onExpr = cmd.params[ 1 ];\n          var onLineNrs = cmd.params[ 2 ];\n\n          var value = this.evalExpression( onExpr );\n          if( (value-1)>=0 && (value-1)<onLineNrs.length ) {\n            if( onCommand == \"goto\" ) {\n              this.goto( onLineNrs[ (value-1) ] );\n              return [TERMINATE_W_JUMP,i+1,cnt+1];\n            }\n            else if( onCommand == \"gosub\" ) {\n              this.gosub( onLineNrs[ (value-1) ], i );\n              return [TERMINATE_W_JUMP,i+1,cnt+1];\n            }\n          }\n\n          //if not jumping, do nothing\n        }\n        else if( cn == \"return\" ) {\n          this.doReturn();\n          return [TERMINATE_W_JUMP,i+1,cnt+1];\n        }\n        else if( cn == \"if\" ) {\n          var IF_ERROR = -1;\n          var IF_TRUE = 1;\n          var IF_FALSE = 0;\n\n          var ifresult = this.evalExpression( cmd.params[0] );\n          if( ifresult != IF_FALSE ) {\n             //return [MIDLINE_INTERUPT,i+1];\n          }\n          else  {\n             return [LINE_FINISHED,i+1,cnt+1];\n          }\n        }\n        else if( cn == \"data\" ) {\n          //Nothing\n        }\n        else if( cn == \"rem\" ) {\n          return [LINE_FINISHED,i+1,cnt+1];\n        }\n        else if( cn == \"for:init\" ) {\n          this.doForInit( cmd.params[0], cmd.params[1], cmd.params[2], cmd.variable, i, cmds.length );\n        }\n        else if( cn == \"for:next\" ) {\n\n          var jump = this.doForNext( cmd.nextVar );\n\n          if( !(jump === -1 ) ) {\n\n            if( jump.line != -1 ) {\n                if( this.runPointer == jump.line ) {\n                  i = jump.cmdPointer;\n                  cnt++;\n                  continue;\n                }\n                else {\n                  this.runPointer = jump.line;\n                  this.runPointer2 = jump.cmdPointer;\n                }\n                return [TERMINATE_W_JUMP,i+1,cnt+1];\n            }\n            else {\n              i = jump.cmdPointer;\n              cnt++;\n              continue;\n            }\n          }\n        }\n        else if( cn == \"dim\" ) {\n          var vars = this.vars;\n\n          for( var ix=0; ix<cmd.params.length; ix++) {\n\n            var indices = [];\n            for( var ai=0;ai<cmd.params[ix].length;ai++){\n              indices[ai] = this.evalExpression( cmd.params[ix][ai] );\n            }\n\n            var arrRec = new BasicArray( cmd.arrayNames[ix], indices, 0 );\n\n            var varIntName = \"@array_\" + cmd.arrayNames[ix];\n\n            if( ! ( this.vars[ varIntName ] === undefined )) {\n              this.printError( \"redim'd array\" );\n              return [END_W_ERROR,i+1,cnt+1];\n            }\n            this.vars[ varIntName ] = arrRec;\n          }\n\n        }\n        else if( cn == \"def\" ) {\n          this.functions[ cmd.params[0] ] = {\n            par: cmd.params[1],\n            expr: cmd.params[2]\n          };\n        }\n        else {\n          this.printError( \"illegal ctrl token '\" + cn  +\"'\");\n          return [END_W_ERROR,i+1,cnt+1];\n        }\n      }\n      else if( cmd.type == \"call\" )  {\n        var values = [];\n        var pardefs = [];\n        var mycommands = commands;\n\n        var stc = mycommands[ \"_stat_\" + cmd.statementName.toLowerCase()];\n\n        if( stc === undefined ) {\n          //cmd.statementName.toLowerCase().startsWith(\"x\") )\n          mycommands = ecommands;\n\n          stc = mycommands[ \"_stat_\" + cmd.statementName.toLowerCase()];\n\n          if( stc === undefined ) { }\n          else {\n            if( mycommands.enabled == false &&\n              cmd.statementName.toLowerCase() != \"xon\") {\n                  this.printError( \"extended not enabled\" );\n                  return [END_W_ERROR,i+1,cnt+1];\n            }\n          }\n        }\n\n        var intf = mycommands[ \"_if_\" + cmd.statementName.toLowerCase()];\n        if( !( intf === undefined ) ) {\n            pardefs = mycommands[ \"_if_\" + cmd.statementName.toLowerCase()]();\n        }\n        else {\n          for( var j=0; j<cmd.params.length; j++) {\n            pardefs[j] = EXPR;\n          }\n        }\n\n        for( var j=0; j<cmd.params.length; j++) {\n          if( pardefs[j] == EXPR ) {\n\n            var p = this.evalExpression( cmd.params[j] );  //NOTE this one gets the trailing ;, from a \"PRINT ;\" command\n\n            if( p != null ) {\n              values.push( { type: \"value\", value: p } );\n            }\n          }\n          else if( pardefs[j] == PAR ) {\n            var varName = cmd.params[j].parts[0].data;\n            var varType = \"num\";\n            if( varName.indexOf(\"$\") > -1) {\n              varType = \"str\";\n            }\n\n            values.push( { type: \"var\", value: varName, varType: varType } );\n          }\n          else { /*RAW*/\n            //values.push( cmd.params[j].parts );\n            values.push( cmd.params[j] );\n\n          }\n        }\n        try {\n          //var stc = ;\n          if( stc === undefined ) {\n            this.printError(\"syntax\");\n            return [END_W_ERROR,i+1,cnt+1];\n          }\n          else {\n              mycommands[ \"_stat_\" + cmd.statementName.toLowerCase()]( values );\n              if( this.inputFlag ) {\n                return [PAUSE_F_INPUT,i+1,cnt+1];\n              }\n          }\n\n        }\n        catch ( e ) {\n          console.log(e);\n\n          if( this.erh.isSerializedError( e ) ) {\n            var err = this.erh.fromSerializedError( e );\n            this.printError( err.clazz );\n          }\n          else if( this.erh.isError( e ) ) {\n            var err = e;\n            this.printError( err.clazz );\n          }\n          else {\n            this.printError(\"unexpected \" + e );\n          }\n\n          return [END_W_ERROR,i+1,cnt];\n        }\n      }\n      else if( cmd.type == \"assignment\" )  {\n        if( cmd.arrayAssignment ) {\n          var varIntName = \"@array_\" + cmd.var;\n          if( this.vars[ varIntName ] === undefined ) {\n            this.printError(\"bad subscript\");\n            return [END_W_ERROR,i+1,cnt];\n          }\n\n          var arr = this.vars[ varIntName ];\n          if( cmd.indices.length != arr.getIndexCount() ) {\n            this.printError(\"bad subscript\");\n            return [END_W_ERROR,i+1,cnt];\n          }\n\n          var indices = [];\n          for( var ai=0;ai<cmd.indices.length;ai++){\n            indices[ai] = this.evalExpression( cmd.indices[ai] );\n          }\n\n          if( cmd.var.endsWith(\"%\") ) {\n              arr.set( indices, Math.floor( this.evalExpression( cmd.expression ) ) );\n          }\n          else if( ! cmd.var.endsWith(\"$\") ) {\n              var v = this.evalExpression( cmd.expression );\n              if( ! (typeof v == \"number\") ) {\n                this.printError(\"type mismatch\", undefined, undefined, \"value not a number\");\n                return [END_W_ERROR,i+1,cnt];\n              }\n              arr.set( indices, this.evalExpression( cmd.expression ) );\n          }\n          else {\n              arr.set( indices, this.evalExpression( cmd.expression ) );\n          }\n\n        }\n        else { //single var (not an array)\n          if( this.vars[ cmd.var ] === undefined ) {\n            if(cmd.var.startsWith(\"TI\")) {\n              this.printError(\"syntax\");\n              return [END_W_ERROR,i+1,cnt+1];\n            }\n            this.vars[ cmd.var ] = 0;\n          }\n          if(cmd.var.endsWith(\"%\")) {\n            this.vars[ cmd.var ] = Math.floor( this.evalExpression( cmd.expression ) );\n          }\n          else if( ! cmd.var.endsWith(\"$\") ) {\n              var v = this.evalExpression( cmd.expression );\n              if( ! (typeof v == \"number\") ) {\n                this.printError(\"type mismatch\", undefined, undefined, \"value not a number\");\n                return [END_W_ERROR,i+1,cnt];\n              }\n              this.vars[ cmd.var ] = this.evalExpression( cmd.expression );\n          }\n          else {\n            this.vars[ cmd.var ] = this.evalExpression( cmd.expression );\n          }\n        }\n      }\n      //cnt++;\n      i++;\n      cnt++;\n    }\n\n    if( i== cmds.length ) {\n      return [LINE_FINISHED,i,cnt];\n    }\n\n    return [MIDLINE_INTERUPT,i,cnt];\n\n  }\n\n  setVar( a, b ) {\n    this.vars[ a ] = b;\n  }\n\n  old( linenr ) {\n    this.program = this.oldProgram;\n  }\n\n  new( linenr ) {\n    this.oldProgram = this.program ;\n    this.program = [];\n  }\n\n  removePgmLine( linenr ) {\n\n    var pgm2 = [];\n\n    for( var i=0; i<this.program.length; i++) {\n      var pl=this.program[i];\n      if( pl[0] != linenr ) {\n        pgm2.push(pl);\n      }\n    }\n    this.program = pgm2;\n\n  }\n\n\n  padSpaces6( no ) {\n    var s = no + \"\";\n    for(var i=s.length; i<6; i++) {\n      s+=\" \";\n    }\n    return s;\n  }\n\n  padSpaces8( no ) {\n    var s = no + \"\";\n    for(var i=s.length; i<8; i++) {\n      s+=\" \";\n    }\n    return s;\n  }\n\n\n  insertPgmLine( linenr, commands, raw ) {\n\n    this.insertPgmLineLocal( linenr, commands, raw, this.program );\n  }\n\n  insertPgmLineLocal( linenr, commands, raw, myProgram ) {\n\n    for( var i=0; i<myProgram.length; i++) {\n      var pl=myProgram[i];\n      if( pl[0] == linenr ) {\n        myProgram[i] = [linenr, commands, raw.trim() ];\n        return;\n      }\n    }\n\n    myProgram.push( [linenr, commands, raw.trim() ]);\n\n    var sortF = function compare( a, b ) {\n      return a[0] - b[0];\n    }\n\n    myProgram.sort( sortF );\n\n  }\n\n  textLinesToBas( lines ) {\n\n    var myProgram = [];\n\n    if( this.debugFlag ) {\n      console.log( \"textLinesToBas\" );\n    }\n    for( var i = 0; i<lines.length; i++ ) {\n\n      var line = this.prepareLineForImport( lines[ i ] );\n      var p = new Parser( this.commands, this.extendedcommands );\n      p.init();\n      //if( line.length > 80 ) {  TODO move this check into the parser\n      //  throw \"Line to long \" + line;\n      //}\n      var l = p.parseLine( line );\n      if( l == null ) {\n        continue;\n      }\n      if( l.lineNumber != -1 ) {\n        if( l.commands.length > 0) {\n          this.insertPgmLineLocal( l.lineNumber, l.commands, l.raw, myProgram);\n          //this.program[ l.lineNumber ] = [l.commands,l.raw];\n        }\n        else {\n          throw \"Error, no commands on line \" + l.lineNumber;\n        }\n      }\n      else {\n        throw \"Error, command must start with number to be part of program\";\n      }\n\n      if( this.debugFlag ) {\n        console.log(\"program:\",myProgram);\n        console.log(\"Line: \", l );\n      }\n    }\n    return myProgram;\n  }\n\n  printReady() {\n    this.printLine(\"ready.\");\n  }\n\n\n  startConsoleDataInput( vars ) {\n\n    if( this.debugFlag ) {\n      console.log(\"inputvars=\",vars);\n    }\n    this.inputFlag = true;\n    this.inputVars = vars;\n    this.input.setInterActive( true);\n    this.inputVarsPointer = 0;\n    this.output.write( \"? \");\n    this.lineInput = \"\";\n    this.sys.blinkMode( true );\n\n  }\n\n  executeInteractiveLine( str ) {\n    this.handleLineInput( str, false );\n  }\n\n  handleLineInput( str, isInputCommand ) {\n\n    if( this.debugFlag ) {\n      console.log(\"handleLineInput: start debug / isInputCommand=\" + isInputCommand + \" -------------\");\n    }\n\n    if( isInputCommand ) {\n\n        var input=str;\n        var qMark = input.indexOf(\"?\");\n        while( qMark > -1 ) {\n          input = input.substr(qMark+2);\n          qMark = input.indexOf(\"?\");\n        }\n\n        if( this.debugFlag ) {\n          console.log(\"handleLineInput: start debug / input, name -------------\");\n          console.log( \"InputVarsPointer:\" , this.inputVarsPointer );\n          console.log( \"InputVars:\" , this.inputVars );\n\n          console.log( \"Input String:\" ,input );\n          console.log( \"Input Vars[current]:\" ,this.inputVars[ this.inputVarsPointer ] );\n        }\n\n\n        var vName = this.inputVars[ this.inputVarsPointer ];\n        if( vName.indexOf(\"$\") >-1 ) {\n            this.setVar( this.inputVars[ this.inputVarsPointer ], input.trim() );\n        }\n        else {\n          var num = parseFloat( input.trim() );\n\n          if( isNaN( num ) ) {\n            this.printLine(\"?redo from start\");\n            this.printChar( \"? \");\n            return;\n          }\n          this.setVar( this.inputVars[ this.inputVarsPointer ], num );\n        }\n\n        this.inputVarsPointer++;\n        if( this.inputVarsPointer >= this.inputVars.length ) {\n\n          this.exitInputState();\n        }\n        else {\n          this.printChar( \"?? \");\n        }\n\n        if( this.debugFlag ) {\n          console.log(\"handleLineInput: end debug -------------\");\n        }\n        return;\n    }\n\n    this.executeLineFlag = true;\n\n    if( this.debugFlag ) {\n      console.log( str );\n    }\n    var p = new Parser( this.commands, this.extendedcommands );\n    p.init();\n    try {\n      var l = p.parseLine( str );\n    }\n    catch( e ) {\n\n      this.parseLineNumber = -1;\n      if( this.erh.isError( e ) ) {\n        this.parseLineNumber = e.lineNr;\n        this.printError( e.clazz, true, undefined, e.detail );\n      }\n      else {\n        this.printError( \"syntax\", true );\n      }\n      this.printLine(\"ready.\");\n    }\n    if( l == null ) {\n      if( this.debugFlag ) {\n        console.log(\"handleLineInput: end debug -------------\");\n      }\n\n      this.executeLineFlag = false;\n      return;\n    }\n\n    if( l.lineNumber != -1 ) {\n      if( l.commands.length > 0) {\n        this.insertPgmLine( l.lineNumber, l.commands, l.raw);\n      }\n      else {\n        this.removePgmLine( l.lineNumber  );\n      }\n    }\n    else {\n      this.runPointer = -1;\n      this.runPointer2 = 0;\n\n      try {\n        this.runCommands( l.commands );\n      }\n      catch( e ) {\n\n        this.parseLineNumber = -1;\n\n        if( this.erh.isSerializedError( e ) ) {\n          var err = this.erh.fromSerializedError( e );\n          this.parseLineNumber = err.lineNr;\n          this.printError( err.clazz, undefined, undefined, err.detail );\n        }\n        else if( this.erh.isError( e ) ) {\n          var err = e;\n          this.printError( err.clazz );\n          this.parseLineNumber = err.lineNr;\n        }\n        else {\n          this.printError(\"unexpected \" + e );\n        }\n\n        this.runFlag = false;\n      }\n\n      if( ! this.runFlag && ! this.listFlag) {\n        this.printLine(\"ready.\");\n      }\n\n    }\n\n    this.executeLineFlag = false;\n\n    if( this.debugFlag ) {\n      console.log(\"program:\",this.program);\n      console.log(\"Line: \", l );\n\n      console.log(\"handleLineInput: end debug -------------\");\n    }\n  }\n\n}\n\n//--EOC \n\n// ## extendedcommands.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/extendedcommands.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/extendedcommands.js\n\nclass ExtendedCommands {\n\n  constructor( runtime ) {\n    this.output = runtime.output;\n    this.bitmap = runtime.bitmap;\n    this.html = runtime.html;\n    this.input = runtime.input;\n    this.runtime = runtime;\n    this.sys = runtime.sys;\n    this.cmds = {};\n    this.func = {};\n    this.statementList = null;\n    this.erh = new ErrorHandler();\n\n  }\n\n  getStatements() {\n\n    //TODO, why is it called so often?\n    var stats = Object.getOwnPropertyNames( ExtendedCommands.prototype );\n\n    var stats2 = [];\n\n    for( var i=0;i<stats.length;i++) {\n      if( stats[i].startsWith(\"_stat_\")) {\n        stats2.push( stats[i].substr(6 ).toUpperCase() );\n      }\n    }\n\n    return stats2;\n  }\n\n  getFunctions() {\n    var stats = Object.getOwnPropertyNames( ExtendedCommands.prototype );\n\n    var stats2 = [];\n\n    for( var i=0;i<stats.length;i++) {\n      if( stats[i].startsWith(\"_fun_\")) {\n        var name = stats[i].substr(5 ).toUpperCase().replace(\"_DLR_\",\"$\");\n\n        stats2.push( name );\n      }\n    }\n\n    return stats2;\n  }\n\n  /************************ commands ************************/\n  _stat_cls( pars ) {\n    this.output.control( 24 );\n  }\n\n  _stat_reverse( pars ) {\n\n    if( pars.length == 0 ) {\n      this.output.control( 65 );\n      return;\n    }\n\n    var reverse = pars[0].value;\n    if( reverse <0 || reverse >1 ) {\n      return;\n    }\n\n    this.output.control( 64 + reverse );\n  }\n\n\n  _stat_gcolor( pars ) {\n\n    var result;\n\n    if( pars.length != 1) {\n      this.erh.throwError( \"parameter count\", \"expected color\" );\n      return\n    }\n\n    if( pars.length == 1) {\n        var col = pars[0].value;\n        this.bitmap.setLineColor( col );\n        return\n    }\n\n  }\n\n\n  _stat_line( pars ) {\n    if( pars.length != 4 ) {\n      this.erh.throwError( \"parameter count\", \"expected 2 (x0,y0,y1,y1), not \" + pars.length );\n      return;\n    }\n\n    if( !this.bitmap.isActive() ) {\n      this.erh.throwError( \"invalid display mode\", \"current mode cannot show graphics\" );\n      return;\n    }\n\n    this.bitmap.line(\n      pars[0].value,\n      pars[1].value,\n      pars[2].value,\n      pars[3].value\n\n    );\n  }\n\n  _stat_plot( pars ) {\n    if( pars.length != 2 ) {\n      this.erh.throwError( \"parameter count\", \"expected 2 (x,y), not \" + pars.length );\n      return;\n    }\n\n    if( !this.bitmap.isActive() ) {\n      this.erh.throwError( \"invalid display mode\", \"current mode cannot show graphics\" );\n      return;\n    }\n\n    this.bitmap.plot( pars[0].value, pars[1].value );\n  }\n\n  _stat_center( pars ) {\n\n    var string;\n\n    if( pars.length > 1 ) {\n      this.erh.throwError( \"too many parameters\", \"expected max 2, not \" + pars.length );\n      return;\n    }\n\n    if( pars.length == 0 ) {\n      return;\n    }\n\n    string = pars[0].value;\n\n    this.output.center( string );\n  }\n\n\n  _stat_locate( pars ) {\n\n    var row = -1, col = -1;\n\n    if( pars.length > 2 ) {\n      this.erh.throwError( \"too many parameters\", \"expected max 2, not \" + pars.length );\n      return;\n    }\n\n    if( pars.length == 0 ) {\n      return;\n    }\n\n    if( pars.length >= 1 ) {\n      row = pars[0].value;\n    }\n\n    if( pars.length >= 2 ) {\n      col = pars[1].value;\n    }\n\n    this.output.setCursorPos( col, row );\n  }\n\n  _stat_hide( pars ) {\n    this.output.control( 25 );\n  }\n\n  _if_html() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW];\n  }\n\n  _stat_html( pars ) {\n    var html = this.html;\n\n    if( pars.length == 0 ) {\n      return;\n    }\n\n    var newLine = true;\n    var value;\n    var contentIx = 0;\n    var handleIx = -1;\n    var htmlHandle = null;\n    var htmlValue = \"\";\n    var htmlAppend = false;\n\n    if( pars.length == 2) {\n      contentIx = 1;\n      handleIx = 0;\n    }\n\n    for( var i=0; i<pars.length && i<2; i++) {\n\n      var exparts = pars[i];\n      var exparts2=\n        { parts: [],\n          binaryNegate: exparts.binaryNegate,\n          negate: exparts.negate  };\n\n      for( var j=0; j<exparts.parts.length; j++) {\n        if( exparts.parts[j].type == \"uniop\" &&\n            exparts.parts[j].op == \"+\" && j==(exparts.parts.length-1)\n            && (i == pars.length-1)) {\n              htmlAppend = true;\n        }\n        else {\n          exparts2.parts.push( exparts.parts[j] );\n        }\n      }\n      value = this.runtime.evalExpression( exparts2 );\n\n      if( i == handleIx ) {\n        htmlHandle =  value;\n      }\n      else {\n        htmlValue = value;\n      }\n    }\n\n    this.html.html(\n        {\n          htmlHandle: htmlHandle,\n          htmlValue: htmlValue,\n          htmlAppend: htmlAppend\n        }\n      );\n  }\n\n  _stat_htmlnode( pars ) {\n\n    var result;\n\n    if( pars.length == 0) {\n        return\n    }\n\n    var node = pars[0];\n\n    this.html.htmlnode( node );\n\n  }\n\n  _stat_color( pars ) {\n\n    var result;\n\n    if( pars.length == 0) {\n        return\n    }\n\n    if( pars.length == 1) {\n        var col = pars[0].value;\n        this.output.control( 16, col );\n        return\n    }\n\n    var bgcol = pars[1].value;\n    var col = pars[0].value;\n    this.output.control( 16, col   );\n    this.output.control( 17, bgcol );\n\n    if( pars.length == 3) {\n        var border = pars[2].value;\n        this.output.control( 18, border );\n        return\n    }\n\n  }\n\n  _stat_display( pars ) {\n\n    var result;\n\n    if( pars.length == 0) {\n        return\n    }\n\n    if( pars.length > 1) {\n        this.erh.throwError( \"too many variables\", \"expected one parameter only\" );\n    }\n\n    var mode = pars[0].value;\n    this.sys.setDisplayMode( this.runtime, mode   );\n    this.runtime.startWaitForMessage( \"displaysize\" )\n\n\n  }\n\n\n  _stat_border( pars ) {\n\n    var result;\n\n    if( pars.length == 0) {\n        return\n    }\n\n    if( pars.length > 1) {\n        this.erh.throwError( \"too many parameters\", \"expected one parameter only\" );\n    }\n\n    var bcol = pars[0].value;\n    this.output.control( 18, bcol );\n\n  }\n\n  _stat_export( pars ) {\n    if( pars.length > 0) {\n        this.erh.throwError( \"too many parameters\", \"export needs no parameters\" );\n    }\n\n    var code = this.runtime.getProgramAsText();\n    this.sys.export( code );\n  }\n\n  _fun_uc_DLR_( pars ) {\n\n\n    if( pars[0].value ) {\n      if( typeof pars[0].value == \"string\" ) {\n          return String.fromCodePoint( parseInt( pars[0].value, 16 ) );\n      }\n      return String.fromCodePoint( pars[0].value);\n    }\n    return \"?\";\n  }\n\n  _fun_dc_DLR_( pars ) {\n\n    var val = \"\";\n\n    val = String.fromCodePoint( 17 ) + String.fromCodePoint( pars[0].value) + String.fromCodePoint( pars[1].value);\n\n    return val;\n  }\n\n  _fun_html_DLR_( pars ) {\n    return\n      this.html.get();\n  }\n\n\n  _fun_width( pars ) {\n\n    if( pars.length != 0 ) {\n        this.erh.throwError( \"too many parameters\", \"width() has no parameters\" );\n    }\n\n    var wh = this.bitmap.getDimensions();\n    return wh[0];\n  }\n\n  _fun_height( pars ) {\n\n    if( pars.length != 0 ) {\n        this.erh.throwError( \"too many parameters\", \"width() has no parameters\" );\n    }\n\n    var wh = this.bitmap.getDimensions();\n    return wh[0];\n  }\n\n  _fun_cols( pars ) {\n\n    if( pars.length != 0 ) {\n        this.erh.throwError( \"too many parameters\", \"cols() has no parameters\" );\n    }\n\n    var wh = this.output.getDimensions();\n    return wh[0];\n  }\n\n  _fun_columns( pars ) {\n\n    if( pars.length != 0 ) {\n        this.erh.throwError( \"too many parameters\", \"columns() has no parameters\" );\n    }\n\n    var wh = this.output.getDimensions();\n    return wh[0];\n  }\n\n  _fun_rows( pars ) {\n\n    if( pars.length != 0 ) {\n        this.erh.throwError( \"too many parameters\", \"rows() has no parameters\" );\n    }\n\n    var wh = this.output.getDimensions();\n    return wh[1];\n  }\n\n}\n\n//--EOC \n\n// ## pgmmanager.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/pgmmanager.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/pgmmanager.js\n\nclass BasicProgramManager {\n\n  constructor() {\n    this.rt = [];\n  }\n\n  addRuntime = function( ctx ) {\n\n    this.rt.push( ctx );\n\n  }\n\n}\n\nvar pgmman = new BasicProgramManager();\n\n//--EOC \n\n// ## basiccommands.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basiccommands.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basiccommands.js\n\nclass BasicCommands {\n\n  constructor( runtime ) {\n    this.output = runtime.output;\n    this.bitmap = runtime.bitmap;\n    this.input = runtime.input;\n    this.runtime = runtime;\n    this.sys = runtime.sys;\n    this.cmds = {};\n    this.func = {};\n    this.statementList = null;\n    this.erh = new ErrorHandler();\n\n    this.randnrs = [];\n    for(var i=0; i<10000;i++) {\n      this.randnrs.push( Math.random() );\n    }\n    this.randIndex = 0;\n    this.randStep = 1;\n\n  }\n\n  getStatements() {\n\n    //if( this.statementList != null ) {\n    //  return this.statementList;\n    //}\n\n    var stats = Object.getOwnPropertyNames( BasicCommands.prototype );\n\n    var stats2 = [];\n\n    for( var i=0;i<stats.length;i++) {\n      if( stats[i].startsWith(\"_stat_\")) {\n        stats2.push( stats[i].substr(6 ).toUpperCase() );\n      }\n    }\n\n    //this.statementList = stats2;\n    return stats2;\n  }\n\n  getFunctions() {\n    var stats = Object.getOwnPropertyNames( BasicCommands.prototype );\n\n    var stats2 = [];\n\n    for( var i=0;i<stats.length;i++) {\n      if( stats[i].startsWith(\"_fun_\")) {\n        var name = stats[i].substr(5 ).toUpperCase().replace(\"_DLR_\",\"$\");\n\n        stats2.push( name );\n      }\n    }\n\n    return stats2;\n  }\n\n  /************************ commands ************************/\n  _stat_new( pars ) {\n    this.runtime.new();\n  }\n\n  _stat_list( pars ) {\n\n    var start = 0;\n    var end   = 999999;\n    var parts = [];\n\n    var mode = \"noparam\";\n\n    if( pars.length==1 ) {\n      parts = pars[0].parts;\n    }\n\n    if( parts.length == 1 && parts[0].type == \"num\" && parts[0].data >=0 ) {\n      start = parts[0].data;\n      end = parts[0].data;\n    }\n    else if( parts.length == 1 && parts[0].type == \"num\" && parts[0].data <0 ) {\n      /*NOTE, this will stop working if RAW changes to return uniop + posnum */\n      end = -parts[0].data;\n    }\n    else if( parts.length == 2\n        && parts[0].type == \"num\"\n        && parts[1].type == \"num\"\n        && parts[1].op == \"-\"\n          ) {\n      start = parts[0].data;\n      end = parts[1].data;\n\n    }\n    else if( parts.length == 2\n        && parts[0].type == \"num\"\n        && parts[1].type == \"uniop\"\n        && parts[1].op == \"-\"\n          ) {\n      start = parts[0].data;\n    }\n\n    var runtime = this.runtime;\n    var list = [];\n    for (const l of runtime.program)\n      {\n\n        var lineNr = parseInt(l[0]);\n        if(  l[0] == null || (lineNr>= start && lineNr<= end) ) {\n          list.push( l[2] );\n        }\n      }\n\n      this.runtime.enterListMode( list );\n  }\n\n  _if_get() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [PAR];\n  }\n\n  _if_read() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [PAR];\n  }\n\n  _if_input() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW, RAW, RAW, RAW, RAW, RAW, RAW, RAW, RAW, RAW];\n  }\n\n  _if_list() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW];\n  }\n\n  _if_run() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW];\n  }\n\n  _stat_read( pars ) {\n    var p0 = pars[ 0 ];\n    if( p0.type != \"var\" ) {\n      this.erh.throwError( \"not a var\", \"parameter 0\" );\n    }\n\n    var data = this.runtime.readData();\n    if( data === undefined ) { this.erh.throwError( \"out of data\" ); }\n    else {\n      if( data.type ==\"num\" ) {\n        this.runtime.setVar(\n          p0.value, parseInt( data.data ) );\n        }\n        else {\n          this.runtime.setVar(\n            p0.value,  data.data );\n        }\n      }\n  }\n\n  _stat_get( pars ) {\n    var p0 = pars[ 0 ];\n\n    if( p0.type != \"var\" ) {\n      this.erh.throwError( \"not a var\", \"parameter 0\" );\n    }\n\n    var k = this.input.getKey();\n    if( k == null ) { this.runtime.setVar(p0.value, \"\"); }\n    else {\n      this.runtime.setVar(p0.value, k.key );\n    }\n  }\n\n  _stat_input( pars ) {\n\n    var vars = [];\n    var con = this.output;\n\n    for( var i=0; i<pars.length; i++) {\n      if( i == 0 ) {\n        var par = pars[0];\n\n        if( par.parts.length == 2 ) {\n          if( par.parts[0].type == \"str\" ) {\n            con.write( par.parts[0].data );\n            if( par.parts[1].type == \"var\" && par.parts[1].op == \";\" ) {\n              vars.push( par.parts[1].data );\n            }\n          }\n        }\n        else if( par.parts.length == 1 ) {\n          vars.push( par.parts[0].data );\n        }\n\n      }\n      else {\n        sys.log( \"PARS[\"+i+\"]\", pars[i] );\n        if( pars[i].parts[0].type != \"var\" ) {\n\n          this.erh.throwError( \"not a var\", \"parameter \" + i);\n        }\n        vars.push( pars[i].parts[0].data );\n      }\n    }\n\n    this.runtime.startConsoleDataInput( vars );\n\n  }\n\n  _stat_restore( pars ) {\n    this.runtime.restoreDataPtr();\n  }\n\n  _stat_load( pars ) {\n    var runtime = this.runtime;\n    var result;\n\n    runtime.printLine(\"\");\n\n    if( pars.length == 0) {\n      runtime.printLine(\"searching\");\n    }\n    else {\n      runtime.printLine(\"searching for \" + pars[0].value);\n    }\n\n    if( pars.length == 0) {\n        result = runtime.load( false );\n    }\n    else {\n      result = runtime.load( pars[0].value );\n    }\n\n    if( !result ) {\n      runtime.printLine(\"?not found error\");\n    }\n    else  {\n\n      if( !result[1] ) {  //only print when not a snapshot\n\n        if( pars.length == 0) {\n          runtime.printLine(\"found default\");\n        }\n        else {\n          runtime.printLine(\"found \"+pars[0].value);\n        }\n        runtime.printLine(\"loading\");\n      }\n\n    }\n  }\n\n  _stat_save( pars ) {\n    var runtime = this.runtime;\n\n    if( pars.length == 0) {\n        runtime.save( false );\n    }\n    else {\n      runtime.save( pars[0].value );\n    }\n  }\n\n  _stat_sys( pars ) {\n    this.erh.throwError( \"not supported\" );\n  }\n\n  _stat_wait( pars ) {\n    this.erh.throwError( \"not supported\" );\n  }\n\n  _stat_verify( pars ) {\n    this.erh.throwError( \"not supported\" );\n  }\n\n  _stat_run( pars ) {\n    var runtime = this.runtime;\n\n    runtime.runPGM();\n  }\n\n  _if_print() {\n      var EXPR = 0, PAR = 1, RAW=2;\n      return [RAW];\n  }\n\n  isNumber(value) {\n    return typeof value === 'number' && isFinite(value);\n  }\n\n  normalizeIfNumber( x )  {\n    if( this.isNumber( x ) ) {\n      if ( x >= 0 ) {\n        return \" \" + x;\n      }\n    }\n    return \"\" + x;\n  }\n\n  _stat_print( pars ) {\n\n    var runtime = this.runtime;\n    var con= this.output;\n\n    if( pars.length == 0 ) {\n      con.nl();\n      return;\n    }\n    else if( pars.length == 1 ) {\n      if( pars[0].parts.length == 0 ) {\n        con.nl();\n        return;\n      }\n    }\n\n    var newLine = true;\n    var value;\n    for( var i=0; i<pars.length; i++) {\n\n      newLine = true;\n      if( i<(pars.length-1)) {\n        newLine = false;\n      }\n\n      if( i>0) {\n        con.write( \"         \" );\n      }\n\n      var exparts = pars[i];\n      var exparts2=\n        { parts: [],\n          binaryNegate: exparts.binaryNegate,\n          negate: exparts.negate  };\n\n      for( var j=0; j<exparts.parts.length; j++) {\n        if( exparts.parts[j].type == \"uniop\" &&\n            exparts.parts[j].op == \";\" && j==(exparts.parts.length-1)\n            && (i == pars.length-1)) {\n              //console.log( \"i=\"+i+\" newline: set to false\");\n          newLine = false;\n        }\n        else {\n          exparts2.parts.push( exparts.parts[j] );\n        }\n      }\n      value = runtime.evalExpression( exparts2 );\n\n      if( i == 0) {\n        con.write( this.normalizeIfNumber( value ) );\n      }\n      else {\n        con.write( \"\" + value );\n      }\n      if( newLine ) { con.nl(); }\n\n    }\n\n  }\n\n\n  _stat_clr( pars ) {\n    return this.runtime.clrPGM();\n  }\n\n  /************************ functions ************************/\n\n  _fun_chr_DLR_( pars ) {\n    return String.fromCharCode( pars[0].value );\n  }\n\n  _fun_str_DLR_( pars ) {\n    if(pars[0].value>=0) {\n      return \" \" +  pars[0].value;\n    }\n    return \"\" +  pars[0].value;\n  }\n\n  _fun_abs( pars ) {\n    if( pars[0].value < 0 ) {\n      return -pars[0].value;\n    }\n    return pars[0].value;\n  }\n\n  _fun_len( pars ) {\n    return pars[0].value.length;\n  }\n\n  _fun_asc( pars ) {\n    return pars[0].value.charCodeAt(0);\n  }\n\n  _fun_val( pars ) {\n    return parseInt( pars[0].value );\n  }\n\n  _fun_exp( pars ) {\n    return Math.exp( pars[0].value );\n  }\n\n  intGetNextRand() {\n    this.randIndex = (this.randIndex + this.randStep) % this.randnrs.length;\n    return this.randnrs[ this.randIndex ];\n  }\n\n  intSeedRand( x0 ) {\n\n    if( x0 < 0) {\n      var x = -x0;\n      var base = Math.floor( x * 11 );\n      this.randIndex= base % this.randnrs.length;\n      this.randStep = 1+(base % 7);\n\n      /* Also reseed random buffer */\n      this.randnrs = [];\n      for(var i=0; i<10000;i++) {\n        this.randnrs.push( Math.random() );\n      }\n    }\n    else {\n\n      const minute = 1000 * 60;\n      const hour = minute * 60;\n      const day = hour * 24;\n      const year = day * 365;\n\n      const d = new Date();\n      let seedModifier = Math.round(d.getTime() / year);\n\n      x = -x;\n      var base = Math.floor( seedModifier * 11 );\n      this.randIndex= base % this.randnrs.length;\n      this.randStep = 1+(base % 7);\n\n      /* Also reseed random buffer */\n      this.randnrs = [];\n      for(var i=0; i<10000;i++) {\n        this.randnrs.push( Math.random() );\n      }\n    }\n\n  }\n\n\n  _fun_rnd( pars ) {\n\n    if( pars.length >1) {\n      this.erh.throwError( \"syntax\", \"rnd takes one parameter\" );\n    }\n\n    if( pars.length == 1) {\n\n      if( pars[0].value == 0 ) {\n        return Math.random();\n      }\n      this.intSeedRand( pars[0].value );\n    }\n\n    return this.intGetNextRand();\n  }\n\n  _fun_sqr( pars ) {\n    return Math.sqrt( pars[0].value);\n  }\n\n  _fun_log( pars ) {\n    return Math.log( pars[0].value);\n  }\n\n  _fun_pos( pars ) {\n    return this.runtime.getLinePos();\n  }\n\n  _fun_left_DLR_( pars ) {\n      //? LEFT$(A$,8)\n      var s = pars[0].value;\n\n      if( (typeof s) != \"string\") {\n        throw \"@type mismatch\";\n      }\n      return s.substr(0,pars[1].value);\n  }\n\n  _fun_right_DLR_( pars ) {\n      //? RIGHT$(A$,8)\n      var s = pars[0].value;\n\n      if( (typeof s) != \"string\") {\n        throw \"@type mismatch\";\n      }\n      return s.substr( s.length - pars[1].value );\n  }\n\n  _fun_mid_DLR_( pars ) {\n      //? RIGHT$(A$,8)\n      var s = pars[0].value;\n\n      if( (typeof s) != \"string\") {\n        throw \"@type mismatch\";\n      }\n      if( pars.length == 3) {\n        return s.substr( pars[1].value-1, pars[2].value );\n      }\n      else if( pars.length == 2) {\n        return s.substr( pars[1].value-1 );\n      }\n  }\n\n  _fun_fre( pars ) {\n    return -26627;\n  }\n\n  _fun_sin( pars ) {\n    return Math.sin( pars[0].value);\n  }\n\n  _fun_tan( pars ) {\n    return Math.tan( pars[0].value);\n  }\n\n  _fun_atn( pars ) {\n    return Math.atan( pars[0].value);\n  }\n\n  _fun_cos( pars ) {\n    return Math.cos( pars[0].value);\n  }\n\n  _fun_spc( pars ) {\n    var out=\"\";\n    for( var i=0; i<pars[0].value; i++) {\n      out+=\" \";\n    }\n    return out;\n  }\n\n  _max(x,m) {\n    if( x<m ) {  return x; }\n    return m;\n  }\n\n  _fun_usr() {\n    return 0;\n  }\n\n  _fun_int( pars ) {\n    return Math.floor( pars[0].value );\n  }\n\n  _fun_tab( pars ) {\n    var runtime = this.runtime;\n\n    if( pars.length <1) {\n      this.erh.throwError( \"syntax\", \"missing parameter 0\" );\n    }\n    var p = pars[0].value;\n    if( p<0 || p > 255 ) {\n      this.erh.throwError( \"illegal quantity\", \"value must be in-between 0 and 255\" );\n    }\n\n    for( var i=0; i<pars[0].value ; i++) {\n        this.output.write( \" \" );\n    }\n\n    return \"\";\n  }\n\n  _fun_sgn( pars ) {\n    var x = pars[0].value;\n\n    if( x<0 ) { return -1; }\n    else if( x>0 ) { return 1; }\n    return 0;\n  }\n\n\n  _fun_jiffies( pars ) {\n    return this.runtime.getJiffyTime( );\n  }\n}\n\n//--EOC \n\n// ## basicparser.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basicparser.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basicparser.js\n\nclass Parser {\n\n  constructor( cmds, ecmds ) {\n    this.commands = cmds;\n    this.extendedcommands = ecmds;\n    this.erh = new ErrorHandler();\n    this.debugFlag = false;\n  }\n\n  init() {\n\n\t  this.CTRL_KW = [\"IF\",\"THEN\",\"GOTO\",\"AND\", \"NOT\", \"OR\",  \"GOSUB\", \"RETURN\", \"FOR\", \"TO\", \"NEXT\", \"STEP\", \"DATA\", \"REM\", \"GOSUB\", \"DIM\", \"END\", \"LET\", \"STOP\", \"DEF\", \"FN\", \"ON\" ];\n    this.SHORTCUT_KW = [\"?\"];\n\n    this.KEYWORDS = this.commands.getStatements();\n\n    var more = this.extendedcommands.getStatements();\n    for( var i=0; i<more.length; i++) {\n      this.KEYWORDS.push( more[ i ] );\n    }\n\n    more = this.commands.getFunctions();\n    for( var i=0; i<more.length; i++) {\n      this.KEYWORDS.push( more[ i ] );\n    }\n\n    more = this.extendedcommands.getFunctions();\n    for( var i=0; i<more.length; i++) {\n      this.KEYWORDS.push( more[ i ] );\n    }\n\n     for( var i=0; i<this.CTRL_KW.length; i++) {\n       this.KEYWORDS.push( this.CTRL_KW[ i ] );\n     }\n\n     for( var i=0; i<this.SHORTCUT_KW.length; i++) {\n       this.KEYWORDS.push( this.SHORTCUT_KW[ i ] );\n     }\n     //this.padArray( this.KWCODES, 256 );\n\n     if( this.debugFlag ) { console.log(\"KEYWORDS:\" , this.KEYWORDS ); }\n\n     this.screenCodes2CTRLTable = [];\n     var tab = this.screenCodes2CTRLTable;\n\n     tab['\\x93'] = '\\x13';\n     tab['\\xd3'] = '\\x93';\n  }\n\n  getKeyWordCodes() {\n\n    this.throwError( null, \"(Extended) Keywords not yet supported\", \"extended disabled\" );\n    return this.KWCODES;\n  }\n\n  padArray( arr, nr ) {\n    var missing = nr - arr.length;\n    while( missing > 0) {\n      arr.push( null );\n      missing--;\n    }\n  }\n\n  throwError( ctx, detail, clazz ) {\n\n    var clazz2 = clazz;\n    if( clazz2 === undefined ) {\n      clazz2 = \"syntax\";\n    }\n\n    if( ctx ) {\n      console.log(\" Exception \" + clazz + \" at line \" + ctx.lineNumber+ \" \" + detail );\n    }\n\n    if( ctx ) {\n      if( ! ( ctx.lineNumber == undefined ) ) {\n        this.erh.throwError( clazz2, detail, ctx, ctx.lineNumber );\n      }\n    }\n\n    this.erh.throwError( clazz2, detail, undefined, -1 );\n\n  }\n\n  upperCaseNameTokens( tokens ) {\n\n\t\tfor( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n\t\t\tvar token = tokens[i];\n\n\t\t\tif( token ) {\n\t\t\t\tif( token.type == \"name\" ) {\n\t\t\t\t\ttoken.data = token.data.toUpperCase();\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn tokens;\n\t}\n\n\tremovePadding( tokens ) {\n\t\tvar tokens2 = [];\n\n\t\tfor( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n\t\t\tvar token = tokens[i];\n\n\t\t\tif( token ) {\n\t\t\t\tif( token.type != \"pad\" ) {\n\t\t\t\t\ttokens2.push( token );\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn tokens2;\n\t}\n\n  mergeCompTokens( tokens ) {\n\t\tvar tokens2 = [];\n\n    /* Convert token sequences like (\"<\",\"=\")\n       into single token \"<=\" */\n\n\t\tfor( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n\t\t\tvar token = tokens[i];\n\n\t\t\tif( i>0 ) {\n        var token2 = tokens[i-1];\n\t\t\t\tif( ( token.type == \"comp\" || token.type == \"eq\" ) &&\n            ( token2.type == \"comp\" || token2.type == \"eq\" ) ) {\n\t\t\t\t\ttoken2.type = \"@@removeme\";\n          token.data = token2.data + token.data;\n          token.type = \"comp\";\n          if( token.data == \"><\" ) {\n            token.data = \"<>\";\n          }\n          else if( token.data == \"=<\" ) {\n            token.data = \"<=\";\n          }\n          else if( token.data == \"=>\" ) {\n            token.data = \">=\";\n          }\n\n  \t\t\t}\n\t\t\t}\n\n      if( ( token.type == \"name\"  && token.data == \"OR\" ) ||\n        ( token.type == \"name\"  && token.data == \"AND\" ) ||\n        ( token.type == \"name\"  && token.data == \"NOT\" )) {\n          token.type = \"bop\";\n        }\n\n\t\t}\n\n    for( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n      if( tokens[i].type!=\"@@removeme\") {\n        tokens2.push( tokens[i] );\n      }\n    }\n\n\t\treturn tokens2;\n\t}\n\n\n\n  mergeBrokenUpTokens( tokens ) {\n\n    var splits = [];\n\n    //console.log(\"tokens\",tokens)\n    //standard\n    splits.push( { p1: \"REST\", p2: \"OR\", p3: \"E\", whole: \"RESTORE\" } );\n    splits.push( { p1: \"S\", p2: \"TO\", p3: \"P\", whole: \"STOP\" } );\n\n\n    //extended\n//    splits.push( { p1: \"Dsk\", p2: \"OR\", p3: \"T\", whole: \"DXPORT\" } );\n//    splits.push( { p1: \"LXP\", p2: \"OR\", p3: \"T\", whole: \"LXPORT\" } );\n    splits.push( { p1: \"IMP\", p2: \"OR\", p3: \"T\", whole: \"IMPORT\" } );\n    splits.push( { p1: \"EXP\", p2: \"OR\", p3: \"T\", whole: \"EXPORT\" } );\n    splits.push( { p1: \"L\", p2: \"GET\", p3: \"URL\", whole: \"LGETURL\" } );\n    splits.push( { p1: \"L\", p2: \"GET\", p3: \"NAME\", whole: \"LGETNAME\" } );\n    splits.push( { p1: \"L\", p2: \"GET\", p3: \"ID\", whole: \"LGETID\" } );\n    splits.push( { p1: \"GO\", p2: \"TO\", p3: null, whole: \"GOTO\" } );\n    splits.push( { p1: \"GO\", p2: \"SUB\", p3: null, whole: \"GOSUB\" } );\n\n    splits.push( { p1: \"GO\", p2: \"LINK\", p3: null, whole: \"GOLINK\" } );\n    splits.push( { p1: \"WINDOW\", p2: \"S\", p3: null, whole: \"WINDOWS\" } );\n    splits.push( { p1: \"UN\", p2: \"TAG\", p3: null, whole: \"UNTAG\" } );\n    splits.push( { p1: \"LINK\", p2: \"S\", p3: null, whole: \"LINKS\" } );\n    splits.push( { p1: \"DE\", p2: \"LET\", p3: \"E\", whole: \"DELETE\" } );\n    splits.push( { p1: \"LDE\", p2: \"LET\", p3: \"E\", whole: \"LDELETE\" } );\n    splits.push( { p1: \"TDE\", p2: \"LET\", p3: \"E\", whole: \"TDELETE\" } );\n    splits.push( { p1: \"B\", p2: \"OR\", p3: \"DER\", whole: \"BORDER\" } );\n    splits.push( { p1: \"G\", p2: \"COLOR\", p3: \"S\", whole: \"GCOLORS\" } );\n    splits.push( { p1: \"CHAR\", p2: \"COL\", p3: null, whole: \"CHARCOL\" } );\n    splits.push( { p1: \"SFRAME\", p2: \"CP\", p3: null, whole: \"SFRAMECP\" } );\n    splits.push( { p1: \"SFRAME\", p2: \"FLIPX\", p3: null, whole: \"SFRAMEFLIPX\" } );\n    splits.push( { p1: \"SFRAME\", p2: \"FLIPY\", p3: null, whole: \"SFRAMEFLIPY\" } );\n    splits.push( { p1: \"SFRAME\", p2: \"FX\", p3: null, whole: \"SFRAMEFX\" } );\n    splits.push( { p1: \"TAG\", p2: \"S\", p3: null, whole: \"TAGS\" } );\n    splits.push( { p1: \"X\", p2: \"ON\", p3: null, whole: \"XON\" } );\n    splits.push( { p1: \"S\", p2: \"POS\", p3: null, whole: \"SPOS\" } );\n    splits.push( { p1: \"S\", p2: \"POKE\", p3: null, whole: \"SPOKE\" } );\n    splits.push( { p1: \"WJ\", p2: \"IF\", p3: \"FY\", whole: \"WJIFFY\" } );\n    splits.push( { p1: \"REF\", p2: \"OR\", p3: \"MAT\", whole: \"REFORMAT\" } );\n\n\n    var tokens2 = []; //tokens;\n\n    for( var i=0; i<tokens.length; i++) {\n      tokens2.push( tokens[ i ]);\n    }\n\n    for( var i=0; i<splits.length; i++) {\n      var r=splits[i];\n      tokens2 = this.mergeTokenRange( tokens2, r );\n    }\n\n    if( this.debugFlag ) {  console.log( tokens2 ); }\n    return tokens2;\n  }\n\n\n  mergeTokenRange( tokens, record ) {\n\t\tvar tokens2 = [];\n    var tokens3 = [];\n\n    /* Convert \"S\",\"TO\",\"P\" into \"STOP\" */\n\n\t\tfor( \tvar i=0;\n\t\t\t\t\ti<tokens.length;\n\t\t\t\t\ti++)\n\t\t{\n      tokens2[i] = tokens[i];\n\t\t}\n\n    for( \tvar i=1;\n\t\t\t\t\ti<tokens2.length;\n\t\t\t\t\ti++)\n\t\t{\n      if( record.p3 == null ) {\n        if(\n           ( tokens2[i-1].type == \"name\" || tokens2[i-1].type == \"bop\" ) &&\n           ( tokens2[i-0].type == \"name\" || tokens2[i-0].type == \"bop\" ) ) {\n             if(\n                tokens2[i-1].data == record.p1 &&\n                tokens2[i-0].data == record.p2 ) {\n                  tokens2[i-1].data = record.whole;\n                  tokens2[i-0].type = \"removeme\";\n                }\n           }\n      }\n      else {\n        if(i<2) {\n          continue;\n        }\n        if(\n          ( tokens2[i-2].type == \"name\" || tokens2[i-2].type == \"bop\" ) &&\n           ( tokens2[i-1].type == \"name\" || tokens2[i-1].type == \"bop\" ) &&\n           ( tokens2[i-0].type == \"name\" || tokens2[i-0].type == \"bop\" ) ) {\n\n             if( tokens2[i-2].data == record.p1 &&\n                tokens2[i-1].data == record.p2 &&\n                tokens2[i-0].data == record.p3 ) {\n                  tokens2[i-2].data = record.whole;\n                  tokens2[i-1].type = \"removeme\";\n                  tokens2[i-0].type = \"removeme\";\n                }\n           }\n      }\n\t\t}\n\n    var j=0;\n    for( \tvar i=0;\n\t\t\t\t\ti<tokens2.length;\n\t\t\t\t\ti++)\n\t\t{\n      if( tokens2[i].type != \"removeme\" ) {\n          tokens3[j] = tokens2[i];\n          j++;\n      }\n\t\t}\n\n\t\treturn tokens3;\n\t}\n\n\tparseFunParList( context ) {\n\n\t\tvar tokens = context.tokens;\n\t\tvar params = [];\n\t\tvar even = true;\n\n\t\tvar endTokens = [];\n\t\tendTokens.push( { type: \"sep\", data: \"@@@all\" });\n\t\tendTokens.push( { type: \"bracket\", data: \")\" });\n\n\t\tendTokens.push();\n\n\t\twhile( true ) {\n\n\t\t\tvar token;\n\n      if( tokens.length > 0) {\n        if( tokens[0].type==\"bracket\" && tokens[0].data==\")\") {\n          break;\n        }\n      }\n\n\t\t\tif( even ) {\n        var expr = this.parseBoolExpression( context, endTokens );\n        expr.type = \"expr\";\n\t\t\t\tparams.push( expr );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoken = tokens.shift();\n\n\t\t\t\tif( token.type==\"sep\" ) {\n\t\t\t\t\t//all ok, next par\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.throwError( context, \"Expected ',' or ')', got '\" + token.data + \"'\");\n\t\t\t\t}\n\t\t\t}\n\t\t\teven = !even;\n\t\t}\n\n\t\treturn params;\n\t}\n\n\tpeekIfNextIsOpenBracket( context ) {\n\n\t\tvar tokens = context.tokens;\n\n\t\tif( tokens.length > 0 ) {\n\t\t\tif( tokens[0].type == \"bracket\" && tokens[0].data == \"(\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tparseSubExpression( context ) {\n\n\t\tvar token = context.tokens.shift();\n\n\t\tif( !(token.type == \"bracket\" && token.data == \"(\")) {\n\t\t\tthis.throwError( context, \"parsing subexpression, expected \\\"bracket\\\", not '\" + token.data + \"'\");\n\t\t}\n\n\t\tvar endTokens = [];\n\t\tendTokens.push( { type: \"bracket\", data: \")\" });\n\n\t\tvar expr = this.parseBoolExpression( context, endTokens );\n\t\tcontext.tokens.shift();\n\n\t\texpr.type = \"expr\";\n\t\treturn expr;\n\t}\n\n\n  tokensToString( token )  {\n    var str = \"\";\n\n    if(token.data == \"@@@all\") {\n        str = str + \"'\" + token.type + \"'\";\n    }\n    else {\n      //str = str + \"'\" + token.type + \"/\" + token.data + \"'\";\n      str = str + \"'\" + token.data + \"'\";\n    }\n\n    return str;\n  }\n\n  endTokensToString( endTokenArray )  {\n    var str = \"\";\n\n    for( var et=0; et<endTokenArray.length; et++) {\n      var endToken = endTokenArray[et];\n\n      if( str != \"\") { str+= \" \";}\n      str += this.tokensToString( endToken );\n    }\n    return str;\n  }\n\n  isEndToken( token, endTokenArry ) {\n\n    for( var et=0; et<endTokenArry.length; et++) {\n      var endToken = endTokenArry[et];\n\n      if( token.type == endToken.type && token.data == endToken.data ) {\n        return true;\n      }\n      else if( token.type == endToken.type && endToken.data == \"@@@all\" ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  parseSimpleExpression( context, endTokens ) {\n\n    var endLoop;\n\t\tvar tokens = context.tokens;\n\n    if( tokens.length == 0) {\n      return undefined;\n    }\n\n\t\tvar token, returnValue=undefined;\n\t\ttoken = tokens.shift();\n\n\t\tif( !token ) {\n\t\t\tthis.throwError( context, \"empty simple expression\");\n\t\t}\n\n    endLoop = this.isEndToken( token, endTokens );\n    if( endLoop ) {\n      this.throwError( context, \"empty simple expression\");\n    }\n\n\n    if( token.type == \"op\" && token.data == \"-\" ) {\n\t\t\t\tvar pair = this.parseSimpleExpression( context, endTokens );\n        pair[0].data = -pair[0].data;\n        return pair;\n\t\t}\n\n\t\tif( token.type == \"num\" ) {\n        returnValue= { type: \"num\", data: token.data };\n\t\t}\n\t\telse if( token.type == \"str\" ) {\n\t\t\t\treturnValue= { type: \"str\", data: token.data };\n\t\t}\n\n\n    token = tokens.shift();\n    if( token ) {\n      endLoop = this.isEndToken( token, endTokens );\n      if( ! endLoop ) {\n        endLoop = context.tokens.length == 0;\n      }\n      if( !endLoop ) {\n        this.throwError( context, \"Empty simple expression end expected\");\n      }\n    }\n\n\t\treturn [returnValue, token];\n\t}\n\n\n  parseBoolExpression( context, endTokens0 ) {\n\n    var endTokens = [];\n    var tokens = context.tokens;\n\n    for( var i=0; i < endTokens0.length; i++ ) {\n      endTokens.push( endTokens0[ i ] );\n    }\n\n    endTokens.push( { type: \"bop\", data: \"OR\" });\n    endTokens.push( { type: \"bop\", data: \"AND\" });\n\n    var first = true;\n    var eList = [];\n    var op = null;\n    while( true ) {\n\n      var expr = this.parseExpression( context, endTokens );\n      if( first && tokens.length == 0) {\n        return expr;\n      }\n      first = false;\n\n      var opData = null;\n      if( op != null ) {\n          opData = op.data;\n      }\n\n      //if( expr.parts.length == 1) {\n      //    expr.parts[0].op = opData;\n      //    expr.parts[0].dbg = \"1\";\n      //    eList.push(  expr.parts[0] );\n      //}\n      //else {\n          expr.op = opData;\n          expr.type = \"expr\";\n          expr.dbg = \"1\";\n          eList.push(  expr );\n      //}\n\n      if( tokens.length > 0) {\n        if( tokens[0].type == \"bop\" ) {\n          var op = tokens.shift();\n          continue;\n        }\n      }\n      break;\n    }\n\n    if( eList.length == 1 ) {\n        eList[0].dbg2 = \"len=1\";\n        return eList[0];\n    }\n\n\n    var retExpr = {\n      negate: false,\n      binaryNegate: false,\n      type: \"expr\",\n      parts: [],\n      op: null\n    };\n\n    for( i=0; i<eList.length; i++) {\n      retExpr.parts.push( eList[ i ] );\n    }\n\n    return retExpr;\n\n  }\n\n\tparseExpression( context, endTokens ) {\n\n\t\tvar tokens = context.tokens;\n    if( tokens.length == 0) {\n      return null;\n    }\n\n\t\tvar expression = {\n\t\t\t\t\tparts: [],\n          negate: false,\n          binaryNegate: false\n\t\t};\n\n\t\tvar index = 0;\n\t\tvar even = true;\n\t\tvar op = null;\n\t\tvar parts = expression.parts;\n    var first = true;\n    var negate = false;\n\n    var binaryNegate = false;\n\n\n\t\twhile( true ) {\n\t\t\tvar token, part;\n\t\t\ttoken = tokens.shift();\n\n\t\t\tif( !token ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n      var endLoop = this.isEndToken( token, endTokens );\n      if( endLoop ) {\n\n        tokens.unshift( token );\n        break;\n      }\n\n\t\t\tif( even ) {\n\n\t\t\t\tif( token.type == \"num\" ) {\n\t\t\t\t\tpart = { type: \"num\", data: token.data, op: op };\n          if( negate ) {\n            part.data = -part.data;\n          }\n\t\t\t\t\tparts.push( part );\n          first = false;\n          negate = false;\n\t\t\t\t}\n\t\t\t\telse if( token.type == \"str\" ) {\n\t\t\t\t\tpart = { type: \"str\", data: token.data, op: op };\n\t\t\t\t\tparts.push( part );\n          if( negate ) {\n            this.throwError( context, \"found negation on a string\", \"type mismatch\");\n          }\n          first = false;\n\t\t\t\t}\n\t\t\t\telse if( token.type==\"bracket\" && token.data==\"(\") {\n\t\t\t\t\t\ttokens.unshift( token );\n\n            var subEndTokens = [];\n            subEndTokens.push( { type: \"bracket\", data: \")\" });\n\n\t\t\t\t\t\tvar expr = this.parseSubExpression( context, subEndTokens );\n            expr.op = op;\n            expr.negate = negate;\n            expr.binaryNegate = binaryNegate;\n\t\t\t\t\t\tparts.push ( expr );\n            first = false;\n            negate = false;\n\t\t\t\t}\n\t\t\t\telse if( token.type==\"name\" ) {\n\n\t\t\t\t\t\tvar name = token.data;\n\t\t\t\t\t\tvar isFunctionCallOrArray = this.peekIfNextIsOpenBracket( context );\n            var isUserDefinedFunctionCall = (name == \"FN\");\n\n\t\t\t\t\t\tif( isFunctionCallOrArray ) { /*We have a function or an Array */\n\n\t\t\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\t\t\tvar parameters = this.parseFunParList( context );\n              tokens.shift();\n\n              part = { type: \"funCall\", params: parameters, op: op, functionName: name };\n\n              if( this.KEYWORDS.indexOf( name ) == -1 ) {\n                //isArray  example: x=a(5)\n                part = { type: \"array\", data: name, op: op, indices: parameters };\n\n              }\n\n              if( op == null && negate ) {\n                var subExpression = {\n                      parts: [part],\n                      negate: true,\n                      binaryNegate: false,\n                      type: \"expr\"\n                };\n                parts.push ( subExpression );\n              }\n\t\t\t\t\t\t\telse {\n                parts.push ( part );\n              }\n\n\t\t\t\t\t\t}\n            else if( isUserDefinedFunctionCall ) {\n\n              token = tokens.shift();\n              name = token.data;\n\n              token = tokens.shift();\n              var parameters = this.parseFunParList( context ); //TODO limit to 1 par\n              tokens.shift();\n\n              part = { type: \"defFnCall\", params: parameters, op: op, functionName: name };\n\n              if( op == null && negate ) {\n                var subExpression = {\n                      parts: [part],\n                      negate: true,\n                      binaryNegate: false,\n                      type: \"expr\"\n                };\n                parts.push ( subExpression );\n              }\n\t\t\t\t\t\t\telse {\n                parts.push ( part );\n              }\n\n            }\n\t\t\t\t\t\telse { /* we have an variable*/\n\n\t\t\t\t\t\t\tpart = { type: \"var\", data: token.data, op: op };\n              if( op == null && negate ) {\n                var subExpression = {\n                      parts: [part],\n                      negate: true,\n                      binaryNegate: false,\n                      type: \"expr\"\n                };\n                parts.push ( subExpression );\n              }\n              else {\n                parts.push ( part );\n              }\n\n\t\t\t\t\t\t}\n            negate = false;\n            first = false;\n\t\t\t\t}\n        else if( token.type==\"op\" && token.data==\"-\" ) {\n          negate = ! negate;\n          continue;\n        }\n        else if( token.type==\"bop\" && token.data==\"NOT\" && first ) {\n          binaryNegate = ! binaryNegate;\n          expression.binaryNegate = binaryNegate;\n          if( this.debugFlag ) {\n            console.log(\"NOT\")\n          }\n          continue;\n        }\n\t\t\t\telse {\n\t\t\t\t\tthis.throwError( context, \"Expected \\\"number\\\", \\\"string\\\", \\\"symbol\\\" or \\\"bracket\\\", not \" + token.data);\n\t\t\t\t}\n        op = null;\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\tif( token.type == \"op\" || token.type == \"comp\" || token.type == \"eq\" || token.type == \"bop\" ) {\n\t\t\t\t\top = token.data;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.throwError( context, \"Expected \\\"operator\\\" or one of (\"+\n          this.endTokensToString(endTokens)+\n          \"), not '\" + token.data + \"'\");\n\t\t\t\t}\n\t\t\t}\n\t\t\teven = !even;\n\n\t\t}\n\n    if( op != null ) {\n      part = { type: \"uniop\", data: null, op: op };\n      parts.push ( part );\n    }\n\n\t\tif( expression.parts == null ) {\n\t\t\treturn null;\n\t\t}\n\n    var newParts;\n    newParts = this.groupParts( expression.parts, \"^\" );\n    newParts = this.groupParts( newParts, \"/\" );\n    newParts = this.groupParts( newParts, \"*\" );\n\n    var oldExpression = expression;\n    expression = {\n          parts: newParts,\n          negate: oldExpression.negate,\n          binaryNegate: oldExpression.binaryNegate\n    };\n\n\t\treturn expression;\n\t}\n\n\n  groupParts( parts0 , op ) {\n\n    var parts1=[], parts2=[];\n\n    for( var i=0; i<parts0.length; i++ ) {\n      parts1.push( parts0[ i ] );\n    }\n\n    for( var i=0; i<parts1.length; i++ ) {\n\n      var part = parts1[ i ];\n      if( i>0 && part.op == op ) {\n        var prevPart = parts1[ i-1 ];\n\n        var subExpr = {\n          negate: false,\n          binaryNegate: false,\n          type: \"expr\",\n          parts: [],\n          op: prevPart.op\n        };\n\n        subExpr.parts[ 0 ] = prevPart;\n        subExpr.parts[ 0 ].op = null;\n        subExpr.parts[ 1 ] = part;\n\n        parts1[i-1] = null;\n        parts1[ i ] = subExpr;\n\n      }\n    }\n\n\n    for( var i=0; i<parts1.length; i++ ) {\n\n      var part = parts1[ i ];\n      if( part != null ) {\n        parts2.push( part );\n      }\n    }\n\n    return parts2;\n  }\n\n  normalizeStatementName( x ) {\n    if(x == \"?\") {\n      return \"print\";\n    }\n    return x;\n  }\n\n  parseAssignment( context, preTokens, commands, command, nameToken, token0  ) {\n\n    var token = token0;\n\t\tvar tokens = context.tokens;\n\n    command.type = \"assignment\";\n    command.var = nameToken;\n    command.arrayAssignment = false;\n\n    var endTokens = [];\n    endTokens.push( { type: \"cmdsep\", data: \"@@@all\" });\n\n    command.expression = this.parseBoolExpression( context, endTokens );\n    commands.push( command );\n  }\n\n  parseArrayAssignment( context, preTokens, commands, command, nameToken, token0  ) {\n\n    var token = token0;\n\t\tvar tokens = context.tokens;\n\n    command.type = \"assignment\";\n    command.var = nameToken;\n    command.arrayAssignment = true;\n\n    //token = tokens.shift();\n    var indices = this.parseFunParList( context );\n    command.indices = indices;\n\n    tokens.shift();\n    if( this.debugFlag ) {\n      console.log(\"tokens after:\",tokens)\n    }\n\n    token = tokens.shift();\n    if( token === undefined ) {\n      token = { type: \"@@@notoken\" };\n    }\n\n    if( token.type != \"eq\") {\n      this.throwError( context, \"Expected =\");\n    }\n\n    var endTokens = [];\n    endTokens.push( { type: \"cmdsep\", data: \"@@@all\" });\n\n    command.expression = this.parseBoolExpression( context, endTokens );\n    commands.push( command );\n\n  }\n\n  parseControlStructure(  context, preTokens, commands, command, nameToken, token0  ) {\n\n    var token = token0;\n\t\tvar tokens = context.tokens;\n\n    if( true ) {\n\n      command.type = \"control\";\n      var controlToken = nameToken;\n      command.controlKW = nameToken.toLowerCase();\n      if( token.type != \"@@@notoken\") {\n        tokens.unshift( token );\n      }\n\n      if( controlToken == \"LET\") {\n\n        token = tokens.shift();\n        if( token.type != \"name\") {\n          this.throwError( context, \"LET expects var name\");\n        }\n        nameToken = token.data;\n\n        token = tokens.shift();\n        if( token === undefined ) {\n          token = { type: \"@@@notoken\" };\n        }\n\n/*        if( token.type != \"bracket\") { #TODO array assignments, ex: LET a(8) = 2\n          this.throwError( context, \"LET expects =\");\n        }\n*/\n\n        if( token.type == \"eq\") {\n\n          this.parseAssignment( context, preTokens, commands, command, nameToken, token );\n        }\n        else if( token.type == \"bracket\" && token.data==\"(\" ) {\n\n          this.parseArrayAssignment( context, preTokens, commands, command, nameToken, token );\n\n        }\n        else {\n          this.throwError( context, \"Unexpected data after 'LET': '\" + token.data + \"'\" );\n        }\n\n      }\n      else if( controlToken == \"DIM\") {\n\n        var first = true;\n        command.params = [];\n        command.arrayNames = [];\n\n        while( true ) {\n\n          token = tokens.shift();\n          if(!first ) {\n            if( token === undefined ) {\n              break;\n            }\n            if( ! ( token.type == \"sep\" && token.data == \",\" )) {\n              tokens.unshift( token );\n              break;\n            }\n            token = tokens.shift();\n          }\n\n          if( token.type != \"name\" ) {\n            this.throwError( context, \"DIM expects var name\");\n          }\n\n          nameToken = token.data;\n\n          token = tokens.shift();\n          if( token === undefined ) {\n            token = { type: \"@@@notoken\" };\n          }\n\n          if( !(token.type==\"bracket\" && token.data==\"(\") ) {\n            this.throwError( context, \"DIM expects (\");\n          }\n\n          var indices = this.parseFunParList( context );\n\n          token = tokens.shift();\n          if( token === undefined ) {\n            token = { type: \"@@@notoken\" };\n          }\n\n          if( !(token.type==\"bracket\" && token.data==\")\") ) {\n            this.throwError( context, \"DIM expects )\");\n          }\n\n          command.params.push( indices );\n          command.arrayNames.push( nameToken );\n\n          first = false;\n        }\n\n        commands.push( command );\n      }\n      else if( controlToken == \"DEF\") {\n\n        token = tokens.shift();\n        if( !( token.type == \"name\" && token.data == \"FN\" ) ) {\n          this.throwError( context, \"DEF expects FN\");\n        }\n\n        token = tokens.shift();\n        if( token.type != \"name\") {\n          this.throwError( context, \"DEF FN expects function name\");\n        }\n        var fName = token.data;\n\n        token = tokens.shift();\n        if(! ( token.type == \"bracket\" && token.data == \"(\" )) {\n          this.throwError( context, \"DEF FN expects function name and ->( varname )\");\n        }\n\n        token = tokens.shift();\n        if(! ( token.type == \"name\"  )) {\n          this.throwError( context, \"DEF FN expects function name and ( ->varname )\");\n        }\n        var varName = token.data;\n\n        token = tokens.shift();\n        if(! ( token.type == \"bracket\" && token.data == \")\" )) {\n          this.throwError( context, \"DEF FN expects function name and ( varname -> )\");\n        }\n\n        token = tokens.shift();\n        if(! ( token.type == \"eq\" && token.data == \"=\" )) {\n          this.throwError( context, \"DEF FN expects function name and ( varname ) -> =\");\n        }\n\n\n        endTokens = [];\n        var expr_fn = this.parseBoolExpression( context, endTokens );\n\n        if( this.debugFlag ) {\n          console.log(\"expr = \" + expr_fn );\n        }\n\n        command.params=[];\n        command.params[0] = fName;\n        command.params[1] = varName;\n        command.params[2] = expr_fn;\n        commands.push( command );\n\n      }\n      else if( controlToken == \"GOTO\" || controlToken == \"GOSUB\") {\n        var num = -1;\n\n        token = tokens.shift();\n\n        if( token === undefined ) {\n          this.throwError( context, \"GOTO/GOSUB expects number\", \"undef'd statement\");\n        }\n\n        if( token.type != \"num\") {\n          //this.throwError( context, \"GOTO/GOSUB expects number\", \"undef'd statement\");\n\n          tokens.unshift( token );\n\n          var endTokens = [];\n          endTokens.push( { type: \"cmdsep\", data: \"@@@all\" });\n\n          var expression = this.parseBoolExpression( context, endTokens );\n          command.params=[];\n          command.params[0] = expression;\n          commands.push( command );\n          return;\n\n        }\n        num = parseInt(token.data);\n        token = tokens.shift();\n        if( token !== undefined ) {\n          if( token.type != \"cmdsep\") {\n            this.throwError( context, \"Expected \\\"command separator\\\", instead of '\"+token.data+\"'\");\n          }\n        }\n\n        command.params=[];\n        command.params[0] = num;\n        commands.push( command );\n\n      }\n      else if( controlToken == \"ON\" ) {\n        var nums = [];\n\n        endTokens = [];\n        endTokens.push( { type: \"name\", data: \"GOTO\" });\n        endTokens.push( { type: \"name\", data: \"GOSUB\" });\n\n        var onExpr = this.parseBoolExpression( context, endTokens );\n\n        token = tokens.shift();\n        if( token.type != \"name\") {\n          this.throwError( context, \"ON expects GOTO/GOSUB\");\n        }\n        if( !( token.data == \"GOTO\" || token.data == \"GOSUB\" )) {\n          this.throwError( context, \"ON expects GOTO/GOSUB\");\n        }\n        var onType = token.data;\n\n        token = tokens.shift();\n\n        if( token.type != \"num\") {\n          this.throwError( context, \"ON GOTO/GOSUB expects number\", \"undef'd statement\");\n        }\n\n        if( token.type != \"num\") {\n          this.throwError( context, \"ON GOTO/GOSUB expects number\",  \"undef'd statement\");\n        }\n        nums.push(  parseInt(token.data) );\n\n        while ( true ) {\n\n          token = tokens.shift();\n          if( token == undefined ) { break; }\n          if( token.type == \"cmdsep\") { break; }\n          if( token.type == \"cmdsep\") { break; }\n          if( !( token.type == \"sep\" && token.data == \",\" )) {\n            this.throwError( context, \"ON GOTO/GOSUB expects numberlist\");\n          }\n\n          token = tokens.shift();\n          if( token.type != \"num\") {\n            this.throwError( context, \"GOTO/GOSUB expects number\");\n          }\n          nums.push(  parseInt(token.data) );\n        }\n\n        command.params=[];\n        command.params[0] = onType.toLowerCase();\n        command.params[1] = onExpr;\n        command.params[2] = nums;\n        commands.push( command );\n\n      }\n      else if( controlToken == \"RETURN\") {\n        var num = -1;\n\n        command.params=[];\n        commands.push( command );\n\n      }\n      else if( controlToken == \"END\") {\n        var num = -1;\n\n        command.params=[];\n        commands.push( command );\n\n      }\n      else if( controlToken == \"STOP\") {\n        var num = -1;\n\n        command.params=[];\n        commands.push( command );\n\n      }\n      else if( controlToken == \"FOR\") {\n\n        var variable, expr_from, expr_to, expr_step;\n        var endTokens = [];\n\n        token = tokens.shift();\n        if( token.type != \"name\" ) {\n          this.throwError( context,\n                \"For expects variable, no var found, found \" + token.type+\"/\"+token.data);\n        }\n\n        variable = token.data;\n\n        token = tokens.shift();\n        if( !( token.type == \"eq\" && token.data == \"=\" )) {\n          this.throwError( context,\n                \"For expects '=', not found, found \" + token.type+\"/\"+token.data);\n        }\n\n        endTokens = [];\n        endTokens.push( { type: \"name\", data: \"TO\" });\n\n        expr_from = this.parseBoolExpression( context, endTokens );\n\n        token = tokens.shift();\n        if( !( token.type == \"name\" && token.data == \"TO\" ) ) {\n          this.throwError( context, \"For expects 'to', not found, found \" + token.type+\"/\"+token.data);\n        }\n\n        endTokens = [];\n        endTokens.push( { type: \"cmdsep\", data: \":\" });\n        endTokens.push( { type: \"name\", data: \"STEP\" });\n\n        expr_to = this.parseBoolExpression( context, endTokens );\n        expr_step = { parts: [ { data: \"1\", op: null, type: \"num\"} ] };\n\n        token = tokens.shift();\n        if( !( token === undefined ) ) {\n          if( token.type == \"name\" && token.data == \"STEP\") {\n\n              endTokens = [];\n              endTokens.push( { type: \"cmdsep\", data: \":\" });\n              expr_step = this.parseBoolExpression( context, endTokens );\n          }\n          else {\n            if(! ( token.type == \"cmdsep\" && token.data == \":\")) {\n              throw \"FOR: unexpected token '\" + token.data +\"'\";\n            }\n          }\n        }\n\n        command.controlKW = \"for:init\";\n        command.params=[];\n        command.params[0] = expr_from;\n        command.params[1] = expr_to;\n        command.params[2] = expr_step;\n        command.variable = variable;\n        commands.push( command );\n        if( this.debugFlag ) {\n          console.log(\"command=\", command);\n        }\n\n      }\n      else if( controlToken == \"NEXT\") {\n\n        var variable;\n\n        var explicit = false;\n        while( true ) {\n\n          var token = tokens.shift();\n          if( ! token ) {\n            break;\n          }\n          if( token.type == \"cmdsep\" ) {\n            break;\n          }\n\n          if( token.type != \"name\" ) {\n            throw \"Next expected variable, not '\" +token.data+ \"'\";\n          }\n\n          var nextcommand = {\n            controlKW: \"for:next\",\n            nextVar: token.data,\n            lineNumber: command.lineNumber,\n            type: command.type\n          };\n\n          commands.push( nextcommand );\n          explicit = true;\n\n          var token = tokens.shift();\n          if( ! token ) {\n            break;\n          }\n          if( token.type == \"cmdsep\" ) {\n            break;\n          }\n          if( !( token.type == \"sep\" && token.data == \",\" )) {\n            throw \"Expected comma, found '\" + token.data + \"'\";\n          }\n        }\n\n        if( ! explicit ) {\n          command.controlKW = \"for:next\";\n          command.nextVar = null;\n          commands.push( command );\n        }\n\n      }\n      else if( controlToken == \"IF\") {\n\n        var expr1, expr2, comp;\n        endTokens = [];\n        endTokens.push( { type: \"name\", data: \"THEN\" });\n        endTokens.push( { type: \"name\", data: \"GOTO\" });\n        var expr1 = this.parseBoolExpression( context, endTokens );\n        command.params= [ expr1 ];\n\n        token = tokens.shift();\n\n        if( token.type == \"name\" && token.data == \"GOTO\") {\n          var insert = {};\n          insert.data = \"GOTO\";\n          insert.type = \"name\";\n          tokens.unshift( insert );\n        } else {\n          if( tokens.length > 0 ) {\n            if( tokens[0].type == \"num\" ) {\n              var insert = {};\n              insert.data = \"GOTO\";\n              insert.type = \"name\";\n              tokens.unshift( insert );\n            }\n          }\n        }\n\n        var block = this.parseLineCommands( context );\n\n        if( this.debugFlag ) {\n          console.log( block );\n        }\n\n        commands.push( command );\n\n        for( var bi=0; bi<block.length; bi++) {\n          commands.push( block[bi] );\n        }\n\n      }\n      else if( controlToken == \"DATA\") {\n\n        var dataArray = [];\n        var endTokens;\n\n        endTokens = [];\n        endTokens.push( { type: \"cmdsep\", data: \":\" });\n        endTokens.push( { type: \"sep\", data: \",\" });\n\n        while ( true ) {\n            var pair = this.parseSimpleExpression( context, endTokens );\n\n            var expr1 = pair[0];\n\n\n            if( expr1 === undefined ) {\n              throw \"DATA: expected data\";\n            }\n\n            dataArray.push( expr1 );\n\n            token = pair[1];\n            if( token === undefined ) {\n              break;\n            }\n            if( token.type == \"cmdsep\" && token.data == \":\" ) {\n              break;\n            }\n            else if( token.type == \"sep\" && token.data ==\",\") {\n              continue;\n            }\n            else {\n              this.throwError( context, \"data unknown token found \" + token.type+\"/\"+token.data);\n            }\n        }\n\n        command.params=dataArray;\n        commands.push( command );\n\n      }\n      else if( controlToken == \"REM\") {\n\n        while( true ) {\n\n            token = tokens.shift();\n            if( token == null ) { break ; }\n        }\n\n        commands.push( command );\n\n      }\n      else {\n        this.throwError( context, command.controlKW + \" not implemented\");\n      }\n    }\n  }\n\n  parseStatementCall(  context, preTokens, commands, command, nameToken, token0 ) {\n\n    var token = token0;\n\t\tvar tokens = context.tokens;\n\n    command.statementName = this.normalizeStatementName( nameToken );\n    command.type = \"call\";\n\n\n    if( token.type != \"@@@notoken\") {\n      tokens.unshift( token );\n    }\n\n    command.params = [];\n\n    while ( true ) {\n\n      var endCommand = false;\n      var endTokens = [];\n      endTokens.push( { type: \"sep\", data: \"@@@all\" });\n      endTokens.push( { type: \"cmdsep\", data: \"@@@all\" });\n\n      var expression = this.parseBoolExpression( context, endTokens );\n      if( this.debugFlag ) {\n        console.log( expression );\n      }\n\n      if( expression != null ) {\n        command.params.push( expression );\n\n        token = tokens.shift();\n        if( token != undefined ) {\n          if( token === undefined ) {\n            endCommand = true;\n          }\n          if( token.type == \"cmdsep\" ) {\n            endCommand = true;\n          }\n          else if( token.type == \"sep\") {\n            continue;\n          }\n          else {\n            this.throwError( context, \"Unexpected characters in statement call: '\" + token.data +\"'\");\n          }\n        }\n        else {\n          endCommand = true;\n        }\n\n      }\n      else {\n        endCommand = true;\n      }\n\n      if( endCommand  ) {\n        commands.push( command );\n        break;\n      }\n    }\n  }\n\n\tparseLineCommands( context, preTokens ) {\n\n\t\tvar tokens = context.tokens;\n\t\tvar commands = [];\n\n\t\tvar i=1;\n\t\twhile( true ) {\n\n\t\t\tvar command = {};\n\t\t\tvar token;\n      var keyword = false;\n      var control = false;\n\n\t\t\tcommand.lineNumber = context.lineNumber;\n\n\t\t\ttoken = tokens.shift();\n\t\t\tif( token === undefined ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif( token.type == \"cmdsep\" ) {\n\t\t\t\t/* empty command */\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( token.type != \"name\" ) {\n\t\t\t\tif( token.type != \"trash\" ) {\n          this.throwError( context, \"Unexpected token, expected symbolname, got '\" + oken.data +\"'\") ;\n        }\n        else {\n          this.throwError( context, \"Unexpected character, expected \\\"symbolname\\\", got \" + token.detail ) ;\n        }\n\t\t\t}\n\n\t\t\tvar nameToken = token.data;\n\t\t\tvar cmdType = \"unknown\";\n\n\t\t\tif( this.CTRL_KW.indexOf( token.data ) > -1) {\n\t\t\t\t\tcontrol = true;\n\t\t\t}\n\n      if( this.KEYWORDS.indexOf( token.data ) > -1 || token.data == \"XON\") {\n\t\t\t\t\tkeyword = true;\n\t\t\t}\n      else {\n        if( this.SHORTCUT_KW.indexOf( token.data ) > -1) {\n  \t\t\t\t\tkeyword = true;\n  \t\t\t}\n      }\n\n\t\t  token = tokens.shift();\n\t\t\tif( token === undefined ) {\n\t\t\t\ttoken = { type: \"@@@notoken\" };\n\t\t\t}\n\n      if (  control ) {\n\n        this.parseControlStructure( context, preTokens, commands, command, nameToken, token );\n\n      }\n\t\t\telse if( token.type == \"eq\") {\n\n\t\t\t\tthis.parseAssignment( context, preTokens, commands, command, nameToken, token );\n\t\t\t}\n      else if( token.type == \"bracket\" && token.data==\"(\" && !keyword ) {\n\n\t\t\t\tthis.parseArrayAssignment( context, preTokens, commands, command, nameToken, token );\n\n\t\t\t}\n      else {\n          if( !keyword ) {\n            console.log(\"Dump: \",context, preTokens, commands, command, nameToken, token);\n            this.throwError( context, \"no such statement: \" + nameToken );\n          }\n          this.parseStatementCall( context, preTokens, commands, command, nameToken, token );\n\n      }\n\n\t\t}\n    return commands;\n\t}\n\n  logTokens( tokens ) {\n    if( !this.debugFlag ) { return ; }\n\n    var tokensStr = \"\";\n    for( var i=0; i<tokens.length; i++) {\n      var tok = tokens[i];\n      var tokStr = tok.type + \":\" + tok.data;\n      if( tokensStr != \"\" ) {\n        tokensStr += \", \";\n      }\n      tokensStr += tokStr;\n    }\n\n    console.log( tokensStr );\n\n\n    for( var i=0; i<tokens.length; i++) {\n        var tok = tokens[i];\n        console.log(\"token: \",tok);\n    }\n\n  }\n\n  parseLine( line ) {\n\n    var lineRecord = {\n      lineNumber: -1,\n      commands: []\n    };\n\n    var errContext, detail, lineNr=-1;\n    try {\n      errContext=\"tokenizer\";\n      detail=\"init\";\n  \t\tvar toker = new Tokenizer( new StringReader ( line ), this.KEYWORDS );\n\n      detail=\"parsing tokens\";\n      var tokens = toker.tokenize();\n      if( this.debugFlag ) {\n        console.log(\"Tokens after tokenizer\");\n      }\n      this.logTokens( tokens );\n\n      detail=\"internal\";\n      tokens = this.upperCaseNameTokens( tokens );\n      tokens = this.removePadding( tokens );\n      tokens = this.mergeCompTokens( tokens );\n      tokens = this.mergeBrokenUpTokens( tokens );\n\n\n      if( this.debugFlag ) {\n        console.log(\"Tokens after merge\");\n      }\n      this.logTokens( tokens );\n\n      if( tokens.length == 0 ) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\tif( tokens[0].type == \"num\" ) {\n  \t\t\tlineRecord.lineNumber = tokens[0].data;\n        lineNr = tokens[0].data;\n        tokens.shift();\n      }\n\n  \t\tvar context = {\n        tokens: tokens,\n        lineNumber: lineRecord.lineNumber\n      }\n\n      errContext = \"parser\";\n      detail=\"parsing commands\";\n      var commands = this.parseLineCommands( context );\n      lineRecord.commands = commands;\n      lineRecord.raw = line;\n      return lineRecord;\n    }\n    catch ( e ) {\n\n      if( this.erh.isError( e ) ) {\n        if( e.lineNr == -1 ) {\n          if( lineNr != -1 ) {\n            e.lineNr = lineNr;\n          }\n        }\n        throw e;\n      }\n      this.throwError( null, errContext + \" error (\" +e+ \") while \" + detail );\n    }\n  }\n\n  getTokens( line, merge, noPadding  ) {\n\n    try {\n      var toker = new Tokenizer( new StringReader ( line ), this.KEYWORDS );\n      var tokens = toker.tokenize();\n      if( noPadding) { tokens = this.removePadding( tokens ); }\n      if( merge ) {tokens = this.mergeCompTokens( tokens ); }\n      this.logTokens( tokens );\n      return tokens;\n    }\n    catch ( e ) {\n      console.log( e );\n      this.throwError(null,\"getTokens error\",\"internal\");\n    }\n  }\n}\n\n//--EOC \n\n// ## basictokenizer.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/basictokenizer.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/basictokenizer.js\n\nclass StringReader {\n\n\tconstructor( strIn ) {\n\t\t\tthis.buffer = strIn;\n\t\t\tthis.index = 0;\n\t\t\tthis.lineIndex = 1;\n\t\t\tthis.line = 1;\n\t\t\tvar a={}; a.b=strIn;\n\n\t}\n\n\tpeek() {\n\t\treturn this.buffer.substr( this.index,1 );\n\t}\n\tpeek2() {\n\t\treturn this.buffer.substr( this.index,2 );\n\t}\n\n\n\tunconsume( x ) {\n\t\tthis.index -= x;\n\t}\n\n\tconsume() {\n\n\t\tvar c = this.buffer.substr( this.index,1 );\n\t\tthis.index ++;\n\t\tif( c == \"\\n\") {\n\t\t\tthis.line++;\n\t\t\tthis.lineIndex = 1;\n\t\t}\n\n\t}\n\n\tEOF() {\n\t\tvar len = this.buffer.length;\n\t\tif( this.index < len ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\nclass Tokenizer {\n\n\tconstructor( reader, keywords ) {\n\t\t\tthis.tokens = [];\n\t\t\tthis.reader = reader;\n\t\t\tthis.keywords = keywords;\n\t\t\tthis.greedy = false;\n\t}\n\n\tisOpChar( ctx ) {\n\n\t\tvar rv = ctx.c.match(\"[+]|[-]|[*]|[/]|[\\\\^]|[;]\") != null;\n\n\t\treturn [rv,0];\n\n\t}\n\n\tisCompChar( ctx ) {\n\n\t\tvar rv =  (ctx.c == \"<\" || ctx.c == \">\");\n\t\treturn [rv,0];\n\t}\n\n\tisEqChar( ctx ) {\n\t\t\tif( ctx.c == \"=\" ) {\n\t\t\t\treturn [true,0];\n\t\t\t}\n\t\t\treturn [false,0];\n\t}\n\n\n\tisNameChar( ctx  ) {\n\n\t\t//console.log(\"SEQ: \" + ctx.seq);\n\t\tif( ctx.endFound ) {\n\t\t\treturn [false,0];\n\t\t}\n\t\tvar rv = ctx.c.match(\"[a-zA-Z0-9$%?]\") != null;\n\n\t\tif( ctx.c==\"$\" || ctx.c== \"%\") {\n\t\t\tctx.endFound = true;\n\t\t}\n\n\t\tif( this.greedy ) {\n\t\t\tif( this.keywords.indexOf( ctx.seq.toUpperCase() ) >-1 ) {\n\t\t\t\tctx.endFound = true;\n\t\t\t}\n\t\t\telse if( ! (ctx.seq === undefined )) {\n\t\t\t\tvar trappedKW = false;\n\t\t\t\tvar trapped = null;\n\t\t\t\tfor( var i=0; i<this.keywords.length; i++) {\n\t\t\t\t\tvar kw = this.keywords[i];\n\t\t\t\t\tif( ctx.seq.toUpperCase().indexOf( kw ) > 0 )  {\n\t\t\t\t\t\ttrappedKW = true;\n\t\t\t\t\t\ttrapped = kw;\n\t\t\t\t\t\treturn [rv, kw.length ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn [rv,0];\n\t}\n\n\tisNumChar( ctx  ) {\n\t\treturn [(ctx.c.match(\"[0-9\\.~]\") != null),0];\n\t}\n\n\tisPadChar( ctx  ) {\n\t\t\tif( ctx.c == \" \" || ctx.c == \"\\t\" || ctx.c == \"\\n\" || ctx.c == \"\\r\") {\n\t\t\t\treturn [true,0];\n\t\t\t}\n\n\t\t\treturn [false,0];\n\t}\n\n\tisCommandSepChar( ctx  ) {\n\t\t\tif( ctx.c == \":\" ) {\n\t\t\t\treturn [true,0];\n\t\t\t}\n\t\t\treturn [false,0];\n\t}\n\n\n\tisSepChar( ctx  ) {\n\t\t\tif( ctx.c == \",\" ) {\n\t\t\t\treturn [true,0];\n\t\t\t}\n\t\t\treturn [false,0];\n\t}\n\n\tisAnyChar( ctx  ) {\n\t\t\treturn [true,0]; /* Will be executed last */\n\t}\n\n\tisBracket( ctx  ) {\n\t\tif( ctx.c == \"(\" || ctx.c == \")\" || ctx.c == \"[\" || ctx.c == \"]\") {\n\t\t\treturn [true,0];\n\t\t}\n\t\treturn [false,0];\n\t}\n\n\n\tisStrChar( ctx ) {\n\n\t\tif( ctx.endFound ) {\n\t\t\treturn [false,0];\n\t\t}\n\n\t\tif( ctx.index == 0) {\n\t\t\tif( ctx.c==\"\\\"\" ) {\n\t\t\t\tctx.inString = true;\n\t\t\t\treturn [true,0];\n\t\t\t}\n\t\t\treturn [false,0];\n\t\t}\n\t\telse if( ctx.inString ) {\n\t\t\tif ( ctx.index > 0 && ctx.c==\"\\\"\") {\n\t\t\t\tctx.endFound = true;\n\t\t\t}\n\t\t\treturn [true,0];\n\t\t}\n\n\t\treturn [false,0];\n\n\t}\n\n\tnormalizeToken( tok0 ) {\n\t\tvar tok = tok0;\n\n\t\ttok.type = tok0.type;\n\n\t\tif( tok.type == \"str\" ) {\n\t\t\t\ttok.data = tok0.data.substr(1,tok0.data.length-2);\n\t\t}\n\t\treturn tok;\n\t}\n\n\treadChars( read, type0, compareF, tokenType ) {\n\t\tvar tok = { type: type0, data : \"\" }\n\t\tvar ctx = { index:0, prev: null, seq: \"\" };\n\n\t\twhile(!read.EOF()) {\n\n\t\t\tvar c = read.peek();\n\n\t\t\tctx.seq += c;\n\t\t\tctx.c = c;\n\n\t\t\tvar rv = this[compareF ] ( ctx );\n\t\t\tif( rv[1] > 0 ) {\n\t\t\t\t\tread.unconsume( rv[1]-1 );\n\t\t\t\t\tctx.seq = ctx.seq.substr(0,ctx.seq.length-rv[1]) ;\n\t\t\t\t\ttok.data = ctx.seq;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif( !rv[0] ) {\n\t\t\t\treturn this.normalizeToken( tok );\n\t\t\t}\n\t\t\ttok.data += c;\n\t\t\tread.consume();\n\n\t\t\tctx.index++;\n\t\t\tctx.prev = c;\n\n\t\t\tif( tokenType == \"chr\") {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.normalizeToken( tok );\n\t}\n\n\n\ttokenize() {\n\t\tvar read = this.reader;\n\n\t\tvar _this = this;\n\t\tvar tokens = [];\n\n\t\tvar parseRules = [];\n\t\tvar TYPEIX = 0;\n\t\tvar FUNCIX = 1;\n\t\tvar STRINGTYPEIX = 2;\n\n\t\tparseRules.push([\"pad\", \t\t\"isPadChar\"\t\t, \"str\"] );\n\t\tparseRules.push([\"str\", \t\t\"isStrChar\"\t\t, \"str\"] );\n\t\tparseRules.push([\"num\", \t\t\"isNumChar\"\t\t, \"str\"] );\n\t\tparseRules.push([\"name\", \t\t\"isNameChar\"\t, \"str\"] );\n\t\tparseRules.push([\"op\", \t\t\t\"isOpChar\"   \t, \"chr\"] );\n\t\tparseRules.push([\"comp\", \t\t\"isCompChar\"  , \"chr\"] );\n\t\tparseRules.push([\"eq\", \t\t\t\"isEqChar\"   \t, \"chr\"] );\n\t\tparseRules.push([\"bracket\", \"isBracket\"   , \"chr\"] );\n\t\tparseRules.push([\"sep\", \t\t\"isSepChar\"   , \"chr\"] );\n\t\tparseRules.push([\"cmdsep\", \t\"isCommandSepChar\"   , \"chr\"] );\n\t\tparseRules.push([\"trash\", \t\"isAnyChar\"   , \"chr\"] );\n\n\t\twhile( !read.EOF() ) {\n\t\t\tvar c = read.peek();\n\t\t\tvar tokenFound = false;\n\n\t\t\tfor( var i=0; i<parseRules.length; i++) {\n\t\t\t\tvar rule = parseRules[ i ];\n\n\t\t\t\tvar ctx = { index: 0, c:c }\n\t\t\t\tvar rv = this[rule[FUNCIX]]( ctx );\n\t\t\t\tif( rv[0] ) {\n\t\t\t\t\t\tvar tok = this.readChars( read, rule[TYPEIX], rule[FUNCIX], rule[STRINGTYPEIX] );\n\n\t\t\t\t\t\tif( tok.type == \"name\") {\n\t\t\t\t\t\t\ttok.data = tok.data.toUpperCase();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( tok.type == \"trash\") {\n\t\t\t\t\t\t\ttok.detail = \"'\" + tok.data + \"' (ASCII-code=\" + tok.data.charCodeAt(0) + \")\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttokens.push( tok );\n\t\t\t\t\t\ttokenFound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//do nothing\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!tokenFound) {\n\t\t\t\tthrow \"syntax error, unexpected character: '\" + c + \"' =>\" + read.line + \":\" + read.lineIndex;\n\t\t\t}\n\t\t}\n\t\treturn tokens;\n\t}\n}\n\n//--EOC \n\n// ## input.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/input.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/input.js\n\nclass Input {\n\n  constructor( sys ) {\n    this.keyPress = [];\n    this.interactive = false;\n    this.sys = sys;\n  }\n\n  setHandler( hc ) {\n    this.handlerClazz = hc;\n  }\n\n  setInterActive( flag ) {\n\n    this.interactive = flag;\n    this.sys.blinkMode( flag  );\n    \n  }\n\n  inputKeyHandler( e )  {\n\n    var hc = this.handlerClazz;\n    if( !this.interactive ) {\n\n      if( e.keyLabel == \"Escape\" ) {\n          hc[\"stop\"]();\n      }\n      else {\n        this.keyPress.push( e );\n      }\n    }\n    else {\n\n        hc[\"interactiveKeyHandler\"]( e );\n    }\n  }\n\n  getKey() {\n    var key = this.keyPress.shift();\n    if( key ) {\n      return key;\n    }\n    return null;\n  }\n\n}\n\nclass MutedInput {\n\n  setHandler( hc ) {}\n  setActive( flag ) {}\n  getKey() { return null; }\n  inputKeyHandler(e) {}\n  getKey() { return null;}\n\n}\n\n//--EOC \n\n// ## processes.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/processes.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/processes.js\n\nclass processes {\n\n\tconstructor( sys ) {\n\n\t\tthis.sys = sys;\n\t\tthis.processes = [];\n\t\tthis.count = 0;\n\n\t\tvar _this = this;\n    var processes = _this.processes;\n\n\t\tthis.sys.log(\"Starting process interval\");\n\t\tsetInterval(function()  {\n\n\t\t\tfor( var i=0; i<processes.length; i++ ) {\n\t\t\t\tif( processes[i] ) {\n\t\t\t\t\tprocesses[ i ].cycle();\n\t\t\t\t\t//_this.count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\tgetTicks() {\n\t\treturn this.count;\n\t}\n\n\tregister( obj ) {\n\n\t\tvar newId = this.processes.length-1;\n\n\t\tthis.processes[newId] = obj;\n\t\tobj.processId = newId;\n\n\t\treturn newId;\n\t}\n\n\tget( id ) {\n\t\treturn this.processes[ id ];\n\t}\n\n\tregister( obj ) {\n\n\t\tvar newId = this.processes.length;\n\n\t\tthis.processes.push( obj );\n\n\t\tobj.processId = newId;\n\t\treturn newId;\n\t}\n\n\n\tgetRoot() {\n\n\t\treturn this.processes[ 0 ];\n\t}\n}\n\n//--EOC \n\n// ## ../../rwbuffers/worker/textarea.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/../../rwbuffers/worker/textarea.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/../../rwbuffers/worker/textarea.js\n\nclass TextArea {\n\n\tconstructor( sys ) {\n\t\tthis.sys = sys;\n\t\tthis.cursorOn = false;\n\t\tthis.cols = 80;\n\t\tthis.rows = 30;\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.hidden = false;\n\n\t\tthis.dc = false;\n\t\tthis.dcCmd = false;\n\n\t\tthis.colors ={};\n\t\tthis.reverse = false;\n\n\t\tthis.colors.txtBgColor= 0;\n\t\tthis.colors.txtColor = 5;\n\n\t\tthis.initialized = false;\n\n\t\tthis.changes = { all: false, list: [] };\n\t}\n\n\treInit( w, h ) {\n\t\tthis._int_initMode( w, h );\n\t}\n\n\n\tdestroy() {\n\n\t\t\tthis.cellel = undefined;\n\n\t\t\tthis.changes = { all: false, list: [] };\n\t\t\tthis.initialized = false;\n\t\t}\n\n\n\t_int_addChangeAll() {\n\n\t\t this.changes.all = true;\n\t\t this.changes.list = [];\n\n\t }\n\n\t_int_addChange( area ) {\n\n\t\t\tif(  this.changes.all ) {\n\t\t\t\tif( this.changes.list.length > 0 ) {\n\t\t\t\t\t\tthis.changes.list = [];\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar clist = this.changes.list;\n\t\t\tif( clist.length > 0 ) {\n\t\t\t\tvar lc = clist[ clist.length -1 ];\n\t\t\t\tvar nc = area;\n\t\t\t\tif( lc.y1 == lc.y2 && nc.y1 == nc.y2 && lc.y1 == nc.y1) {\n\t\t\t\t\tif( nc.x1 == lc.x2 +1 ) {\n\t\t\t\t\t\t\tvar x2 = lc.x2;\n\t\t\t\t\t\t\tvar temp=1;\n\t\t\t\t\t\t\tvar changesTargetArray = lc.cells[0];\n\t\t\t\t\t\t\tfor( var i=0; i<area.cells[0].length; i++) {\n\t\t\t\t\t\t\t\tvar cell = area.cells[0][i];\n\t\t\t\t\t\t\t\tchangesTargetArray.push( cell );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlc.x2 = nc.x2;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t \tthis.changes.list.push( area );\n\n\t }\n\n\t_int_flushAll() {\n\t\t\tthis.changes.all = true;\n\t\t\tthis.changes.list = [];\n\n\t\t\tthis._int_flush();\n\n\t\t}\n\n\t\t_int_getArea( x1, y1, x2, y2 ) {\n\t\t\tvar cells = [];\n\n\t\t\tfor( var y=y1; y<=y2; y++) {\n\t\t\t\tvar row = [];\n\t\t\t\tfor( var x=x1; x<=x2; x++) {\n\t\t\t\t\trow.push( this.cellel[ y][ x] );\n\t\t\t\t}\n\t\t\t\tcells.push( row );\n\t\t\t}\n\n\t\t\tvar area =\n\t\t\t{\n\t\t\t\t cells: cells,\n\t\t\t\t x1: x1,\n\t\t\t\t y1: y1,\n\t\t\t\t x2: x2,\n\t\t\t\t y2: y2\n\t\t\t};\n\n\t\t\treturn area;\n\n\t\t}\n\n\t _int_flush() {\n\n\t\t\tif( this.changes.all ) {\n\t\t\t\tthis.sys.post( \"textupdate-all\",\n\t\t\t\t\t\t{\n \t\t\t\t\t\t\tfg: this.colors.txtColor,\n\t\t\t\t\t\t\tbg: this.colors.txtBgColor,\n\t\t\t\t\t\t\tcx: this.x,\n\t\t\t\t\t\t\tcy: this.y,\n\t\t\t\t\t\t\tcells: this.cellel\n\t\t\t\t\t\t} );\n\n\t\t\t\tthis.changes.all = false;\n\n\n\t\t\t}\n\t\t\telse if( this.changes.list.length > 0 ) {\n\n\t\t\t\tthis.sys.post( \"textupdate\",\n\t\t\t\t\t{\n\t\t\t\t\t\tfg: this.colors.txtColor,\n\t\t\t\t\t\tbg: this.colors.txtBgColor,\n\t\t\t\t\t\tcx: this.x,\n\t\t\t\t\t\tcy: this.y,\n\t\t\t\t\t\tareasList:  this.changes.list\n\t\t\t\t\t}  );\n\t\t\t\tthis.changes.list = [];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.sys.post( \"textupdate\",\n\t\t\t\t\t{\n\t\t\t\t\t\tfg: this.colors.txtColor,\n\t\t\t\t\t\tbg: this.colors.txtBgColor,\n\t\t\t\t\t\tcx: this.x,\n\t\t\t\t\t\tcy: this.y,\n\t\t\t\t\t\tareasList:  []\n\t\t\t\t\t}  );\n\n\t\t\t}\n\n\t\t}\n\n\n\n\t\tattach( w, h ) {\n\t\t\tthis._int_initMode( w, h);\n\t\t}\n\n\t\t_int_initMode( w, h ) {\n\n\t\t\tif( this.initialized ) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t\tvar sys = this.sys;\n\t\t\t//var msgs = sys.init.queuedMessages; TODO, what to do with queued messages\n\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 0;\n\n\t\t\tthis.rows = h;\n\t\t\tthis.cols = w;\n\n\t\t\tthis.colors.txtBgColor= 0;\n\t\t\tthis.colors.txtColor = 5;\n\n\t\t\tthis.cellel = [];\n\t\t\tfor( var y=0; y<this.rows; y++) {\n\t\t\t\tvar rowArray = [];\n\t\t\t\tfor( var x=0; x<this.cols; x++) {\n\t\t\t\t\tvar cell = {\n\t\t\t\t\t\ttxt: \" \",\n\t\t\t\t\t\tfg: this.colors.txtColor,\n\t\t\t\t\t\tbg: this.colors.txtBgColor\n\t\t\t\t\t}\n\t\t\t\t\trowArray.push( cell );\n\t\t\t\t}\n\t\t\t\tthis.cellel.push( rowArray );\n\t\t\t}\n\n\t\t\tthis.changes = { all: true, list: [] };\n\n \t\t  var _this = this;\n\n\t\t\tthis._int_flushAll();\n\n\t\t\tthis.sys.log(\"TBCON w Ready.\");\n\n\t\t\tthis.initialized = true;\n\t}\n\n\n\tgetDimensions() {\n\t\t\treturn [this.cols, this.rows ];\n\t}\n\n\tgetCurrentLine() {\n\t\tvar y = this.y;\n\t\tvar str = \"\";\n\t\tfor( var i = 0; i< this.cols; i++) {\n\t\t\tstr += this.cellel[ y ][ i ].txt;\n\t\t}\n\t\treturn str;\n\t}\n\n\n\n\tclear() {\n\n\t\tthis.cellel = [];\n\t\tfor( var y=0; y<this.rows; y++) {\n\t\t\tvar rowArray = [];\n\t\t\tfor( var x=0; x<this.cols; x++) {\n\t\t\t\tvar cell = {\n\t\t\t\t\ttxt: \" \",\n\t\t\t\t\tfg: this.colors.txtColor,\n\t\t\t\t\tbg: this.colors.txtBgColor\n\t\t\t\t}\n\t\t\t\trowArray.push( cell );\n\t\t\t}\n\t\t\tthis.cellel.push( rowArray );\n\t\t}\n\n\t\tthis.changes = { all: true, list: [] };\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis._int_flushAll();\n\t}\n\n\n\tcursorMove( dir ) {\n\t\tif( dir == \"up\" ) {\n\t\t\tif( this.y>0) {\n\t\t\t\tthis.y--;\n\t\t\t}\n\t\t}\n\t\telse if( dir == \"down\" ) {\n\t\t\tif( this.y< (this.rows-1)) {\n\t\t\t\tthis.y++;\n\t\t\t}\n\t\t}\n\t\tif( dir == \"left\" ) {\n\t\t\tif( this.x>0) {\n\t\t\t\tthis.x--;\n\t\t\t}\n\t\t}\n\t\telse if( dir == \"right\" ) {\n\t\t\tif( this.x< (this.cols-1)) {\n\t\t\t\tthis.x++;\n\t\t\t}\n\t\t}\n\t\tthis._int_flush();\n\t}\n\n\tbackspace() {\n\t\tif( this.x == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.x--;\n\t\tvar cell = this.cellel[ this.y ][ this.x ];\n\t\tcell.txt = \" \";\n\n\t\tvar area = this._int_getArea( this.x, this.y, this.x, this.y, );\n\t\tthis._int_addChange( area );\n\t\tthis._int_flush();\n\t}\n\n\tnl() {\n\n\t\t\tthis.x = 0;\n\t\t\tthis.y ++;\n\n\t\t\tif( this.y >= this.rows ) {\n\n\t\t\t\tthis.__int_scrollDown();\n\t\t\t\tthis.y = this.rows -1;\n\n\t\t\t\tthis._int_flushAll();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._int_flush();\n\n\t}\n\n\t__int_nl() {\n\t\t\tthis.x = 0;\n\t\t\tthis.y ++;\n\t\t\tif( this.y >= this.rows ) {\n\t\t\t\tthis.__int_scrollDown();\n\t\t\t\tthis.y = this.rows -1;\n\t\t\t\treturn { scroll: true }\n\t\t\t}\n\t\t\treturn { scroll: false }\n\n\t}\n\n\twriteln( str ) {\n\n\t\t\tfor( var i=0; i<str.length; i++) {\n\t\t\t\tvar c = str.substr(i,1);\n\t\t\t\tthis.__int_write_direct_ch( c );\n\t\t\t}\n\t\t\tvar stat = this.__int_nl();\n\t\t\tif( stat.scroll ) {\n\t\t\t\t\tthis._int_addChangeAll();\n\t\t\t}\n\t\t\tthis._int_flush();\n\t}\n\n\t_int_write( str ) {\n\t\tfor (const c of str) {\n\t\t\tthis.__int_write_direct_ch( c );\n\t\t}\n\t}\n\n\twrite( str ) {\n\t\t\tthis._int_write( str );\n\n\t\t\tthis._int_flush();\n\t}\n\n\n\n\t__int_write_direct_ch( ch ) {\n\n\t\tvar code = ch.codePointAt(0);\n\n\t\tif( this.dc && this.dcCmd ) {\n\n\t\t\tthis.dc = false;\n\t\t\tthis.dcCmd = false;\n\t\t\tthis._int_control( this.dcCmdCode, code );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif( this.dc && !this.dcCmd ) {\n\t\t\tthis.dcCmd = true;\n\t\t\tthis.dcCmdCode = code;\n\t\t\treturn;\n\t\t}\n\n\t\tif( code == 17 ) {\n\t\t\t//DC1\n\t\t\tthis.dc = true;\n\t\t\tthis.dcCmd = false;\n\t\t\treturn;\n\t\t}\n\n\t\tvar cell = this.cellel[ this.y ][ this.x ];\n\n\t\tif( cell == null ) {\n\t\t\tconsole.log( \"cell at \" + this.x + \",\" + this.y +\" == null \");\n\t\t\treturn;\n\t\t}\n\n\t\tcell.txt = ch;\n\n\t\tif( !this.reverse  ) {\n\t\t\tcell.fg = this.colors.txtColor;\n\t\t\tcell.bg = this.colors.txtBgColor;\n\t\t}\n\t\telse {\n\t\t\tcell.bg = this.colors.txtColor;\n\t\t\tcell.fg = this.colors.txtBgColor;\n\t\t}\n\n\t\tvar oldx = this.x;\n\t\tvar oldy = this.y;\n\n\t\tthis.x++;\n\t\tif( this.x >= this.cols ) {\n\t\t\tthis.x = 0;\n\t\t\tvar stat = this.__int_nl();\n\t\t\tif( stat.scroll ) {\n\t\t\t\tthis._int_addChangeAll();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar area = this._int_getArea( oldx, oldy, oldx, oldy );\n\t\tthis._int_addChange( area );\n\n\t}\n\n\twritec( chr ) {\n\n\t\tif( chr == \"\\n\" ) {\n\t\t\tvar stat = this.__int_nl();\n\t\t\tif( stat.scroll ) {\n\t\t\t\t\tthis._int_addChangeAll();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\tthis.__int_write_direct_ch( chr );\n\t\tthis._int_flush();\n\t}\n\n\n\t_int_setPos( x, y ) {\n\n\t\tif(x >= 0) {\n\t\t\t\tthis.x = x;\n\t\t}\n\t\tif(y >= 0) {\n\t\t\t\tthis.y = y;\n\t\t}\n\n\t\tif( this.x >= this.cols ) { this.x = this.cols-1;}\n\t\tif( this.y >= this.rows ) { this.y = this.rows-1;}\n\t}\n\n\n\tsetPos( x, y ) {\n\n\t\tthis._int_setPos( x,y );\n\n\t\tthis._int_flush();\n\t}\n\n\n\t_int_control( chr, data ) {\n\n\t\tif( chr == 16 ) {\n\t\t\tthis.colors.txtColor = data;\n\t\t}\n\t\telse if( chr == 17 ) {\n\t\t\tthis.colors.txtBgColor = data;\n\t\t}\n\t\telse if( chr == 18 ) {\n\t\t\tdocument.body.style.backgroundColor = this.palette[ data ];  //TODO\n\t\t}\n\t\telse if( chr == 24 ) {  //CANCEL -> (we map it to) Clear Screen\n\t\t\tthis.clear();\n\t\t}\n\t\telse if( chr == 25 ) {  //End of Medium -> (we map it to) Hide\n\t\t\t//this.hide();   TODO\n\t\t}\n\t\telse if( chr == 64 ) {\n\t\t\tthis.reverse = false;\n\t\t}\n\t\telse if( chr == 65 ) {\n\t\t\tthis.reverse = true;\n\t\t}\n\t\telse {\n\t\t\tthis.__int_write_direct_ch( \"?\" );\n\t\t}\n\t}\n\n\tsetCursorPos( x, y ) {\n\t\tif( x<0 || y<0 ) { return ; }\n\t\tif( x>=this.cols || y>= this.rows ) { return ; }\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\tthis._int_flush();\n\t}\n\n\tgetCursorPos() {\n\t\t\treturn [this.x, this.y ];\n\t}\n\n\tcontrol( chr, data ) {\n\n\t\tthis._int_control( chr, data );\n\t\tthis._int_flush();\n\n\t}\n\n\tcenter( str ) {\n\n\t\t\tif( str.length > this.cols ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar l = str.length;\n\t\t\tvar l2 = Math.floor( l/2 );\n\n\t\t\tvar wh = this.getDimensions();\n\n\t\t\tvar x = Math.floor( wh[0] / 2 ) - l2;\n\t\t\tthis._int_setPos( x, -1 );\n\t\t\tthis._int_write( str );\n\n\t\t\tvar area = this._int_getArea( 0, this.y, this.cols-1, this.y );\n\t\t\tthis._int_addChange( area );\n\t\t\tthis._int_flush();\n\n\t}\n\n\t__int_scrollDown() {\n\t\tfor( var x=0; x<this.cols; x++) {\n\t\t\tfor( var y=0; y<this.rows-1; y++) {\n\t\t\t\tvar cell = this.cellel[ y ][ x ];\n\t\t\t\tvar cellyp1 = this.cellel[ y+1 ][ x ];\n\n\t\t\t\tcell.txt = cellyp1.txt;\n\t\t\t\tcell.fg = cellyp1.fg;\n\t\t\t\tcell.bg = cellyp1.bg;\n\t\t\t}\n\t\t}\n\n\t\t//fill last row\n\t\tvar y2 = this.rows-1;\n\t\tfor( var x=0; x<this.cols; x++) {\n\t\t\tvar cell = this.cellel[ y2 ][ x ];\n\t\t\tcell.txt = \" \";\n\t\t\tif( !this.reverse  ) {\n\t\t\t\tcell.fg = this.colors.txtColor;\n\t\t\t\tcell.bg = undefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcell.fg = this.colors.txtColor;\n\t\t\t\tcell.bg = \"rgba(0,255,0,0.0)\";\n\t\t\t}\n\t\t}\n\n\t}\n}\n\n//--EOC \n\n// ## ../../rwbuffers/worker/bitmap.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/../../rwbuffers/worker/bitmap.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/../../rwbuffers/worker/bitmap.js\n\nclass BitMap {\n\n\tconstructor( sys ) {\n\t\tthis.sys = sys;\n    this.lineColor = 1;\n    this.changes = {};\n    this.changes.flag = false;\n    this.changes.pixels = [];\n  }\n\n\treInit( w, h ) {\n\t\tthis.width = w;\n    this.height = h;\n\t}\n\n  attach( w, h ) {\n\t\tthis.reInit( w, h );\n\t}\n\n  isActive() {\n    return this.width > 0;\n  }\n\n  getDimensions() {\n\t\t\treturn [this.width, this.height ];\n\t}\n\n\n  line( x0,y0, x1, y1 ) {\n    this.sys.post( \"nativeout\",{\n      action: \"line\",\n      params: { x0:x0, y0:y0, x1:x1, y1:y1 }\n    });\n  }\n\n\n  triggerFlush() {\n\n    this._int_flush();\n\n  }\n\n  _int_flush() {\n\n    if( this.changes.flag ) {\n\n      this.sys.post( \"gfxupdate\",\n        {\n          pixels: this.changes.pixels\n        }\n      );\n    }\n\n    pixels: this.changes.pixels = [];\n    this.changes.flag = false;\n\n  }\n\n  plot( x, y ) {\n    var pixel = { x: Math.floor(x), y:Math.floor(y), c:this.lineColor };\n\n    this.changes.pixels.push( pixel );\n    this.changes.flag = true;\n\n  }\n\n  setLineColor( c ) {\n    this.lineColor = c;\n    this.sys.post( \"nativeout\",{\n      action: \"gcolor\",\n      params: { c: c }\n    });\n  }\n\n\tdestroy() {\n\n\t}\n}\n\n//--EOC \n\n// ## workerbootstrap_static.js ==========---------- \n// -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\n//  src/sys/modules/basic/worker/workerbootstrap_static.js\n//  BY packworkers.js -- src/sys/modules/basic/worker/workerbootstrap_static.js\n\nsys.log(\"Starting\");\nstart_sys();\n\n//--EOC \n\n"],"names":["sys","appName","unique","console","post","type","message","postMessage","log","args","Array","prototype","slice","call","arguments","args2","i","length","push","JSON","stringify","logerr","setDisplayMode","rt","m","processId","blinkMode","html","htmlnode","get","wait_for_result","export","code","init_sys","BasicArray","constructor","name","indices","defaultValue","this","buffer","getIndexCount","_check","set","val","ptr","last","undefined","ErrorHandler","newError","clazz","detail","context","lineNr","throwError","fromSerializedError","s","lineNr0","isSerializedError","parts","substr","split","e","startsWith","isError","Object","toString","clss","Editor","output","out","addRunTime","runTime","interactiveKeyHandler","keyLabel","command","getCurrentLine","writeln","executeInteractiveLine","getCursorPos","backspace","cursorMove","key","write","BasicRuntime","editor","debugFlag","listSpeed","bitmap","bout","input","setHandler","setInterActive","program","runFlag","waitForMessageFlag","waitForMessageVariable","executeLineFlag","goPlayExampleFlag","breakCycleFlag","inputFlag","listFlag","immersiveFlag","gosubReturn","nullTime","Date","getTime","turboMode","cmdCountPerCycleDefault","cmdCountPerCycleTurbo","cmdCountPerCycle","commands","BasicCommands","extendedcommands","ExtendedCommands","erh","vars","functions","data","kbBuffer","yPos","lineMarkers","SHORTLINE","LONGLINESTART","LONGLINEEND","forContext","default","outputCallBacksAll","lineOverFlow","method","scroll","clearScreen","outputCallBacksClScr","synchClock","exitMode","code2colMap","km","symbolTable","up","down","left","right","black","white","red","cyan","purple","green","blue","yellow","orange","brown","pink","grey1","grey2","grey3","backmap","mapInfo","entries","symbolTableBM","startWaitForMessage","variable","receiveMessage","_message","_data","reInit","textW","textH","bitmapW","bitmapH","printReady","stop","runStop","listStop","handleLineInput","lineInput","HandleStopped","importPGMHandler","content","filename","pgm","textLinesToBas","fileName","bootPGM","setProgram","printError","exitProgram","closeWindow","windowId","enterListMode","list","listPointer","setExitMode","v","nullClock","setHours","setSeconds","setMinutes","setMilliseconds","setTurbo","on","appendProgram","exists","j","sort","a","b","getProgram","getProgramState","runPointer","runPointer2","setProgramState","pgmState","updateEditMode","setEditModeCallBacks","_setByteBits","bits","byte","_getByteBits","masks","results","supressLine","explicitline","line1","onLineStr","printInfo","toUpperCase","printLine","reverseOn","print","cursorHome","getJiffyTime","millis","Math","floor","hours","minutes","reset","hard","muteReady","writel","clrPGM","compressPGMText","pgmTxt","p","Parser","init","kws","getKeyWordCodes","txt2","kw","replaceAll","toLowerCase","String","fromCharCode","getProgramAsTextNoPETSCII","text","l","prepareLineForExportNoPETSCII","trim","getProgramAsText","prepareLineForExport","txt0","txt","dst","c","charCodeAt","symdef","charAt","src","str1","str2","rv","indexOf","replace","rebuildNoPETSCIILineString","raw","noPetsciiLine","parseLine","toLower","cc","prevCharIsQuote","nextCharIsQuote","dst2","ResolveStringSymbolToCode","x","prepareLineForImport","num","parseInt","getProgramLines","padZeros2","evalExpressionPart","parseFloat","endsWith","PI","varIntName","arr","ai","evalExpression","values","params","par","value","ecommands","cmds","nFunName","functionName","stc","fName","parValue","restore","functRecord","expr","op","pow","negate","binaryNegate","exitInputState","clearCursor","breakCycle","cycle","cmdCount","isActive","triggerFlush","countdown","listCodeLine","bf","runCommands","af","executedCount","retreiveRuntimeLine","err","doReturn","oldPointers","pop","gosub","line","len","retLine","retCmd","goto","line0","found","startAsGoto","runPGM","isRunning","isListing","isInput","readData","dataPointer","result","printChar","rawLine","rebuildLineString","nr","removePadding","renumbering","addSmartPadding","shortenKeywords","newString","tokens","getTokens","foundGoto","newLine","lineIsData","controlKW","lineIsRem","renumberProgram","start","gap","newLineNr","lineNumbers","newLineNr2","ceil","lRec","PETSCIIreplace","keywordCompress","compressProgram","normalizeProgram","restoreDataPtr","bak1","bak2","k","doForInit","from","to","step","varName","cmdPointer","cmdArrayLen","linePointersLen","ctx","ctxv","jumpTo","doForNext","nextVarName","retreiveLine","parseLineNumber","commandToString","cmd","statementName","var","limit","TERMINATE_W_JUMP","end","cnt","cn","onCommand","onExpr","onLineNrs","jump","nextVar","ix","arrRec","arrayNames","pardefs","mycommands","enabled","varType","arrayAssignment","expression","setVar","old","linenr","oldProgram","new","removePgmLine","pgm2","pl","padSpaces6","no","padSpaces8","insertPgmLine","insertPgmLineLocal","myProgram","lines","lineNumber","startConsoleDataInput","inputVars","inputVarsPointer","str","isInputCommand","qMark","isNaN","runtime","func","statementList","getStatements","stats","getOwnPropertyNames","stats2","getFunctions","_stat_cls","pars","control","_stat_reverse","reverse","_stat_gcolor","col","setLineColor","_stat_line","_stat_plot","plot","_stat_center","string","center","_stat_locate","row","setCursorPos","_stat_hide","_if_html","_stat_html","handleIx","htmlHandle","htmlValue","htmlAppend","exparts","exparts2","_stat_htmlnode","node","_stat_color","bgcol","border","_stat_display","mode","_stat_border","bcol","_stat_export","_fun_uc_DLR_","fromCodePoint","_fun_dc_DLR_","_fun_html_DLR_","_fun_width","getDimensions","_fun_height","_fun_cols","_fun_columns","_fun_rows","pgmman","addRuntime","randnrs","random","randIndex","randStep","_stat_new","_stat_list","_if_get","_if_read","_if_input","_if_list","_if_run","_stat_read","p0","_stat_get","getKey","_stat_input","con","_stat_restore","_stat_load","load","_stat_save","save","_stat_sys","_stat_wait","_stat_verify","_stat_run","_if_print","isNumber","isFinite","normalizeIfNumber","_stat_print","nl","_stat_clr","_fun_chr_DLR_","_fun_str_DLR_","_fun_abs","_fun_len","_fun_asc","_fun_val","_fun_exp","exp","intGetNextRand","intSeedRand","x0","base","year","day","d","seedModifier","round","_fun_rnd","_fun_sqr","sqrt","_fun_log","_fun_pos","getLinePos","_fun_left_DLR_","_fun_right_DLR_","_fun_mid_DLR_","_fun_fre","_fun_sin","sin","_fun_tan","tan","_fun_atn","atan","_fun_cos","cos","_fun_spc","_max","_fun_usr","_fun_int","_fun_tab","_fun_sgn","_fun_jiffies","ecmds","CTRL_KW","SHORTCUT_KW","KEYWORDS","more","screenCodes2CTRLTable","tab","KWCODES","padArray","missing","clazz2","upperCaseNameTokens","token","tokens2","mergeCompTokens","token2","mergeBrokenUpTokens","splits","p1","p2","p3","whole","r","mergeTokenRange","record","tokens3","parseFunParList","even","endTokens","parseBoolExpression","shift","peekIfNextIsOpenBracket","parseSubExpression","tokensToString","endTokensToString","endTokenArray","et","endToken","isEndToken","endTokenArry","parseSimpleExpression","endLoop","returnValue","pair","endTokens0","first","eList","parseExpression","opData","dbg","dbg2","retExpr","newParts","part","unshift","subEndTokens","isUserDefinedFunctionCall","parameters","subExpression","groupParts","oldExpression","parts0","parts1","parts2","prevPart","subExpr","normalizeStatementName","parseAssignment","preTokens","nameToken","token0","parseArrayAssignment","parseControlStructure","controlToken","expr_fn","nums","onType","expr_from","expr_to","expr_step","explicit","nextcommand","expr1","insert","block","parseLineCommands","bi","dataArray","parseStatementCall","endCommand","keyword","oken","logTokens","tokensStr","tok","errContext","lineRecord","toker","Tokenizer","StringReader","tokenize","merge","noPadding","strIn","index","lineIndex","peek","peek2","unconsume","consume","EOF","reader","keywords","greedy","isOpChar","match","isCompChar","isEqChar","isNameChar","endFound","seq","isNumChar","isPadChar","isCommandSepChar","isSepChar","isAnyChar","isBracket","isStrChar","inString","normalizeToken","tok0","readChars","read","type0","compareF","tokenType","prev","parseRules","tokenFound","rule","processes","count","setInterval","getTicks","register","obj","newId","id","getRoot","keyPress","interactive","hc","handlerClazz","flag","inputKeyHandler","cursorOn","cols","rows","y","hidden","dc","dcCmd","colors","txtBgColor","txtColor","initialized","changes","all","w","h","_int_initMode","destroy","cellel","_int_addChangeAll","_int_addChange","area","clist","lc","nc","y1","y2","x1","x2","changesTargetArray","cells","cell","_int_flushAll","_int_flush","_int_getArea","fg","bg","cx","cy","areasList","attach","rowArray","clear","dir","__int_scrollDown","__int_nl","__int_write_direct_ch","_int_write","ch","codePointAt","_int_control","dcCmdCode","oldx","oldy","writec","chr","_int_setPos","setPos","document","body","style","backgroundColor","palette","l2","wh","cellyp1","lineColor","pixels","width","height","y0","action","pixel","self","onmessage","messageObject","pgmData","ok","QPath"],"sourceRoot":""}